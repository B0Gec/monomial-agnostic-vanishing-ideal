[V1, scale=1.0, run #0] abm: 0.0000,0.0298
================================
data: V1 (extra dim = 0)
condition
{'npolys': [0, 0, 0, 0, 0, 0, 1], 'cmp': ['==', '==', '==', '==', '==', '==', '==']}
================================
Traceback (most recent call last):
  File "/Users/kera/Dropbox/RESEARCH/Experiments/javi/mavi/experiment/gwn_stability/src/experiment3.py", line 195, in <module>
    exp3.run(args.data_name, 
  File "/Users/kera/Dropbox/RESEARCH/Experiments/javi/mavi/experiment/gwn_stability/src/experiment3.py", line 106, in run
    d = coeff_set_distance(G, basis0[method], unsigned=True, normalize=True)
KeyError: 'abm'
[V3, scale=1.0, run #0] abm: 0.0000,0.0240
================================
data: V3 (extra dim = 0)
condition
{'npolys': [0, 0, 0, 0, 1], 'cmp': ['==', '==', '==', '==', '==']}
================================
Traceback (most recent call last):
  File "/Users/kera/Dropbox/RESEARCH/Experiments/javi/mavi/experiment/gwn_stability/src/experiment3.py", line 195, in <module>
    exp3.run(args.data_name, 
  File "/Users/kera/Dropbox/RESEARCH/Experiments/javi/mavi/experiment/gwn_stability/src/experiment3.py", line 106, in run
    d = coeff_set_distance(G, basis0[method], unsigned=True, normalize=True)
KeyError: 'abm'
[V1, scale=1.0, run #0] abm: 0.0000,0.0206
[V1, scale=1.0, run #0] abm-gwn: 0.0000,0.0033
================================
data: V1 (extra dim = 0)
condition
{'npolys': [0, 0, 0, 0, 0, 0, 1], 'cmp': ['==', '==', '==', '==', '==', '==', '==']}
================================
Traceback (most recent call last):
  File "/Users/kera/Dropbox/RESEARCH/Experiments/javi/mavi/experiment/gwn_stability/src/experiment3.py", line 195, in <module>
    exp3.run(args.data_name, 
  File "/Users/kera/Dropbox/RESEARCH/Experiments/javi/mavi/experiment/gwn_stability/src/experiment3.py", line 106, in run
    d = coeff_set_distance(G, basis0[method], unsigned=True, normalize=True)
  File "/Users/kera/Dropbox/RESEARCH/Experiments/javi/mavi/./mavi/numpy/util/symbolic_util.py", line 89, in coeff_set_distance
    assert(len(G1) == len(G2))
AssertionError
[V3, scale=1.0, run #0] abm: 0.0000,0.0318
[V3, scale=1.0, run #0] abm-gwn: 0.0008,0.0063
================================
data: V3 (extra dim = 0)
condition
{'npolys': [0, 0, 0, 0, 1], 'cmp': ['==', '==', '==', '==', '==']}
================================
Traceback (most recent call last):
  File "/Users/kera/Dropbox/RESEARCH/Experiments/javi/mavi/experiment/gwn_stability/src/experiment3.py", line 195, in <module>
    exp3.run(args.data_name, 
  File "/Users/kera/Dropbox/RESEARCH/Experiments/javi/mavi/experiment/gwn_stability/src/experiment3.py", line 106, in run
    d = coeff_set_distance(G, basis0[method], unsigned=True, normalize=True)
  File "/Users/kera/Dropbox/RESEARCH/Experiments/javi/mavi/./mavi/numpy/util/symbolic_util.py", line 89, in coeff_set_distance
    assert(len(G1) == len(G2))
AssertionError
[V2, scale=1.0, run #0] abm: 0.0000,0.1654
[V2, scale=1.0, run #0] abm-gwn: 0.0086,0.0428
================================
data: V2 (extra dim = 0)
condition
{'npolys': [0, 1, 0, 1], 'cmp': ['==', '==', '==', '==']}
================================
new range: -0.00099, 1.0000099999999998
new range: -0.00099, 0.38401
Traceback (most recent call last):
  File "/Users/kera/Dropbox/RESEARCH/Experiments/javi/mavi/experiment/gwn_stability/src/experiment3.py", line 195, in <module>
    exp3.run(args.data_name, 
  File "/Users/kera/Dropbox/RESEARCH/Experiments/javi/mavi/experiment/gwn_stability/src/experiment3.py", line 106, in run
    d = coeff_set_distance(G, basis0[method], unsigned=True, normalize=True)
  File "/Users/kera/Dropbox/RESEARCH/Experiments/javi/mavi/./mavi/numpy/util/symbolic_util.py", line 89, in coeff_set_distance
    assert(len(G1) == len(G2))
AssertionError
[V1, scale=1.0, run #0] abm: 0.0000,0.0383
[V3, scale=1.0, run #0] abm: 0.0000,0.0243
[V2, scale=1.0, run #0] abm: 0.0000,0.1848
[V1, scale=1.0, run #0] abm: 0.0000,0.0349
[V3, scale=1.0, run #0] abm: 0.0000,0.0292
[V2, scale=1.0, run #0] abm: 0.0000,0.2385
[V1, scale=1.0, run #0] abm-gwn: 0.0000,0.0442
================================
data: V1 (extra dim = 0)
condition
{'npolys': [0, 0, 0, 0, 0, 0, 1], 'cmp': ['==', '==', '==', '==', '==', '==', '==']}
================================
================================
data: V1 (extra dim = 0)
condition
{'npolys': [0, 0, 0, 0, 0, 0, 1], 'cmp': ['==', '==', '==', '==', '==', '==', '==']}
================================
================================
data: V1 (extra dim = 0)
condition
{'npolys': [0, 0, 0, 0, 0, 0, 1], 'cmp': ['==', '==', '==', '==', '==', '==', '==']}
================================
   scale   method  ...              coeff dist (std)  success rate
0    1.0      abm  ...  1.4456524589963708e-14 (0.0)   1/1(100.0%)
0    1.0  abm-gwn  ...  2.1924949514359596e-06 (0.0)   1/1(100.0%)

[2 rows x 7 columns]
[V3, scale=1.0, run #0] abm-gwn: 0.0014,0.0825
================================
data: V3 (extra dim = 0)
condition
{'npolys': [0, 0, 0, 0, 1], 'cmp': ['==', '==', '==', '==', '==']}
================================
================================
data: V3 (extra dim = 0)
condition
{'npolys': [0, 0, 0, 0, 1], 'cmp': ['==', '==', '==', '==', '==']}
================================
================================
data: V3 (extra dim = 0)
condition
{'npolys': [0, 0, 0, 0, 1], 'cmp': ['==', '==', '==', '==', '==']}
================================
   scale   method  ...             coeff dist (std)  success rate
0    1.0      abm  ...  9.963103069575352e-15 (0.0)   1/1(100.0%)
0    1.0  abm-gwn  ...   0.006166179326479746 (0.0)   1/1(100.0%)

[2 rows x 7 columns]
[V2, scale=1.0, run #0] abm-gwn: 0.4038,0.4615
================================
data: V2 (extra dim = 0)
condition
{'npolys': [0, 1, 0, 1], 'cmp': ['==', '==', '==', '==']}
================================
================================
data: V2 (extra dim = 0)
condition
{'npolys': [0, 1, 0, 1], 'cmp': ['==', '==', '==', '==']}
================================
================================
data: V2 (extra dim = 0)
condition
{'npolys': [0, 1, 0, 1], 'cmp': ['==', '==', '==', '==']}
================================
new range: -0.00099, 1.0000099999999998
new range: -0.00099, 1.0000099999999998
   scale   method  ...             coeff dist (std)  success rate
0    1.0      abm  ...  1.513688943374036e-15 (0.0)   1/1(100.0%)
0    1.0  abm-gwn  ...    0.17134987288922865 (0.0)   1/1(100.0%)

[2 rows x 7 columns]
[V2, scale=0.01, run #0] abm: 0.0000,0.0000
[V2, scale=0.01, run #0] abm: nan,nan
[V1, scale=0.01, run #0] abm: nan,nan
[V1, scale=0.01, run #0] abm: nan,nan
[V2, scale=0.01, run #0] abm: nan,nan
[V2, scale=0.01, run #1] abm: nan,nan
[V1, scale=0.01, run #1] abm: nan,nan
[V1, scale=0.01, run #1] abm: nan,nan
[V2, scale=0.01, run #2] abm: nan,nan
[V3, scale=0.01, run #0] abm: nan,nan
[V3, scale=0.01, run #0] abm: nan,nan
[V2, scale=0.01, run #1] abm: nan,nan
[V2, scale=0.01, run #3] abm: nan,nan
[V1, scale=0.01, run #2] abm: nan,nan
[V1, scale=0.01, run #2] abm: nan,nan
[V2, scale=0.01, run #4] abm: nan,nan
[V1, scale=0.01, run #3] abm: nan,nan
[V1, scale=0.01, run #3] abm: nan,nan
[V2, scale=0.01, run #2] abm: nan,nan
[V2, scale=0.01, run #5] abm: nan,nan
[V3, scale=0.01, run #1] abm: nan,nan
[V1, scale=0.01, run #4] abm: nan,nan
[V1, scale=0.01, run #4] abm: nan,nan
[V3, scale=0.01, run #1] abm: nan,nan
[V2, scale=0.01, run #6] abm: nan,nan
[V2, scale=0.01, run #3] abm: nan,nan
[V2, scale=0.01, run #7] abm: nan,nan
[V1, scale=0.01, run #5] abm: nan,nan
[V1, scale=0.01, run #5] abm: nan,nan
[V2, scale=0.01, run #4] abm: nan,nan
[V2, scale=0.01, run #8] abm: nan,nan
[V1, scale=0.01, run #6] abm: nan,nan
[V1, scale=0.01, run #6] abm: nan,nan
[V2, scale=0.01, run #9] abm: nan,nan
[V3, scale=0.01, run #2] abm: nan,nan
[V3, scale=0.01, run #2] abm: nan,nan
[V2, scale=0.01, run #5] abm: nan,nan
[V1, scale=0.01, run #7] abm: nan,nan
[V1, scale=0.01, run #7] abm: nan,nan
[V2, scale=0.01, run #10] abm: nan,nan
[V2, scale=0.01, run #11] abm: nan,nan
[V1, scale=0.01, run #8] abm: nan,nan
[V1, scale=0.01, run #8] abm: nan,nan
[V2, scale=0.01, run #6] abm: nan,nan
[V2, scale=0.01, run #12] abm: nan,nan
[V3, scale=0.01, run #3] abm: nan,nan
[V1, scale=0.01, run #9] abm: nan,nan
[V1, scale=0.01, run #9] abm: nan,nan
[V3, scale=0.01, run #3] abm: nan,nan
[V2, scale=0.01, run #13] abm: nan,nan
[V2, scale=0.01, run #7] abm: nan,nan
[V1, scale=0.01, run #10] abm: nan,nan
[V1, scale=0.01, run #10] abm: nan,nan
[V2, scale=0.01, run #14] abm: nan,nan
[V1, scale=0.01, run #11] abm: nan,nan
[V1, scale=0.01, run #11] abm: nan,nan
[V2, scale=0.01, run #8] abm: nan,nan
[V2, scale=0.01, run #15] abm: nan,nan
[V3, scale=0.01, run #4] abm: nan,nan
[V3, scale=0.01, run #4] abm: nan,nan
[V1, scale=0.01, run #12] abm: nan,nan
[V1, scale=0.01, run #12] abm: nan,nan
[V2, scale=0.01, run #16] abm: nan,nan
[V2, scale=0.01, run #9] abm: nan,nan
[V2, scale=0.01, run #17] abm: nan,nan
[V1, scale=0.01, run #13] abm: nan,nan
[V1, scale=0.01, run #13] abm: nan,nan
[V2, scale=0.01, run #18] abm: nan,nan
[V2, scale=0.01, run #10] abm: nan,nan
[V3, scale=0.01, run #5] abm: nan,nan
[V1, scale=0.01, run #14] abm: nan,nan
[V1, scale=0.01, run #14] abm: nan,nan
[V3, scale=0.01, run #5] abm: nan,nan
[V2, scale=0.01, run #19] abm: nan,nan
[V1, scale=0.01, run #15] abm: nan,nan
[V1, scale=0.01, run #15] abm: nan,nan
[V2, scale=0.01, run #11] abm: nan,nan
[V1, scale=0.01, run #16] abm: nan,nan
[V1, scale=0.01, run #16] abm: nan,nan
[V2, scale=0.01, run #0] abm-gwn: nan,nan
[V2, scale=0.01, run #12] abm: nan,nan
[V3, scale=0.01, run #6] abm: nan,nan
[V3, scale=0.01, run #6] abm: nan,nan
[V1, scale=0.01, run #17] abm: nan,nan
[V1, scale=0.01, run #17] abm: nan,nan
[V2, scale=0.01, run #13] abm: nan,nan
[V1, scale=0.01, run #18] abm: nan,nan
[V1, scale=0.01, run #18] abm: nan,nan
[V2, scale=0.01, run #1] abm-gwn: 0.0073,0.0100
[V3, scale=0.01, run #7] abm: nan,nan
[V1, scale=0.01, run #19] abm: nan,nan
[V1, scale=0.01, run #19] abm: nan,nan
[V2, scale=0.01, run #14] abm: nan,nan
[V3, scale=0.01, run #7] abm: nan,nan
[V2, scale=0.01, run #2] abm-gwn: nan,nan
[V2, scale=0.01, run #15] abm: nan,nan
[V3, scale=0.01, run #8] abm: nan,nan
[V2, scale=0.01, run #16] abm: nan,nan
[V3, scale=0.01, run #8] abm: nan,nan
[V2, scale=0.01, run #3] abm-gwn: 0.0072,0.0097
[V2, scale=0.01, run #17] abm: nan,nan
[V2, scale=0.01, run #4] abm-gwn: 0.0082,0.0100
[V3, scale=0.01, run #9] abm: nan,nan
[V3, scale=0.01, run #9] abm: nan,nan
[V2, scale=0.01, run #18] abm: nan,nan
[V2, scale=0.01, run #5] abm-gwn: nan,nan
[V2, scale=0.01, run #19] abm: nan,nan
[V3, scale=0.01, run #10] abm: nan,nan
[V2, scale=0.01, run #0] abm-gwn: 0.0032,0.0033
[V3, scale=0.01, run #10] abm: nan,nan
[V2, scale=0.01, run #1] abm-gwn: 0.0029,0.0030
[V2, scale=0.01, run #6] abm-gwn: nan,nan
[V1, scale=0.01, run #0] abm-gwn: nan,nan
[V1, scale=0.01, run #0] abm-gwn: nan,nan
[V2, scale=0.01, run #2] abm-gwn: 0.0029,0.0033
[V3, scale=0.01, run #11] abm: nan,nan
[V3, scale=0.01, run #11] abm: nan,nan
[V2, scale=0.01, run #3] abm-gwn: 0.0033,0.0034
[V2, scale=0.01, run #7] abm-gwn: nan,nan
[V2, scale=0.01, run #4] abm-gwn: 0.0033,0.0036
[V3, scale=0.01, run #12] abm: nan,nan
[V2, scale=0.01, run #5] abm-gwn: 0.0031,0.0033
[V2, scale=0.01, run #8] abm-gwn: 0.0087,0.0100
[V3, scale=0.01, run #12] abm: nan,nan
[V2, scale=0.01, run #6] abm-gwn: 0.0031,0.0033
[V2, scale=0.01, run #9] abm-gwn: 0.0076,0.0077
[V2, scale=0.01, run #7] abm-gwn: 0.0032,0.0033
[V3, scale=0.01, run #13] abm: nan,nan
[V2, scale=0.01, run #8] abm-gwn: 0.0032,0.0034
[V3, scale=0.01, run #13] abm: nan,nan
[V2, scale=0.01, run #10] abm-gwn: nan,nan
[V2, scale=0.01, run #9] abm-gwn: 0.0033,0.0035
[V2, scale=0.01, run #10] abm-gwn: 0.0029,0.0031
[V3, scale=0.01, run #14] abm: nan,nan
[V2, scale=0.01, run #11] abm-gwn: nan,nan
[V3, scale=0.01, run #14] abm: nan,nan
[V2, scale=0.01, run #11] abm-gwn: 0.0033,0.0034
[V1, scale=0.01, run #1] abm-gwn: nan,nan
[V1, scale=0.01, run #1] abm-gwn: nan,nan
[V2, scale=0.01, run #12] abm-gwn: 0.0027,0.0030
[V2, scale=0.01, run #12] abm-gwn: nan,nan
[V3, scale=0.01, run #15] abm: nan,nan
[V2, scale=0.01, run #13] abm-gwn: 0.0031,0.0035
[V3, scale=0.01, run #15] abm: nan,nan
[V2, scale=0.01, run #14] abm-gwn: 0.0034,0.0036
[V2, scale=0.01, run #13] abm-gwn: nan,nan
[V2, scale=0.01, run #15] abm-gwn: 0.0033,0.0034
[V3, scale=0.01, run #16] abm: nan,nan
[V3, scale=0.01, run #16] abm: nan,nan
[V2, scale=0.01, run #16] abm-gwn: 0.0031,0.0033
[V2, scale=0.01, run #14] abm-gwn: 0.0090,0.0095
[V2, scale=0.01, run #17] abm-gwn: 0.0038,0.0038
[V3, scale=0.01, run #17] abm: nan,nan
[V2, scale=0.01, run #18] abm-gwn: 0.0030,0.0030
[V2, scale=0.01, run #15] abm-gwn: 0.0088,0.0092
[V3, scale=0.01, run #17] abm: nan,nan
[V2, scale=0.01, run #19] abm-gwn: 0.0032,0.0034
[V2, scale=0.01, run #16] abm-gwn: 0.0093,0.0095
[V3, scale=0.01, run #18] abm: nan,nan
[V2, scale=0.1, run #0] abm: nan,nan
[V1, scale=0.01, run #2] abm-gwn: nan,nan
[V3, scale=0.01, run #18] abm: nan,nan
[V1, scale=0.01, run #2] abm-gwn: nan,nan
[V2, scale=0.01, run #17] abm-gwn: 0.0071,0.0097
[V2, scale=0.1, run #1] abm: nan,nan
[V3, scale=0.01, run #19] abm: nan,nan
[V2, scale=0.01, run #18] abm-gwn: 0.0090,0.0093
[V3, scale=0.01, run #19] abm: nan,nan
[V2, scale=0.1, run #2] abm: nan,nan
[V2, scale=0.01, run #19] abm-gwn: 0.0066,0.0066
[V2, scale=0.1, run #0] abm: nan,nan
[V2, scale=0.1, run #3] abm: nan,nan
[V2, scale=0.1, run #1] abm: nan,nan
[V2, scale=0.1, run #2] abm: nan,nan
[V2, scale=0.1, run #3] abm: nan,nan
[V2, scale=0.1, run #4] abm: nan,nan
[V2, scale=0.1, run #4] abm: nan,nan
[V2, scale=0.1, run #5] abm: nan,nan
[V2, scale=0.1, run #5] abm: nan,nan
[V2, scale=0.1, run #6] abm: nan,nan
[V1, scale=0.01, run #3] abm-gwn: nan,nan
[V2, scale=0.1, run #7] abm: nan,nan
[V1, scale=0.01, run #3] abm-gwn: nan,nan
[V2, scale=0.1, run #6] abm: nan,nan
[V2, scale=0.1, run #8] abm: nan,nan
[V2, scale=0.1, run #9] abm: nan,nan
[V2, scale=0.1, run #7] abm: nan,nan
[V2, scale=0.1, run #10] abm: nan,nan
[V2, scale=0.1, run #11] abm: nan,nan
[V2, scale=0.1, run #8] abm: nan,nan
[V2, scale=0.1, run #12] abm: nan,nan
[V2, scale=0.1, run #13] abm: nan,nan
[V2, scale=0.1, run #9] abm: nan,nan
[V2, scale=0.1, run #14] abm: nan,nan
[V2, scale=0.1, run #15] abm: nan,nan
[V2, scale=0.1, run #10] abm: nan,nan
[V2, scale=0.1, run #16] abm: nan,nan
[V3, scale=0.01, run #0] abm-gwn: nan,nan
[V2, scale=0.1, run #17] abm: nan,nan
[V3, scale=0.01, run #0] abm-gwn: nan,nan
[V2, scale=0.1, run #11] abm: nan,nan
[V2, scale=0.1, run #18] abm: nan,nan
[V1, scale=0.01, run #4] abm-gwn: nan,nan
[V1, scale=0.01, run #4] abm-gwn: nan,nan
[V2, scale=0.1, run #19] abm: nan,nan
[V2, scale=0.1, run #12] abm: nan,nan
[V2, scale=0.1, run #0] abm-gwn: 0.0814,0.1000
[V2, scale=0.1, run #13] abm: nan,nan
[V2, scale=0.1, run #1] abm-gwn: 0.0778,0.1000
[V2, scale=0.1, run #14] abm: nan,nan
[V2, scale=0.1, run #2] abm-gwn: 0.0915,0.1000
[V2, scale=0.1, run #15] abm: nan,nan
[V2, scale=0.1, run #16] abm: nan,nan
[V2, scale=0.1, run #3] abm-gwn: 0.0757,0.0972
[V1, scale=0.01, run #5] abm-gwn: nan,nan
[V2, scale=0.1, run #17] abm: nan,nan
[V1, scale=0.01, run #5] abm-gwn: nan,nan
[V2, scale=0.1, run #4] abm-gwn: 0.0857,0.1000
[V2, scale=0.1, run #18] abm: nan,nan
[V2, scale=0.1, run #5] abm-gwn: 0.0876,0.1000
[V2, scale=0.1, run #19] abm: nan,nan
[V3, scale=0.01, run #1] abm-gwn: nan,nan
[V2, scale=0.1, run #6] abm-gwn: 0.0806,0.1000
[V2, scale=0.1, run #0] abm-gwn: 0.0320,0.0332
[V2, scale=0.1, run #1] abm-gwn: 0.0293,0.0306
[V3, scale=0.01, run #1] abm-gwn: nan,nan
[V2, scale=0.1, run #2] abm-gwn: 0.0294,0.0328
[V2, scale=0.1, run #7] abm-gwn: 0.0801,0.1000
[V2, scale=0.1, run #3] abm-gwn: 0.0329,0.0346
[V2, scale=0.1, run #4] abm-gwn: 0.0334,0.0360
[V2, scale=0.1, run #8] abm-gwn: 0.0907,0.1000
[V1, scale=0.01, run #6] abm-gwn: nan,nan
[V2, scale=0.1, run #5] abm-gwn: 0.0314,0.0327
[V2, scale=0.1, run #9] abm-gwn: 0.0662,0.0760
[V1, scale=0.01, run #6] abm-gwn: nan,nan
[V2, scale=0.1, run #6] abm-gwn: 0.0316,0.0327
[V2, scale=0.1, run #7] abm-gwn: 0.0320,0.0332
[V2, scale=0.1, run #10] abm-gwn: 0.0765,0.1000
[V2, scale=0.1, run #8] abm-gwn: 0.0318,0.0338
[V2, scale=0.1, run #11] abm-gwn: 0.0812,0.1000
[V2, scale=0.1, run #9] abm-gwn: 0.0336,0.0542
[V2, scale=0.1, run #10] abm-gwn: 0.0290,0.0313
[V2, scale=0.1, run #12] abm-gwn: 0.0769,0.1000
[V2, scale=0.1, run #11] abm-gwn: 0.0327,0.0345
[V2, scale=0.1, run #12] abm-gwn: 0.0276,0.0300
[V2, scale=0.1, run #13] abm-gwn: 0.0956,0.1000
[V2, scale=0.1, run #13] abm-gwn: 0.0312,0.0355
[V1, scale=0.01, run #7] abm-gwn: nan,nan
[V2, scale=0.1, run #14] abm-gwn: 0.0343,0.0360
[V1, scale=0.01, run #7] abm-gwn: nan,nan
[V3, scale=0.01, run #2] abm-gwn: nan,nan
[V2, scale=0.1, run #14] abm-gwn: 0.0612,0.0901
[V2, scale=0.1, run #15] abm-gwn: 0.0334,0.0345
[V2, scale=0.1, run #16] abm-gwn: 0.0317,0.0330
[V3, scale=0.01, run #2] abm-gwn: nan,nan
[V2, scale=0.1, run #15] abm-gwn: 0.0711,0.0884
[V2, scale=0.1, run #17] abm-gwn: 0.0382,0.0594
[V2, scale=0.1, run #16] abm-gwn: 0.0654,0.0930
[V2, scale=0.1, run #18] abm-gwn: 0.0297,0.0305
[V2, scale=0.1, run #19] abm-gwn: 0.0321,0.0336
[V2, scale=1.0, run #0] abm: 0.0932,0.2197
[V2, scale=0.1, run #17] abm-gwn: 0.0745,0.0971
[V2, scale=1.0, run #1] abm: 0.0985,0.2163
[V2, scale=1.0, run #2] abm: 0.1034,0.2041
[V2, scale=1.0, run #3] abm: 0.1022,0.2112
[V2, scale=1.0, run #4] abm: 0.1015,0.2106
[V2, scale=1.0, run #5] abm: 0.1181,0.2100
[V2, scale=1.0, run #6] abm: 0.0887,0.2122
[V2, scale=1.0, run #7] abm: 0.1019,0.2177
[V2, scale=1.0, run #8] abm: 0.0927,0.2108
[V2, scale=1.0, run #9] abm: 0.0971,0.0977
[V2, scale=0.1, run #18] abm-gwn: 0.0836,0.0933
[V2, scale=1.0, run #10] abm: 0.1092,0.2154
[V2, scale=1.0, run #11] abm: 0.0976,0.2125
[V2, scale=0.1, run #19] abm-gwn: 0.0658,0.0664
[V2, scale=1.0, run #12] abm: 0.0788,0.2047
[V1, scale=0.01, run #8] abm-gwn: nan,nan
[V2, scale=1.0, run #13] abm: 0.0970,0.2060
[V2, scale=1.0, run #14] abm: 0.0985,0.1020
[V2, scale=1.0, run #15] abm: 0.0931,0.2197
[V2, scale=1.0, run #16] abm: 0.1066,0.2172
[V1, scale=0.01, run #8] abm-gwn: nan,nan
[V2, scale=1.0, run #17] abm: 0.1041,0.1158
[V2, scale=1.0, run #0] abm: nan,nan
[V2, scale=1.0, run #18] abm: 0.0868,0.2182
[V2, scale=1.0, run #19] abm: 0.0944,0.2124
[V2, scale=1.0, run #0] abm-gwn: 0.3200,0.3323
[V2, scale=1.0, run #1] abm: nan,nan
[V2, scale=1.0, run #1] abm-gwn: 0.2928,0.3058
[V2, scale=1.0, run #2] abm: nan,nan
[V2, scale=1.0, run #2] abm-gwn: 0.2936,0.3282
[V2, scale=1.0, run #3] abm: nan,nan
[V2, scale=1.0, run #3] abm-gwn: 0.3287,0.3460
[V2, scale=1.0, run #4] abm: nan,nan
[V2, scale=1.0, run #4] abm-gwn: 0.3336,0.3595
[V3, scale=0.01, run #3] abm-gwn: nan,nan
[V2, scale=1.0, run #5] abm-gwn: 0.3137,0.3272
[V2, scale=1.0, run #5] abm: nan,nan
[V2, scale=1.0, run #6] abm-gwn: 0.3156,0.3267
[V2, scale=1.0, run #6] abm: nan,nan
[V2, scale=1.0, run #7] abm-gwn: 0.3198,0.3320
[V3, scale=0.01, run #3] abm-gwn: nan,nan
[V1, scale=0.01, run #9] abm-gwn: nan,nan
[V2, scale=1.0, run #7] abm: nan,nan
[V2, scale=1.0, run #8] abm-gwn: 0.3179,0.3380
[V1, scale=0.01, run #9] abm-gwn: nan,nan
[V2, scale=1.0, run #8] abm: nan,nan
[V2, scale=1.0, run #9] abm-gwn: 0.3360,0.5416
[V2, scale=1.0, run #9] abm: nan,nan
[V2, scale=1.0, run #10] abm-gwn: 0.2897,0.3125
[V2, scale=1.0, run #10] abm: nan,nan
[V2, scale=1.0, run #11] abm-gwn: 0.3271,0.3448
[V2, scale=1.0, run #12] abm-gwn: 0.2755,0.3002
[V2, scale=1.0, run #11] abm: nan,nan
[V2, scale=1.0, run #13] abm-gwn: 0.3118,0.3552
[V2, scale=1.0, run #12] abm: nan,nan
[V2, scale=1.0, run #14] abm-gwn: 0.3432,0.3601
[V2, scale=1.0, run #13] abm: nan,nan
[V2, scale=1.0, run #15] abm-gwn: 0.3338,0.3451
[V2, scale=1.0, run #16] abm-gwn: 0.3167,0.3300
[V2, scale=1.0, run #14] abm: nan,nan
[V1, scale=0.01, run #10] abm-gwn: nan,nan
[V1, scale=0.01, run #10] abm-gwn: nan,nan
[V2, scale=1.0, run #15] abm: nan,nan
[V2, scale=1.0, run #17] abm-gwn: 0.3822,0.5941
[V2, scale=1.0, run #16] abm: nan,nan
[V2, scale=1.0, run #18] abm-gwn: 0.2966,0.3052
[V3, scale=0.01, run #4] abm-gwn: nan,nan
[V2, scale=1.0, run #17] abm: nan,nan
[V2, scale=1.0, run #19] abm-gwn: 0.3210,0.3363
[V2, scale=10.0, run #0] abm: 2.3671,2.6241
[V2, scale=10.0, run #1] abm: 1.8881,2.0271
[V2, scale=10.0, run #2] abm: 2.5871,2.6681
[V2, scale=10.0, run #3] abm: 2.5481,2.6901
[V2, scale=10.0, run #4] abm: 2.7281,2.8341
[V2, scale=1.0, run #18] abm: nan,nan
[V2, scale=10.0, run #5] abm: 2.3231,2.4971
[V2, scale=10.0, run #6] abm: 2.3401,2.5391
[V2, scale=10.0, run #7] abm: 2.3201,2.5021
[V3, scale=0.01, run #4] abm-gwn: nan,nan
[V2, scale=10.0, run #8] abm: 2.3811,2.4891
[V2, scale=1.0, run #19] abm: nan,nan
[V2, scale=10.0, run #9] abm: 2.8051,2.9551
[V2, scale=10.0, run #10] abm: 2.0441,2.1191
[V2, scale=10.0, run #11] abm: 2.4911,4.3051
[V2, scale=10.0, run #12] abm: 1.7761,1.8071
[V2, scale=10.0, run #13] abm: 2.7001,2.7181
[V2, scale=10.0, run #14] abm: 2.7031,2.9301
[V2, scale=10.0, run #15] abm: 2.3631,2.5851
[V2, scale=1.0, run #0] abm-gwn: 0.8138,0.9999
[V2, scale=10.0, run #16] abm: 2.4291,2.6031
[V2, scale=10.0, run #17] abm: 2.7121,3.2561
[V2, scale=10.0, run #18] abm: 1.9441,2.1521
[V2, scale=10.0, run #19] abm: 2.4411,2.5961
[V1, scale=0.01, run #11] abm-gwn: nan,nan
[V2, scale=10.0, run #0] abm-gwn: 3.2001,3.3231
[V2, scale=1.0, run #1] abm-gwn: 0.7780,0.9999
[V1, scale=0.01, run #11] abm-gwn: nan,nan
[V2, scale=10.0, run #1] abm-gwn: 2.9281,3.0581
[V2, scale=10.0, run #2] abm-gwn: 2.9361,3.2821
[V2, scale=1.0, run #2] abm-gwn: 0.9154,0.9999
[V2, scale=10.0, run #3] abm-gwn: 3.2871,3.4601
[V2, scale=10.0, run #4] abm-gwn: 3.3361,3.5951
[V2, scale=1.0, run #3] abm-gwn: 0.7567,0.9722
[V2, scale=10.0, run #5] abm-gwn: 3.1371,3.2721
[V2, scale=1.0, run #4] abm-gwn: 0.8567,0.9999
[V2, scale=10.0, run #6] abm-gwn: 3.1561,3.2671
[V2, scale=10.0, run #7] abm-gwn: 3.1981,3.3201
[V2, scale=1.0, run #5] abm-gwn: 0.8755,0.9999
[V2, scale=10.0, run #8] abm-gwn: 3.1791,3.3801
[V3, scale=0.01, run #5] abm-gwn: nan,nan
[V1, scale=0.01, run #12] abm-gwn: nan,nan
[V2, scale=10.0, run #9] abm-gwn: 3.3601,5.4161
[V1, scale=0.01, run #12] abm-gwn: nan,nan
[V2, scale=1.0, run #6] abm-gwn: 0.8064,0.9999
[V2, scale=10.0, run #10] abm-gwn: 2.8971,3.1251
[V3, scale=0.01, run #5] abm-gwn: nan,nan
[V2, scale=10.0, run #11] abm-gwn: 3.2711,3.4481
[V2, scale=1.0, run #7] abm-gwn: 0.8006,0.9999
[V2, scale=10.0, run #12] abm-gwn: 2.7551,3.0021
[V2, scale=10.0, run #13] abm-gwn: 3.1181,3.5521
[V2, scale=1.0, run #8] abm-gwn: 0.9071,0.9999
[V2, scale=10.0, run #14] abm-gwn: 3.4321,3.6011
[V2, scale=1.0, run #9] abm-gwn: 0.6615,0.7597
[V2, scale=10.0, run #15] abm-gwn: 3.3381,3.4511
[V2, scale=10.0, run #16] abm-gwn: 3.1671,3.3001
[V2, scale=1.0, run #10] abm-gwn: 0.7651,0.9999
[V1, scale=0.01, run #13] abm-gwn: nan,nan
[V2, scale=10.0, run #17] abm-gwn: 3.8221,5.9411
[V2, scale=1.0, run #11] abm-gwn: 0.8123,0.9999
[V2, scale=10.0, run #18] abm-gwn: 2.9661,3.0521
[V1, scale=0.01, run #13] abm-gwn: nan,nan
[V2, scale=10.0, run #19] abm-gwn: 3.2101,3.3631
[V2, scale=100.0, run #0] abm: nan,nan
[V2, scale=100.0, run #1] abm: nan,nan
[V2, scale=100.0, run #2] abm: nan,nan
[V2, scale=100.0, run #3] abm: nan,nan
[V2, scale=100.0, run #4] abm: nan,nan
[V2, scale=100.0, run #5] abm: nan,nan
[V2, scale=100.0, run #6] abm: nan,nan
[V2, scale=100.0, run #7] abm: nan,nan
[V2, scale=100.0, run #8] abm: nan,nan
[V2, scale=100.0, run #9] abm: nan,nan
[V2, scale=100.0, run #10] abm: nan,nan
[V2, scale=100.0, run #11] abm: nan,nan
[V2, scale=100.0, run #12] abm: nan,nan
[V2, scale=100.0, run #13] abm: nan,nan
[V2, scale=100.0, run #14] abm: nan,nan
[V2, scale=100.0, run #15] abm: nan,nan
[V2, scale=100.0, run #16] abm: nan,nan
[V2, scale=100.0, run #17] abm: nan,nan
[V2, scale=100.0, run #18] abm: nan,nan
[V2, scale=100.0, run #19] abm: nan,nan
[V2, scale=1.0, run #12] abm-gwn: 0.7690,0.9999
[V2, scale=100.0, run #0] abm-gwn: 32.0010,33.2310
[V2, scale=100.0, run #1] abm-gwn: 29.2810,30.5810
[V2, scale=1.0, run #13] abm-gwn: 0.9560,0.9999
[V2, scale=100.0, run #2] abm-gwn: 29.3610,32.8210
[V3, scale=0.01, run #6] abm-gwn: nan,nan
[V2, scale=100.0, run #3] abm-gwn: 32.8710,34.6010
[V2, scale=1.0, run #14] abm-gwn: 0.6121,0.9008
[V2, scale=100.0, run #4] abm-gwn: 33.3610,35.9510
[V2, scale=100.0, run #5] abm-gwn: 31.3710,32.7210
[V2, scale=1.0, run #15] abm-gwn: 0.7109,0.8838
[V3, scale=0.01, run #6] abm-gwn: nan,nan
[V2, scale=100.0, run #6] abm-gwn: 31.5610,32.6710
[V1, scale=0.01, run #14] abm-gwn: nan,nan
[V2, scale=100.0, run #7] abm-gwn: 31.9810,33.2010
[V1, scale=0.01, run #14] abm-gwn: nan,nan
[V2, scale=1.0, run #16] abm-gwn: 0.6538,0.9301
[V2, scale=100.0, run #8] abm-gwn: 31.7910,33.8010
[V2, scale=1.0, run #17] abm-gwn: 0.7451,0.9707
[V2, scale=100.0, run #9] abm-gwn: 33.6010,54.1610
[V2, scale=100.0, run #10] abm-gwn: 28.9710,31.2510
[V2, scale=1.0, run #18] abm-gwn: 0.8355,0.9333
[V2, scale=100.0, run #11] abm-gwn: 32.7110,34.4810
[V2, scale=1.0, run #19] abm-gwn: 0.6582,0.6644
[V2, scale=100.0, run #12] abm-gwn: 27.5510,30.0210
[V2, scale=10.0, run #0] abm: nan,nan
[V2, scale=10.0, run #1] abm: 4.6551,4.6721
[V2, scale=10.0, run #2] abm: 4.8761,5.2701
[V2, scale=100.0, run #13] abm-gwn: 31.1810,35.5210
[V2, scale=10.0, run #3] abm: nan,nan
[V2, scale=10.0, run #4] abm: nan,nan
[V2, scale=100.0, run #14] abm-gwn: 34.3210,36.0110
[V2, scale=10.0, run #5] abm: nan,nan
[V2, scale=10.0, run #6] abm: 4.4151,5.1431
[V1, scale=0.01, run #15] abm-gwn: nan,nan
[V2, scale=100.0, run #15] abm-gwn: 33.3810,34.5110
[V2, scale=10.0, run #7] abm: nan,nan
[V2, scale=10.0, run #8] abm: 4.6271,5.1051
[V2, scale=100.0, run #16] abm-gwn: 31.6710,33.0010
[V1, scale=0.01, run #15] abm-gwn: nan,nan
[V2, scale=10.0, run #9] abm: nan,nan
[V2, scale=10.0, run #10] abm: 4.6881,4.7101
[V3, scale=0.01, run #7] abm-gwn: nan,nan
[V2, scale=10.0, run #11] abm: nan,nan
[V2, scale=10.0, run #12] abm: 4.7001,4.9891
[V2, scale=100.0, run #17] abm-gwn: 38.2210,59.4110
[V2, scale=10.0, run #13] abm: 4.5941,5.0661
[V2, scale=10.0, run #14] abm: 4.1801,4.4571
[V2, scale=10.0, run #15] abm: 4.7221,5.0821
[V2, scale=10.0, run #16] abm: 5.0081,5.2061
[V2, scale=10.0, run #17] abm: 5.0671,5.2161
[V2, scale=10.0, run #18] abm: 4.6631,4.8921
[V2, scale=100.0, run #18] abm-gwn: 29.6610,30.5210
[V2, scale=10.0, run #19] abm: nan,nan
[V2, scale=100.0, run #19] abm-gwn: 32.1010,33.6310
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/fromnumeric.py:3419: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:180: RuntimeWarning: invalid value encountered in true_divide
  ret = um.true_divide(
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:261: RuntimeWarning: Degrees of freedom <= 0 for slice
  ret = _var(a, axis=axis, dtype=dtype, out=out, ddof=ddof,
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:221: RuntimeWarning: invalid value encountered in true_divide
  arrmean = um.true_divide(arrmean, div, out=arrmean, casting='unsafe',
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:250: RuntimeWarning: invalid value encountered in true_divide
  ret = um.true_divide(
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:188: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:253: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
================================
data: V2 (extra dim = 0)
condition
{'npolys': [0, 1, 0, 1], 'cmp': ['==', '==', '==', '==']}
================================
================================
data: V2 (extra dim = 0)
condition
{'npolys': [0, 1, 0, 1], 'cmp': ['==', '==', '==', '==']}
================================
================================
data: V2 (extra dim = 0)
condition
{'npolys': [0, 1, 0, 1], 'cmp': ['==', '==', '==', '==']}
================================
new range: 0.0009301000000000001, 0.010000100000000001
new range: 0.0009801000000000002, 0.010000100000000001
new range: 0.0010301000000000004, 0.010000100000000001
new range: 0.0010201000000000003, 0.010000100000000001
new range: 0.0009601000000000002, 0.010000100000000001
new range: 0.0011801000000000003, 0.010000100000000001
new range: 0.0008801000000000002, 0.010000100000000001
new range: 0.0010101000000000003, 0.010000100000000001
new range: 0.0009201000000000002, 0.010000100000000001
new range: 0.0008201000000000001, 0.010000100000000001
new range: 0.0010901000000000003, 0.010000100000000001
new range: 0.0009701000000000002, 0.010000100000000001
new range: 0.0007801000000000002, 0.010000100000000001
new range: 0.0009601000000000002, 0.010000100000000001
new range: 0.0009801000000000002, 0.010000100000000001
new range: 0.0009301000000000001, 0.010000100000000001
new range: 0.0010601000000000002, 0.010000100000000001
new range: 0.0009801000000000002, 0.010000100000000001
new range: 0.0008601000000000001, 0.010000100000000001
new range: 0.0009401000000000001, 0.010000100000000001
new range: 0.0009301000000000001, 0.010000100000000001
new range: 0.0009801000000000002, 0.010000100000000001
new range: 0.0010301000000000004, 0.010000100000000001
new range: 0.0010201000000000003, 0.010000100000000001
new range: 0.0009601000000000002, 0.010000100000000001
new range: 0.0011801000000000003, 0.010000100000000001
new range: 0.0008801000000000002, 0.010000100000000001
new range: 0.0010101000000000003, 0.010000100000000001
new range: 0.0009201000000000002, 0.010000100000000001
new range: 0.0008201000000000001, 0.010000100000000001
new range: 0.0010901000000000003, 0.010000100000000001
new range: 0.0009701000000000002, 0.010000100000000001
new range: 0.0007801000000000002, 0.010000100000000001
new range: 0.0009601000000000002, 0.010000100000000001
new range: 0.0009801000000000002, 0.010000100000000001
new range: 0.0009301000000000001, 0.010000100000000001
new range: 0.0010601000000000002, 0.010000100000000001
new range: 0.0009801000000000002, 0.010000100000000001
new range: 0.0008601000000000001, 0.010000100000000001
new range: 0.0009401000000000001, 0.010000100000000001
new range: 0.009301, 0.100001
new range: 0.009801, 0.100001
new range: 0.010301000000000001, 0.100001
new range: 0.010201, 0.100001
new range: 0.009601, 0.100001
new range: 0.011801, 0.100001
new range: 0.008801, 0.100001
new range: 0.010101, 0.100001
new range: 0.009201, 0.100001
new range: 0.008201, 0.100001
new range: 0.010901000000000001, 0.100001
new range: 0.009701, 0.100001
new range: 0.007801, 0.100001
new range: 0.009601, 0.100001
new range: 0.009801, 0.100001
new range: 0.009301, 0.100001
new range: 0.010601000000000001, 0.100001
new range: 0.009801, 0.100001
new range: 0.008601000000000001, 0.100001
new range: 0.009401, 0.100001
new range: 0.009301, 0.100001
new range: 0.009801, 0.100001
new range: 0.010301000000000001, 0.100001
new range: 0.010201, 0.100001
new range: 0.009601, 0.100001
new range: 0.011801, 0.100001
new range: 0.008801, 0.100001
new range: 0.010101, 0.100001
new range: 0.009201, 0.100001
new range: 0.008201, 0.100001
new range: 0.010901000000000001, 0.100001
new range: 0.009701, 0.100001
new range: 0.007801, 0.100001
new range: 0.009601, 0.100001
new range: 0.009801, 0.100001
new range: 0.009301, 0.100001
new range: 0.010601000000000001, 0.100001
new range: 0.009801, 0.100001
new range: 0.008601000000000001, 0.100001
new range: 0.009401, 0.100001
new range: 0.09301, 1.0000099999999998
new range: 0.09801, 1.0000099999999998
new range: 0.10301, 1.0000099999999998
new range: 0.10201, 1.0000099999999998
new range: 0.09601, 1.0000099999999998
new range: 0.11801, 1.0000099999999998
new range: 0.08800999999999999, 1.0000099999999998
new range: 0.10101, 1.0000099999999998
new range: 0.09201, 1.0000099999999998
new range: 0.08201, 1.0000099999999998
new range: 0.10901, 1.0000099999999998
new range: 0.09701, 1.0000099999999998
new range: 0.07801, 1.0000099999999998
new range: 0.09601, 1.0000099999999998
new range: 0.09801, 1.0000099999999998
new range: 0.09301, 1.0000099999999998
new range: 0.10601, 1.0000099999999998
new range: 0.09801, 1.0000099999999998
new range: 0.08601, 1.0000099999999998
new range: 0.09401, 1.0000099999999998
new range: 0.09301, 1.0000099999999998
new range: 0.09801, 1.0000099999999998
new range: 0.10301, 1.0000099999999998
new range: 0.10201, 1.0000099999999998
new range: 0.09601, 1.0000099999999998
new range: 0.11801, 1.0000099999999998
new range: 0.08800999999999999, 1.0000099999999998
new range: 0.10101, 1.0000099999999998
new range: 0.09201, 1.0000099999999998
new range: 0.08201, 1.0000099999999998
new range: 0.10901, 1.0000099999999998
new range: 0.09701, 1.0000099999999998
new range: 0.07801, 1.0000099999999998
new range: 0.09601, 1.0000099999999998
new range: 0.09801, 1.0000099999999998
new range: 0.09301, 1.0000099999999998
new range: 0.10601, 1.0000099999999998
new range: 0.09801, 1.0000099999999998
new range: 0.08601, 1.0000099999999998
new range: 0.09401, 1.0000099999999998
new range: 0.9301, 10.0001
new range: 0.9801, 10.0001
new range: 1.0301, 10.0001
new range: 1.0201, 10.0001
new range: 0.9601, 10.0001
new range: 1.1801, 10.0001
new range: 0.8801, 10.0001
new range: 1.0101, 10.0001
new range: 0.9201, 10.0001
new range: 0.8201, 10.0001
new range: 1.0901, 10.0001
new range: 0.9701, 10.0001
new range: 0.7801, 10.0001
new range: 0.9601, 10.0001
new range: 0.9801, 10.0001
new range: 0.9201, 10.0001
new range: 1.0601, 10.0001
new range: 0.9801, 10.0001
new range: 0.8601, 10.0001
new range: 0.9401, 10.0001
new range: 0.9301, 10.0001
new range: 0.9801, 10.0001
new range: 1.0301, 10.0001
new range: 1.0201, 10.0001
new range: 0.9601, 10.0001
new range: 1.1801, 10.0001
new range: 0.8801, 10.0001
new range: 1.0101, 10.0001
new range: 0.9201, 10.0001
new range: 0.8201, 10.0001
new range: 1.0901, 10.0001
new range: 0.9701, 10.0001
new range: 0.7801, 10.0001
new range: 0.9601, 10.0001
new range: 0.9801, 10.0001
new range: 0.9301, 10.0001
new range: 1.0601, 10.0001
new range: 0.9801, 10.0001
new range: 0.8601, 10.0001
new range: 0.9401, 10.0001
new range: 8.701, 10.001
new range: 8.901, 10.001
new range: 9.701, 10.001
new range: 9.401, 10.001
new range: 9.501000000000001, 10.001
new range: 9.701, 10.001
new range: 8.801, 10.001
new range: nan, nan
new range: 9.201, 10.001
new range: 8.101, 10.001
new range: 9.801, 10.001
new range: 9.701, 10.001
new range: 7.801000000000001, 10.001
new range: 9.601, 10.001
new range: 9.601, 10.001
new range: 8.701, 10.001
new range: 9.601, 10.001
new range: 9.801, 10.001
new range: 8.401, 10.001
new range: 8.901, 10.001
new range: 9.301, 100.001
new range: 9.801, 100.001
new range: 10.301, 100.001
new range: 10.201, 100.001
new range: 9.601, 100.001
new range: 11.801, 100.001
new range: 8.801, 100.001
new range: 10.101, 100.001
new range: 9.201, 100.001
new range: 8.201, 100.001
new range: 10.901, 100.001
new range: 9.701, 100.001
new range: 7.801000000000001, 100.001
new range: 9.601, 100.001
new range: 9.801, 100.001
new range: 9.301, 100.001
new range: 10.601, 100.001
new range: 9.801, 100.001
new range: 8.601, 100.001
new range: 9.401, 100.001
    scale   method  ...                             coeff dist (std)   success rate
0    0.01      abm  ...                                    nan (nan)     0/20(0.0%)
0    0.01  abm-gwn  ...    0.6118009652328711 (0.010001540782325522)  20/20(100.0%)
0    0.10      abm  ...                                    nan (nan)     0/20(0.0%)
0    0.10  abm-gwn  ...     0.5078850200512218 (0.02303371640306272)  20/20(100.0%)
0    1.00      abm  ...   0.012041138127090087 (0.02042146888491719)  20/20(100.0%)
0    1.00  abm-gwn  ...    0.08397328747051484 (0.02968382297629903)  20/20(100.0%)
0   10.00      abm  ...     0.5920936911630358 (0.00834805409165715)  20/20(100.0%)
0   10.00  abm-gwn  ...  0.45211154004517856 (0.0054132737539179165)  20/20(100.0%)
0  100.00      abm  ...                                    nan (nan)     0/20(0.0%)
0  100.00  abm-gwn  ...    0.7256077245187066 (0.031257244379124215)  20/20(100.0%)

[10 rows x 7 columns]
[V3, scale=0.01, run #7] abm-gwn: nan,nan
[V2, scale=10.0, run #0] abm-gwn: 8.1381,9.9991
[V2, scale=10.0, run #1] abm-gwn: 7.7801,9.9991
[V1, scale=0.01, run #16] abm-gwn: nan,nan
[V2, scale=10.0, run #2] abm-gwn: 9.1541,9.9991
[V1, scale=0.01, run #16] abm-gwn: nan,nan
[V2, scale=10.0, run #3] abm-gwn: 7.5671,9.7221
[V2, scale=10.0, run #4] abm-gwn: 8.5671,9.9991
[V2, scale=10.0, run #5] abm-gwn: 8.7551,9.9991
[V3, scale=0.01, run #8] abm-gwn: nan,nan
[V2, scale=10.0, run #6] abm-gwn: 8.0641,9.9991
[V1, scale=0.01, run #17] abm-gwn: nan,nan
[V1, scale=0.01, run #17] abm-gwn: nan,nan
[V2, scale=10.0, run #7] abm-gwn: 8.0061,9.9991
[V3, scale=0.01, run #8] abm-gwn: nan,nan
[V2, scale=10.0, run #8] abm-gwn: 9.0711,9.9991
[V2, scale=10.0, run #9] abm-gwn: 6.6151,7.5971
[V2, scale=10.0, run #10] abm-gwn: 7.6511,9.9991
[V2, scale=10.0, run #11] abm-gwn: 8.1231,9.9991
[V1, scale=0.01, run #18] abm-gwn: nan,nan
[V2, scale=10.0, run #12] abm-gwn: 7.6901,9.9991
[V1, scale=0.01, run #18] abm-gwn: nan,nan
[V2, scale=10.0, run #13] abm-gwn: 9.5601,9.9991
[V3, scale=0.01, run #9] abm-gwn: nan,nan
[V2, scale=10.0, run #14] abm-gwn: 6.1211,9.0081
[V2, scale=10.0, run #15] abm-gwn: 7.1091,8.8381
[V3, scale=0.01, run #9] abm-gwn: nan,nan
[V2, scale=10.0, run #16] abm-gwn: 6.5381,9.3011
[V1, scale=0.01, run #19] abm-gwn: nan,nan
[V2, scale=10.0, run #17] abm-gwn: 7.4511,9.7071
[V1, scale=0.01, run #19] abm-gwn: nan,nan
[V1, scale=0.1, run #0] abm: nan,nan
[V2, scale=10.0, run #18] abm-gwn: 8.3551,9.3331
[V1, scale=0.1, run #0] abm: nan,nan
[V1, scale=0.1, run #1] abm: nan,nan
[V2, scale=10.0, run #19] abm-gwn: 6.5821,6.6441
[V2, scale=100.0, run #0] abm: nan,nan
[V2, scale=100.0, run #1] abm: nan,nan
[V2, scale=100.0, run #2] abm: nan,nan
[V2, scale=100.0, run #3] abm: nan,nan
[V2, scale=100.0, run #4] abm: nan,nan
[V2, scale=100.0, run #5] abm: nan,nan
[V2, scale=100.0, run #6] abm: nan,nan
[V2, scale=100.0, run #7] abm: nan,nan
[V2, scale=100.0, run #8] abm: nan,nan
[V2, scale=100.0, run #9] abm: nan,nan
[V2, scale=100.0, run #10] abm: nan,nan
[V2, scale=100.0, run #11] abm: nan,nan
[V2, scale=100.0, run #12] abm: nan,nan
[V2, scale=100.0, run #13] abm: nan,nan
[V2, scale=100.0, run #14] abm: nan,nan
[V2, scale=100.0, run #15] abm: nan,nan
[V2, scale=100.0, run #16] abm: nan,nan
[V1, scale=0.1, run #2] abm: nan,nan
[V2, scale=100.0, run #17] abm: nan,nan
[V2, scale=100.0, run #18] abm: nan,nan
[V1, scale=0.1, run #1] abm: nan,nan
[V2, scale=100.0, run #19] abm: nan,nan
[V1, scale=0.1, run #3] abm: nan,nan
[V1, scale=0.1, run #2] abm: nan,nan
[V2, scale=100.0, run #0] abm-gwn: 81.3810,100.0010
[V1, scale=0.1, run #4] abm: nan,nan
[V1, scale=0.1, run #3] abm: nan,nan
[V2, scale=100.0, run #1] abm-gwn: 77.8010,99.9910
[V1, scale=0.1, run #5] abm: nan,nan
[V1, scale=0.1, run #4] abm: nan,nan
[V3, scale=0.01, run #10] abm-gwn: nan,nan
[V2, scale=100.0, run #2] abm-gwn: 91.5410,99.9910
[V1, scale=0.1, run #6] abm: nan,nan
[V1, scale=0.1, run #5] abm: nan,nan
[V2, scale=100.0, run #3] abm-gwn: 75.6710,97.2210
[V1, scale=0.1, run #7] abm: nan,nan
[V1, scale=0.1, run #6] abm: nan,nan
[V2, scale=100.0, run #4] abm-gwn: 85.6710,99.9910
[V1, scale=0.1, run #8] abm: nan,nan
[V3, scale=0.01, run #10] abm-gwn: nan,nan
[V1, scale=0.1, run #7] abm: nan,nan
[V2, scale=100.0, run #5] abm-gwn: 87.5510,100.0010
[V1, scale=0.1, run #9] abm: nan,nan
[V1, scale=0.1, run #8] abm: nan,nan
[V1, scale=0.1, run #10] abm: nan,nan
[V1, scale=0.1, run #9] abm: nan,nan
[V2, scale=100.0, run #6] abm-gwn: 80.6410,100.0010
[V1, scale=0.1, run #11] abm: nan,nan
[V1, scale=0.1, run #10] abm: nan,nan
[V2, scale=100.0, run #7] abm-gwn: 80.0610,100.0010
[V1, scale=0.1, run #12] abm: nan,nan
[V1, scale=0.1, run #11] abm: nan,nan
[V2, scale=100.0, run #8] abm-gwn: 90.7110,99.9910
[V1, scale=0.1, run #13] abm: nan,nan
[V1, scale=0.1, run #12] abm: nan,nan
[V2, scale=100.0, run #9] abm-gwn: 66.1510,75.9710
[V1, scale=0.1, run #14] abm: nan,nan
[V1, scale=0.1, run #13] abm: nan,nan
[V2, scale=100.0, run #10] abm-gwn: 76.5110,100.0010
[V3, scale=0.01, run #11] abm-gwn: nan,nan
[V1, scale=0.1, run #15] abm: nan,nan
[V1, scale=0.1, run #14] abm: nan,nan
[V2, scale=100.0, run #11] abm-gwn: 81.2310,100.0010
[V1, scale=0.1, run #16] abm: nan,nan
[V1, scale=0.1, run #15] abm: nan,nan
[V1, scale=0.1, run #17] abm: nan,nan
[V2, scale=100.0, run #12] abm-gwn: 76.9010,100.0010
[V1, scale=0.1, run #16] abm: nan,nan
[V3, scale=0.01, run #11] abm-gwn: nan,nan
[V1, scale=0.1, run #18] abm: nan,nan
[V2, scale=100.0, run #13] abm-gwn: 95.6010,100.0010
[V1, scale=0.1, run #17] abm: nan,nan
[V1, scale=0.1, run #19] abm: nan,nan
[V1, scale=0.1, run #18] abm: nan,nan
[V2, scale=100.0, run #14] abm-gwn: 61.2110,90.0810
[V2, scale=100.0, run #15] abm-gwn: 71.0910,88.3810
[V1, scale=0.1, run #19] abm: nan,nan
[V1, scale=0.1, run #0] abm-gwn: 0.0257,0.0381
[V2, scale=100.0, run #16] abm-gwn: 65.3810,93.0110
[V1, scale=0.1, run #0] abm-gwn: 0.0181,0.0190
[V2, scale=100.0, run #17] abm-gwn: 74.5110,97.0710
[V1, scale=0.1, run #1] abm-gwn: 0.0209,0.0212
[V1, scale=0.1, run #1] abm-gwn: 0.0348,0.0349
[V2, scale=100.0, run #18] abm-gwn: 83.5510,93.3310
[V3, scale=0.01, run #12] abm-gwn: nan,nan
[V2, scale=100.0, run #19] abm-gwn: 65.8210,66.4410
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/fromnumeric.py:3419: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:180: RuntimeWarning: invalid value encountered in true_divide
  ret = um.true_divide(
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:261: RuntimeWarning: Degrees of freedom <= 0 for slice
  ret = _var(a, axis=axis, dtype=dtype, out=out, ddof=ddof,
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:221: RuntimeWarning: invalid value encountered in true_divide
  arrmean = um.true_divide(arrmean, div, out=arrmean, casting='unsafe',
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:250: RuntimeWarning: invalid value encountered in true_divide
  ret = um.true_divide(
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:188: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:253: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
================================
data: V2 (extra dim = 0)
condition
{'npolys': [0, 1, 0, 1], 'cmp': ['==', '==', '==', '==']}
================================
================================
data: V2 (extra dim = 0)
condition
{'npolys': [0, 1, 0, 1], 'cmp': ['==', '==', '==', '==']}
================================
================================
data: V2 (extra dim = 0)
condition
{'npolys': [0, 1, 0, 1], 'cmp': ['==', '==', '==', '==']}
================================
new range: 0.005190100000000002, 0.010000100000000001
new range: 0.004670100000000002, 0.010000100000000001
new range: 0.004880100000000002, 0.010000100000000001
new range: 0.005540100000000002, 0.010000100000000001
new range: 0.005480100000000002, 0.010000100000000001
new range: 0.005300100000000002, 0.010000100000000001
new range: 0.0042501000000000014, 0.010000100000000001
new range: 0.005060100000000002, 0.010000100000000001
new range: 0.004620100000000002, 0.010000100000000001
new range: 0.0054601000000000025, 0.010000100000000001
new range: 0.004700100000000002, 0.010000100000000001
new range: 0.005190100000000002, 0.010000100000000001
new range: 0.004700100000000002, 0.010000100000000001
new range: 0.0045901000000000015, 0.010000100000000001
new range: 0.003980100000000002, 0.010000100000000001
new range: 0.004720100000000002, 0.010000100000000001
new range: 0.005000100000000002, 0.010000100000000001
new range: 0.005070100000000002, 0.010000100000000001
new range: 0.004740100000000002, 0.010000100000000001
new range: 0.005060100000000002, 0.010000100000000001
new range: 0.005190100000000002, 0.010000100000000001
new range: 0.004670100000000002, 0.010000100000000001
new range: 0.004880100000000002, 0.010000100000000001
new range: 0.005540100000000002, 0.010000100000000001
new range: 0.005480100000000002, 0.010000100000000001
new range: 0.005300100000000002, 0.010000100000000001
new range: 0.0042501000000000014, 0.010000100000000001
new range: 0.005060100000000002, 0.010000100000000001
new range: 0.004620100000000002, 0.010000100000000001
new range: 0.0054601000000000025, 0.010000100000000001
new range: 0.004700100000000002, 0.010000100000000001
new range: 0.005190100000000002, 0.010000100000000001
new range: 0.004700100000000002, 0.010000100000000001
new range: 0.0045901000000000015, 0.010000100000000001
new range: 0.003980100000000002, 0.010000100000000001
new range: 0.004720100000000002, 0.010000100000000001
new range: 0.005000100000000002, 0.010000100000000001
new range: 0.005070100000000002, 0.010000100000000001
new range: 0.004740100000000002, 0.010000100000000001
new range: 0.005060100000000002, 0.010000100000000001
new range: 0.051901, 0.100001
new range: 0.046701, 0.100001
new range: 0.048801, 0.100001
new range: 0.055401, 0.100001
new range: 0.054801, 0.100001
new range: 0.053001, 0.100001
new range: 0.042501, 0.100001
new range: 0.050601, 0.100001
new range: 0.046201, 0.100001
new range: 0.054601000000000004, 0.100001
new range: 0.047001, 0.100001
new range: 0.051901, 0.100001
new range: 0.047001, 0.100001
new range: 0.045901, 0.100001
new range: 0.039801, 0.100001
new range: 0.047201, 0.100001
new range: 0.050001000000000004, 0.100001
new range: 0.050701, 0.100001
new range: 0.047401, 0.100001
new range: 0.050601, 0.100001
new range: 0.051901, 0.100001
new range: 0.046701, 0.100001
new range: 0.048801, 0.100001
new range: 0.055401, 0.100001
new range: 0.054801, 0.100001
new range: 0.053001, 0.100001
new range: 0.042501, 0.100001
new range: 0.050601, 0.100001
new range: 0.046201, 0.100001
new range: 0.054601000000000004, 0.100001
new range: 0.047001, 0.100001
new range: 0.051901, 0.100001
new range: 0.047001, 0.100001
new range: 0.045901, 0.100001
new range: 0.039801, 0.100001
new range: 0.047201, 0.100001
new range: 0.050001000000000004, 0.100001
new range: 0.050701, 0.100001
new range: 0.047401, 0.100001
new range: 0.050601, 0.100001
new range: 0.51901, 1.0000099999999998
new range: 0.46701000000000004, 1.0000099999999998
new range: 0.48801, 1.0000099999999998
new range: 0.55401, 1.0000099999999998
new range: 0.54801, 1.0000099999999998
new range: 0.53001, 1.0000099999999998
new range: 0.42501, 1.0000099999999998
new range: 0.50601, 1.0000099999999998
new range: 0.46201000000000003, 1.0000099999999998
new range: 0.54601, 1.0000099999999998
new range: 0.47001000000000004, 1.0000099999999998
new range: 0.51901, 1.0000099999999998
new range: 0.47001000000000004, 1.0000099999999998
new range: 0.45901000000000003, 1.0000099999999998
new range: 0.39801000000000003, 1.0000099999999998
new range: 0.47201000000000004, 1.0000099999999998
new range: 0.50001, 1.0000099999999998
new range: 0.50701, 1.0000099999999998
new range: 0.47401000000000004, 1.0000099999999998
new range: 0.50601, 1.0000099999999998
new range: 0.51901, 1.0000099999999998
new range: 0.46701000000000004, 1.0000099999999998
new range: 0.48801, 1.0000099999999998
new range: 0.55401, 1.0000099999999998
new range: 0.54801, 1.0000099999999998
new range: 0.53001, 1.0000099999999998
new range: 0.42501, 1.0000099999999998
new range: 0.50601, 1.0000099999999998
new range: 0.46201000000000003, 1.0000099999999998
new range: 0.54601, 1.0000099999999998
new range: 0.47001000000000004, 1.0000099999999998
new range: 0.51901, 1.0000099999999998
new range: 0.47001000000000004, 1.0000099999999998
new range: 0.45901000000000003, 1.0000099999999998
new range: 0.39801000000000003, 1.0000099999999998
new range: 0.47201000000000004, 1.0000099999999998
new range: 0.50001, 1.0000099999999998
new range: 0.50701, 1.0000099999999998
new range: 0.47401000000000004, 1.0000099999999998
new range: 0.50601, 1.0000099999999998
new range: 5.1801, 10.0001
new range: 4.6501, 10.0001
new range: 4.8701, 10.0001
new range: 5.5301, 10.0001
new range: 5.4801, 10.0001
new range: 5.3001000000000005, 10.0001
new range: 4.2401, 10.0001
new range: 5.0501000000000005, 10.0001
new range: 4.6201, 10.0001
new range: 5.4601, 10.0001
new range: 4.6801, 10.0001
new range: 5.1801, 10.0001
new range: 4.6901, 10.0001
new range: 4.5901000000000005, 10.0001
new range: 3.9701000000000004, 10.0001
new range: 4.7201, 10.0001
new range: 5.0001, 10.0001
new range: 5.0601, 10.0001
new range: 4.6601, 10.0001
new range: 5.0601, 10.0001
new range: 5.1901, 10.0001
new range: 4.6701, 10.0001
new range: 4.8801, 10.0001
new range: 5.5401, 10.0001
new range: 5.4801, 10.0001
new range: 5.3001000000000005, 10.0001
new range: 4.2501, 10.0001
new range: 5.0601, 10.0001
new range: 4.6201, 10.0001
new range: 5.4601, 10.0001
new range: 4.7001, 10.0001
new range: 5.1901, 10.0001
new range: 4.7001, 10.0001
new range: 4.5901000000000005, 10.0001
new range: 3.9801000000000006, 10.0001
new range: 4.7201, 10.0001
new range: 5.0001, 10.0001
new range: 5.0701, 10.0001
new range: 4.7401, 10.0001
new range: 5.0601, 10.0001
new range: nan, nan
new range: 9.801, 10.001
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: 9.401, 10.001
new range: nan, nan
new range: 51.900999999999996, 100.001
new range: 46.701, 100.001
new range: 48.801, 100.001
new range: 55.400999999999996, 100.001
new range: 54.801, 100.001
new range: 53.001, 100.001
new range: 42.501, 100.001
new range: 50.601, 100.001
new range: 46.201, 100.001
new range: 54.601, 100.001
new range: 47.001, 100.001
new range: 51.900999999999996, 100.001
new range: 47.001, 100.001
new range: 45.900999999999996, 100.001
new range: 39.801, 100.001
new range: 47.201, 100.001
new range: 50.001, 100.001
new range: 50.701, 100.001
new range: 47.400999999999996, 100.001
new range: 50.601, 100.001
    scale   method  ...                           coeff dist (std)   success rate
0    0.01      abm  ...                                  nan (nan)     0/20(0.0%)
0    0.01  abm-gwn  ...  0.6645788937959548 (0.031272457230146676)   11/20(55.0%)
0    0.10      abm  ...                                  nan (nan)     0/20(0.0%)
0    0.10  abm-gwn  ...   0.6844291567224109 (0.03414095354203266)  20/20(100.0%)
0    1.00      abm  ...                                  nan (nan)     0/20(0.0%)
0    1.00  abm-gwn  ...   0.5819706177237639 (0.11333752778534446)  20/20(100.0%)
0   10.00      abm  ...  0.6968408231126927 (0.026510114956543252)   12/20(60.0%)
0   10.00  abm-gwn  ...   0.6429557171864942 (0.06187635360748784)  20/20(100.0%)
0  100.00      abm  ...                                  nan (nan)     0/20(0.0%)
0  100.00  abm-gwn  ...   0.8542620345737051 (0.12224161797228356)  20/20(100.0%)

[10 rows x 7 columns]
[V1, scale=0.1, run #2] abm-gwn: 0.0209,0.0318
[V3, scale=0.01, run #12] abm-gwn: nan,nan
[V1, scale=0.1, run #3] abm-gwn: 0.0224,0.0352
[V1, scale=0.1, run #4] abm-gwn: 0.0270,0.0311
[V1, scale=0.1, run #2] abm-gwn: nan,nan
[V1, scale=0.1, run #3] abm-gwn: 0.0200,0.0200
[V1, scale=0.1, run #5] abm-gwn: 0.0297,0.0338
[V1, scale=0.1, run #4] abm-gwn: 0.0188,0.0201
[V1, scale=0.1, run #5] abm-gwn: 0.0202,0.0203
[V1, scale=0.1, run #6] abm-gwn: 0.0317,0.0329
[V3, scale=0.01, run #13] abm-gwn: nan,nan
[V1, scale=0.1, run #6] abm-gwn: 0.0183,0.0201
[V1, scale=0.1, run #7] abm-gwn: 0.0225,0.0340
[V1, scale=0.1, run #7] abm-gwn: 0.0178,0.0183
[V1, scale=0.1, run #8] abm-gwn: 0.0190,0.0192
[V3, scale=0.01, run #13] abm-gwn: nan,nan
[V1, scale=0.1, run #8] abm-gwn: 0.0351,0.0377
[V1, scale=0.1, run #9] abm-gwn: 0.0196,0.0197
[V1, scale=0.1, run #10] abm-gwn: 0.0213,0.0213
[V1, scale=0.1, run #9] abm-gwn: 0.0297,0.0320
[V1, scale=0.1, run #11] abm-gwn: 0.0221,0.0225
[V1, scale=0.1, run #10] abm-gwn: 0.0231,0.0347
[V1, scale=0.1, run #12] abm-gwn: 0.0197,0.0201
[V1, scale=0.1, run #13] abm-gwn: 0.0197,0.0205
[V3, scale=0.01, run #14] abm-gwn: nan,nan
[V1, scale=0.1, run #11] abm-gwn: 0.0254,0.0364
[V1, scale=0.1, run #14] abm-gwn: 0.0185,0.0197
[V1, scale=0.1, run #15] abm-gwn: 0.0200,0.0212
[V1, scale=0.1, run #12] abm-gwn: 0.0213,0.0372
[V1, scale=0.1, run #16] abm-gwn: 0.0205,0.0210
[V3, scale=0.01, run #14] abm-gwn: nan,nan
[V1, scale=0.1, run #13] abm-gwn: 0.0302,0.0366
[V1, scale=0.1, run #14] abm-gwn: 0.0332,0.0384
[V3, scale=0.01, run #15] abm-gwn: nan,nan
[V1, scale=0.1, run #15] abm-gwn: 0.0248,0.0387
[V1, scale=0.1, run #17] abm-gwn: nan,nan
[V1, scale=0.1, run #18] abm-gwn: 0.0199,0.0201
[V1, scale=0.1, run #19] abm-gwn: 0.0216,0.0216
[V1, scale=1.0, run #0] abm: 0.0387,0.0675
[V1, scale=1.0, run #1] abm: 0.0412,0.0671
[V1, scale=1.0, run #2] abm: 0.0370,0.0679
[V2, scale=0.01, run #0] abm: 0.0000,0.0000
[V1, scale=1.0, run #3] abm: 0.0373,0.0663
[V3, scale=0.01, run #15] abm-gwn: nan,nan
[V1, scale=1.0, run #4] abm: 0.0358,0.0679
[V1, scale=1.0, run #5] abm: 0.0355,0.0667
[V1, scale=1.0, run #6] abm: 0.0400,0.0700
[V2, scale=0.01, run #0] abm: nan,nan
[V1, scale=1.0, run #7] abm: 0.0371,0.0676
[V1, scale=0.01, run #0] abm: nan,nan
[V1, scale=0.01, run #0] abm: nan,nan
[V1, scale=0.01, run #0] abm: nan,nan
[V1, scale=1.0, run #8] abm: 0.0369,0.0683
[V1, scale=1.0, run #9] abm: 0.0352,0.0679
[V2, scale=0.01, run #0] abm: nan,nan
[V1, scale=1.0, run #10] abm: 0.0329,0.0666
[V1, scale=1.0, run #11] abm: 0.0387,0.0660
[V2, scale=0.01, run #1] abm: nan,nan
[V1, scale=1.0, run #12] abm: 0.0346,0.0687
[V1, scale=1.0, run #13] abm: 0.0396,0.0656
[V1, scale=0.01, run #1] abm: nan,nan
[V1, scale=0.01, run #1] abm: nan,nan
[V1, scale=1.0, run #14] abm: 0.0381,0.0652
[V1, scale=1.0, run #15] abm: 0.0404,0.0680
[V2, scale=0.01, run #2] abm: nan,nan
[V3, scale=0.01, run #0] abm: nan,nan
[V3, scale=0.01, run #0] abm: nan,nan
[V1, scale=1.0, run #16] abm: 0.0352,0.0681
[V3, scale=0.01, run #0] abm: nan,nan
[V2, scale=0.01, run #0] abm-gwn: 0.0000,0.0063
[V2, scale=0.01, run #1] abm: nan,nan
[V2, scale=0.1, run #0] abm: 0.0000,0.0001
[V1, scale=1.0, run #17] abm: 0.0432,0.0676
[V1, scale=1.0, run #18] abm: 0.0347,0.0678
[V1, scale=0.01, run #2] abm: nan,nan
[V1, scale=0.01, run #2] abm: nan,nan
[V1, scale=1.0, run #19] abm: 0.0423,0.0655
[V2, scale=0.01, run #3] abm: nan,nan
[V2, scale=0.01, run #2] abm: nan,nan
[V2, scale=0.01, run #4] abm: nan,nan
[V1, scale=0.01, run #3] abm: nan,nan
[V1, scale=0.01, run #3] abm: nan,nan
[V1, scale=1.0, run #0] abm-gwn: 0.0823,0.1084
[V2, scale=0.1, run #0] abm-gwn: 0.0000,0.0440
[V2, scale=1.0, run #0] abm: 0.0000,0.1415
[V2, scale=0.01, run #5] abm: nan,nan
[V3, scale=0.01, run #1] abm: nan,nan
[V3, scale=0.01, run #1] abm: nan,nan
[V1, scale=0.01, run #4] abm: nan,nan
[V1, scale=0.01, run #4] abm: nan,nan
[V1, scale=1.0, run #1] abm-gwn: 0.0949,0.0977
[V1, scale=0.1, run #16] abm-gwn: nan,nan
[V2, scale=0.01, run #3] abm: nan,nan
[V2, scale=0.01, run #6] abm: nan,nan
[V1, scale=1.0, run #2] abm-gwn: 0.0954,0.0962
[V1, scale=0.01, run #5] abm: nan,nan
[V1, scale=0.01, run #5] abm: nan,nan
[V2, scale=0.01, run #7] abm: nan,nan
[V2, scale=1.0, run #0] abm-gwn: 0.0000,0.4396
[V2, scale=0.01, run #4] abm: nan,nan
[V1, scale=1.0, run #3] abm-gwn: 0.0763,0.0766
[V1, scale=0.01, run #6] abm: nan,nan
[V1, scale=0.01, run #6] abm: nan,nan
[V2, scale=0.01, run #8] abm: nan,nan
[V2, scale=10.0, run #0] abm: 0.0001,3.9191
[V3, scale=0.01, run #2] abm: nan,nan
[V3, scale=0.01, run #2] abm: nan,nan
[V1, scale=1.0, run #4] abm-gwn: 0.0830,0.0895
[V2, scale=0.01, run #9] abm: nan,nan
[V2, scale=0.01, run #5] abm: nan,nan
[V1, scale=0.01, run #7] abm: nan,nan
[V1, scale=0.01, run #7] abm: nan,nan
[V1, scale=0.1, run #17] abm-gwn: 0.0229,0.0326
[V2, scale=0.01, run #10] abm: nan,nan
[V1, scale=1.0, run #5] abm-gwn: 0.1043,0.1080
[V2, scale=10.0, run #0] abm-gwn: 0.0001,4.3961
[V1, scale=0.01, run #8] abm: nan,nan
[V1, scale=0.01, run #8] abm: nan,nan
[V2, scale=100.0, run #0] abm: 0.0010,3.9410
[V2, scale=0.01, run #6] abm: nan,nan
[V2, scale=0.01, run #11] abm: nan,nan
[V1, scale=1.0, run #6] abm-gwn: 0.0877,0.0924
[V3, scale=0.01, run #16] abm-gwn: nan,nan
[V3, scale=0.01, run #3] abm: nan,nan
[V3, scale=0.01, run #3] abm: nan,nan
[V1, scale=0.01, run #9] abm: nan,nan
[V1, scale=0.01, run #9] abm: nan,nan
[V1, scale=0.01, run #0] abm-gwn: nan,nan
[V2, scale=0.01, run #12] abm: nan,nan
[V1, scale=1.0, run #7] abm-gwn: 0.0705,0.0961
[V2, scale=0.01, run #7] abm: nan,nan
[V2, scale=100.0, run #0] abm-gwn: 0.0010,40.9310
================================
data: V2 (extra dim = 0)
condition
{'npolys': [0, 1, 0, 1], 'cmp': ['==', '==', '==', '==']}
================================
================================
data: V2 (extra dim = 0)
condition
{'npolys': [0, 1, 0, 1], 'cmp': ['==', '==', '==', '==']}
================================
================================
data: V2 (extra dim = 0)
condition
{'npolys': [0, 1, 0, 1], 'cmp': ['==', '==', '==', '==']}
================================
new range: -9.900000000000002e-06, 0.010000100000000001
new range: -9.900000000000002e-06, 0.010000100000000001
new range: -9.900000000000001e-05, 0.100001
new range: -9.900000000000001e-05, 0.100001
new range: -0.00099, 1.0000099999999998
new range: -0.00099, 1.0000099999999998
new range: -0.0099, 10.0001
new range: -0.0099, 10.0001
new range: -0.099, 10.001
new range: -0.099, 100.001
    scale   method  ...              coeff dist (std)  success rate
0    0.01      abm  ...      0.5825760976319007 (0.0)   1/1(100.0%)
0    0.01  abm-gwn  ...      0.5825760976318995 (0.0)   1/1(100.0%)
0    0.10      abm  ...       0.462628696142607 (0.0)   1/1(100.0%)
0    0.10  abm-gwn  ...       0.462628696142606 (0.0)   1/1(100.0%)
0    1.00      abm  ...  1.3459349211267173e-15 (0.0)   1/1(100.0%)
0    1.00  abm-gwn  ...  1.5052278289976282e-15 (0.0)   1/1(100.0%)
0   10.00      abm  ...      0.5313453569771596 (0.0)   1/1(100.0%)
0   10.00  abm-gwn  ...        0.53134535697716 (0.0)   1/1(100.0%)
0  100.00      abm  ...      0.6962302368075812 (0.0)   1/1(100.0%)
0  100.00  abm-gwn  ...      0.6962302368076048 (0.0)   1/1(100.0%)

[10 rows x 7 columns]
[V2, scale=0.01, run #13] abm: nan,nan
[V1, scale=0.01, run #10] abm: nan,nan
[V1, scale=0.01, run #10] abm: nan,nan
[V1, scale=1.0, run #8] abm-gwn: 0.1003,0.1021
[V2, scale=0.01, run #14] abm: nan,nan
[V1, scale=0.1, run #0] abm: nan,nan
[V2, scale=0.01, run #8] abm: nan,nan
[V1, scale=0.01, run #11] abm: nan,nan
[V1, scale=0.01, run #11] abm: nan,nan
[V1, scale=0.1, run #18] abm-gwn: 0.0241,0.0374
[V3, scale=0.01, run #4] abm: nan,nan
[V2, scale=0.01, run #15] abm: nan,nan
[V1, scale=1.0, run #9] abm-gwn: 0.0948,0.1016
[V3, scale=0.01, run #4] abm: nan,nan
[V1, scale=0.01, run #12] abm: nan,nan
[V1, scale=0.01, run #12] abm: nan,nan
[V2, scale=0.01, run #16] abm: nan,nan
[V1, scale=0.1, run #0] abm-gwn: 0.0003,0.0140
[V2, scale=0.01, run #9] abm: nan,nan
[V1, scale=1.0, run #0] abm: 0.0000,0.0315
[V1, scale=1.0, run #10] abm-gwn: 0.0934,0.1003
[V1, scale=1.0, run #0] abm-gwn: 0.0000,0.0364
[V2, scale=0.01, run #17] abm: nan,nan
[V1, scale=0.01, run #13] abm: nan,nan
[V1, scale=0.01, run #13] abm: nan,nan
[V2, scale=0.01, run #10] abm: nan,nan
[V1, scale=10.0, run #0] abm: 0.0001,2.6721
[V2, scale=0.01, run #18] abm: nan,nan
[V1, scale=1.0, run #11] abm-gwn: 0.1065,0.1171
[V3, scale=0.01, run #5] abm: nan,nan
[V1, scale=10.0, run #0] abm-gwn: 0.0001,0.3621
[V1, scale=0.01, run #14] abm: nan,nan
[V3, scale=0.01, run #5] abm: nan,nan
[V1, scale=0.01, run #14] abm: nan,nan
[V1, scale=100.0, run #0] abm: 0.0110,2.7810
[V2, scale=0.01, run #19] abm: nan,nan
[V3, scale=0.01, run #16] abm-gwn: nan,nan
[V1, scale=1.0, run #12] abm-gwn: 0.0884,0.0940
[V1, scale=0.1, run #19] abm-gwn: 0.0349,0.0370
[V2, scale=0.01, run #11] abm: nan,nan
[V1, scale=1.0, run #0] abm: 0.0714,0.0775
[V1, scale=1.0, run #1] abm: 0.0640,0.0753
[V1, scale=0.01, run #15] abm: nan,nan
[V1, scale=0.01, run #15] abm: nan,nan
[V1, scale=1.0, run #2] abm: 0.0725,0.0793
[V1, scale=1.0, run #3] abm: 0.0681,0.0787
[V1, scale=1.0, run #4] abm: 0.0573,0.0788
[V1, scale=1.0, run #13] abm-gwn: 0.1020,0.1085
[V2, scale=0.01, run #12] abm: nan,nan
[V2, scale=0.01, run #0] abm-gwn: 0.0077,0.0082
[V1, scale=1.0, run #5] abm: 0.0637,0.0678
[V1, scale=1.0, run #6] abm: 0.0666,0.0820
[V1, scale=0.01, run #16] abm: nan,nan
[V1, scale=0.01, run #16] abm: nan,nan
[V1, scale=1.0, run #7] abm: 0.0671,0.0712
[V1, scale=1.0, run #8] abm: 0.0758,0.0813
[V3, scale=0.01, run #6] abm: nan,nan
[V1, scale=1.0, run #14] abm-gwn: 0.0863,0.0892
[V1, scale=1.0, run #9] abm: 0.0698,0.0745
[V3, scale=0.01, run #6] abm: nan,nan
[V1, scale=1.0, run #10] abm: 0.0653,0.0857
[V2, scale=0.01, run #13] abm: nan,nan
[V1, scale=1.0, run #11] abm: 0.0645,0.0707
[V1, scale=0.01, run #17] abm: nan,nan
[V1, scale=1.0, run #12] abm: 0.0699,0.0744
[V1, scale=0.01, run #17] abm: nan,nan
[V1, scale=1.0, run #13] abm: 0.0667,0.0693
[V3, scale=0.01, run #0] abm-gwn: nan,nan
[V3, scale=0.1, run #0] abm: 0.0000,0.0000
[V1, scale=1.0, run #14] abm: 0.0730,0.0835
[V1, scale=1.0, run #15] abm-gwn: 0.0921,0.0985
[V1, scale=1.0, run #15] abm: 0.0818,0.0895
[V1, scale=1.0, run #16] abm: 0.0645,0.0717
[V2, scale=0.01, run #14] abm: nan,nan
[V2, scale=0.01, run #1] abm-gwn: 0.0079,0.0100
[V1, scale=1.0, run #17] abm: 0.0719,0.0871
[V1, scale=0.01, run #18] abm: nan,nan
[V1, scale=0.01, run #18] abm: nan,nan
[V1, scale=1.0, run #18] abm: 0.0657,0.0729
[V1, scale=1.0, run #19] abm: 0.0683,0.0773
[V1, scale=1.0, run #16] abm-gwn: 0.0977,0.0989
[V3, scale=0.01, run #7] abm: nan,nan
[V3, scale=0.1, run #0] abm-gwn: 0.0004,0.0106
[V2, scale=0.01, run #15] abm: nan,nan
[V3, scale=0.01, run #7] abm: nan,nan
[V3, scale=1.0, run #0] abm: 0.0000,0.0244
[V1, scale=0.01, run #19] abm: nan,nan
[V1, scale=0.01, run #19] abm: nan,nan
[V2, scale=0.01, run #2] abm-gwn: 0.0073,0.0080
[V1, scale=1.0, run #17] abm-gwn: 0.0860,0.0899
[V2, scale=0.01, run #16] abm: nan,nan
[V2, scale=0.01, run #3] abm-gwn: 0.0073,0.0078
[V1, scale=1.0, run #18] abm-gwn: 0.0911,0.1001
[V1, scale=1.0, run #0] abm-gwn: 0.1999,0.2157
[V3, scale=1.0, run #0] abm-gwn: 0.0000,0.0883
[V2, scale=0.01, run #17] abm: nan,nan
[V3, scale=0.01, run #8] abm: nan,nan
[V1, scale=1.0, run #19] abm-gwn: 0.1028,0.1102
[V3, scale=0.01, run #8] abm: nan,nan
[V1, scale=100.0, run #0] abm-gwn: nan,nan
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/fromnumeric.py:3419: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:180: RuntimeWarning: invalid value encountered in true_divide
  ret = um.true_divide(
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:261: RuntimeWarning: Degrees of freedom <= 0 for slice
  ret = _var(a, axis=axis, dtype=dtype, out=out, ddof=ddof,
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:221: RuntimeWarning: invalid value encountered in true_divide
  arrmean = um.true_divide(arrmean, div, out=arrmean, casting='unsafe',
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:250: RuntimeWarning: invalid value encountered in true_divide
  ret = um.true_divide(
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:188: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:253: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
================================
data: V1 (extra dim = 0)
condition
{'npolys': [0, 0, 0, 0, 0, 0, 1], 'cmp': ['==', '==', '==', '==', '==', '==', '==']}
================================
================================
data: V1 (extra dim = 0)
condition
{'npolys': [0, 0, 0, 0, 0, 0, 1], 'cmp': ['==', '==', '==', '==', '==', '==', '==']}
================================
================================
data: V1 (extra dim = 0)
condition
{'npolys': [0, 0, 0, 0, 0, 0, 1], 'cmp': ['==', '==', '==', '==', '==', '==', '==']}
================================
    scale   method  ...              coeff dist (std)  success rate
0    0.01      abm  ...                     nan (nan)     0/1(0.0%)
0    0.01  abm-gwn  ...                     nan (nan)     0/1(0.0%)
0    0.10      abm  ...                     nan (nan)     0/1(0.0%)
0    0.10  abm-gwn  ...       1.008431247988021 (0.0)   1/1(100.0%)
0    1.00      abm  ...  2.6107792276029283e-14 (0.0)   1/1(100.0%)
0    1.00  abm-gwn  ...  2.3190064824110504e-11 (0.0)   1/1(100.0%)
0   10.00      abm  ...      1.2950424310793873 (0.0)   1/1(100.0%)
0   10.00  abm-gwn  ...      1.2950424310583002 (0.0)   1/1(100.0%)
0  100.00      abm  ...      1.4113665217775246 (0.0)   1/1(100.0%)
0  100.00  abm-gwn  ...                     nan (nan)     0/1(0.0%)

[10 rows x 7 columns]
[V3, scale=10.0, run #0] abm: 0.0001,2.5221
[V2, scale=0.01, run #18] abm: nan,nan
[V1, scale=10.0, run #0] abm: 3.0791,3.2481
[V2, scale=0.01, run #4] abm-gwn: 0.0088,0.0097
[V1, scale=1.0, run #1] abm-gwn: 0.1781,0.2233
[V1, scale=10.0, run #1] abm: 3.1011,3.1691
[V2, scale=0.01, run #19] abm: nan,nan
[V3, scale=0.01, run #17] abm-gwn: nan,nan
[V3, scale=10.0, run #0] abm-gwn: 0.0001,0.8831
[V2, scale=0.01, run #0] abm-gwn: 0.0018,0.0019
[V1, scale=10.0, run #2] abm: 3.0901,3.1131
[V3, scale=100.0, run #0] abm: 0.0010,2.8910
[V3, scale=0.01, run #9] abm: nan,nan
[V3, scale=100.0, run #0] abm-gwn: 0.0010,3.1310
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/fromnumeric.py:3419: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:180: RuntimeWarning: invalid value encountered in true_divide
  ret = um.true_divide(
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:261: RuntimeWarning: Degrees of freedom <= 0 for slice
  ret = _var(a, axis=axis, dtype=dtype, out=out, ddof=ddof,
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:221: RuntimeWarning: invalid value encountered in true_divide
  arrmean = um.true_divide(arrmean, div, out=arrmean, casting='unsafe',
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:250: RuntimeWarning: invalid value encountered in true_divide
  ret = um.true_divide(
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:188: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:253: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
================================
data: V3 (extra dim = 0)
condition
{'npolys': [0, 0, 0, 0, 1], 'cmp': ['==', '==', '==', '==', '==']}
================================
================================
data: V3 (extra dim = 0)
condition
{'npolys': [0, 0, 0, 0, 1], 'cmp': ['==', '==', '==', '==', '==']}
================================
================================
data: V3 (extra dim = 0)
condition
{'npolys': [0, 0, 0, 0, 1], 'cmp': ['==', '==', '==', '==', '==']}
================================
    scale   method  ...              coeff dist (std)  success rate
0    0.01      abm  ...                     nan (nan)     0/1(0.0%)
0    0.01  abm-gwn  ...                     nan (nan)     0/1(0.0%)
0    0.10      abm  ...      1.0554907045155253 (0.0)   1/1(100.0%)
0    0.10  abm-gwn  ...      1.0585667401572272 (0.0)   1/1(100.0%)
0    1.00      abm  ...  3.4376125811337763e-15 (0.0)   1/1(100.0%)
0    1.00  abm-gwn  ...   5.838950516427709e-12 (0.0)   1/1(100.0%)
0   10.00      abm  ...      0.6768370579042556 (0.0)   1/1(100.0%)
0   10.00  abm-gwn  ...      0.6768370579039925 (0.0)   1/1(100.0%)
0  100.00      abm  ...      1.2883150804313905 (0.0)   1/1(100.0%)
0  100.00  abm-gwn  ...       1.288315081634367 (0.0)   1/1(100.0%)

[10 rows x 7 columns]
[V3, scale=0.01, run #9] abm: nan,nan
[V1, scale=10.0, run #3] abm: 3.0901,3.1171
[V2, scale=0.01, run #5] abm-gwn: 0.0076,0.0100
[V1, scale=1.0, run #2] abm-gwn: 0.1831,0.2095
[V1, scale=10.0, run #4] abm: 3.1111,3.1481
[V2, scale=0.01, run #1] abm-gwn: 0.0018,0.0065
[V2, scale=0.01, run #2] abm-gwn: 0.0020,0.0021
[V2, scale=0.01, run #3] abm-gwn: 0.0013,0.0013
[V2, scale=0.01, run #6] abm-gwn: 0.0081,0.0085
[V1, scale=10.0, run #5] abm: 3.1201,3.3321
[V2, scale=0.01, run #4] abm-gwn: 0.0018,0.0018
[V1, scale=0.01, run #0] abm-gwn: nan,nan
[V3, scale=0.01, run #10] abm: nan,nan
[V2, scale=0.01, run #7] abm-gwn: 0.0063,0.0067
[V1, scale=1.0, run #3] abm-gwn: 0.1919,0.2148
[V1, scale=10.0, run #6] abm: 3.0801,3.1481
[V3, scale=0.01, run #10] abm: nan,nan
[V3, scale=0.01, run #17] abm-gwn: nan,nan
[V1, scale=10.0, run #7] abm: 3.0841,3.1211
[V2, scale=0.01, run #5] abm-gwn: 0.0021,0.0065
[V2, scale=0.01, run #6] abm-gwn: 0.0016,0.0017
[V1, scale=1.0, run #4] abm-gwn: 0.1586,0.1947
[V2, scale=0.01, run #7] abm-gwn: 0.0017,0.0017
[V1, scale=10.0, run #8] abm: 3.0891,3.1121
[V1, scale=0.01, run #0] abm-gwn: nan,nan
[V2, scale=0.01, run #8] abm-gwn: 0.0020,0.0022
[V2, scale=0.01, run #8] abm-gwn: 0.0084,0.0095
[V3, scale=0.01, run #11] abm: nan,nan
[V2, scale=0.01, run #9] abm-gwn: 0.0017,0.0017
[V3, scale=0.01, run #11] abm: nan,nan
[V1, scale=10.0, run #9] abm: 3.0941,3.2831
[V2, scale=0.01, run #10] abm-gwn: 0.0023,0.0023
[V1, scale=1.0, run #5] abm-gwn: 0.1724,0.1911
[V2, scale=0.01, run #11] abm-gwn: 0.0017,0.0018
[V2, scale=0.01, run #12] abm-gwn: 0.0019,0.0021
[V2, scale=0.01, run #9] abm-gwn: 0.0082,0.0091
[V2, scale=0.01, run #13] abm-gwn: 0.0013,0.0013
[V1, scale=10.0, run #10] abm: 3.0851,3.2771
[V2, scale=0.01, run #14] abm-gwn: 0.0021,0.0021
[V3, scale=0.01, run #12] abm: nan,nan
[V2, scale=0.01, run #15] abm-gwn: 0.0020,0.0020
[V1, scale=1.0, run #6] abm-gwn: 0.1557,0.1991
[V3, scale=0.01, run #12] abm: nan,nan
[V2, scale=0.01, run #10] abm-gwn: 0.0071,0.0088
[V1, scale=10.0, run #11] abm: 3.0891,3.1161
[V2, scale=0.01, run #16] abm-gwn: 0.0023,0.0025
[V2, scale=0.01, run #17] abm-gwn: 0.0017,0.0017
[V2, scale=0.01, run #18] abm-gwn: 0.0014,0.0014
[V2, scale=0.01, run #11] abm-gwn: 0.0071,0.0073
[V2, scale=0.01, run #19] abm-gwn: 0.0017,0.0019
[V1, scale=10.0, run #12] abm: 3.0881,3.0921
[V3, scale=0.01, run #13] abm: nan,nan
[V1, scale=1.0, run #7] abm-gwn: 0.1862,0.2110
[V3, scale=0.01, run #13] abm: nan,nan
[V2, scale=0.01, run #12] abm-gwn: 0.0071,0.0090
[V1, scale=10.0, run #13] abm: 3.1031,3.3331
[V1, scale=0.01, run #1] abm-gwn: nan,nan
[V2, scale=0.1, run #0] abm: nan,nan
[V1, scale=1.0, run #8] abm-gwn: 0.1931,0.2089
[V1, scale=10.0, run #14] abm: 3.0961,3.1391
[V2, scale=0.01, run #13] abm-gwn: 0.0091,0.0093
[V3, scale=0.01, run #14] abm: nan,nan
[V2, scale=0.1, run #1] abm: nan,nan
[V3, scale=0.01, run #14] abm: nan,nan
[V3, scale=0.01, run #18] abm-gwn: nan,nan
[V1, scale=10.0, run #15] abm: 3.0881,3.1201
[V1, scale=1.0, run #9] abm-gwn: 0.1779,0.1894
[V2, scale=0.1, run #2] abm: nan,nan
[V2, scale=0.01, run #14] abm-gwn: 0.0089,0.0099
[V1, scale=10.0, run #16] abm: 3.0891,3.1041
[V3, scale=0.01, run #15] abm: nan,nan
[V3, scale=0.01, run #15] abm: nan,nan
[V1, scale=10.0, run #17] abm: 3.0721,3.1621
[V2, scale=0.1, run #3] abm: nan,nan
[V2, scale=0.01, run #15] abm-gwn: 0.0082,0.0092
[V1, scale=1.0, run #10] abm-gwn: 0.1660,0.2079
[V1, scale=10.0, run #18] abm: 3.1141,3.1601
[V2, scale=0.01, run #16] abm-gwn: 0.0084,0.0088
[V3, scale=0.01, run #16] abm: nan,nan
[V2, scale=0.1, run #4] abm: nan,nan
[V1, scale=1.0, run #11] abm-gwn: 0.1940,0.2065
[V1, scale=10.0, run #19] abm: 3.0971,3.3611
[V3, scale=0.01, run #16] abm: nan,nan
[V3, scale=0.01, run #18] abm-gwn: nan,nan
[V2, scale=0.01, run #17] abm-gwn: 0.0080,0.0084
[V1, scale=0.01, run #1] abm-gwn: nan,nan
[V2, scale=0.01, run #18] abm-gwn: 0.0063,0.0065
[V2, scale=0.1, run #5] abm: nan,nan
[V3, scale=0.01, run #17] abm: nan,nan
[V1, scale=0.01, run #2] abm-gwn: nan,nan
[V1, scale=10.0, run #0] abm-gwn: 0.8231,1.0841
[V1, scale=1.0, run #12] abm-gwn: 0.1777,0.2166
[V2, scale=0.01, run #19] abm-gwn: 0.0070,0.0086
[V3, scale=0.01, run #17] abm: nan,nan
[V2, scale=0.1, run #6] abm: nan,nan
[V2, scale=0.1, run #0] abm: nan,nan
[V1, scale=10.0, run #1] abm-gwn: 0.9491,0.9771
[V1, scale=1.0, run #13] abm-gwn: 0.1793,0.2063
[V2, scale=0.1, run #1] abm: nan,nan
[V2, scale=0.1, run #7] abm: nan,nan
[V3, scale=0.01, run #18] abm: nan,nan
[V2, scale=0.1, run #2] abm: nan,nan
[V1, scale=10.0, run #2] abm-gwn: 0.9541,0.9621
[V3, scale=0.01, run #18] abm: nan,nan
[V2, scale=0.1, run #3] abm: nan,nan
[V2, scale=0.1, run #8] abm: nan,nan
[V1, scale=1.0, run #14] abm-gwn: 0.1896,0.2151
[V1, scale=10.0, run #3] abm-gwn: 0.7631,0.7661
[V2, scale=0.1, run #4] abm: nan,nan
[V3, scale=0.01, run #19] abm: nan,nan
[V1, scale=10.0, run #4] abm-gwn: 0.8301,0.8951
[V2, scale=0.1, run #5] abm: nan,nan
[V2, scale=0.1, run #9] abm: nan,nan
[V3, scale=0.01, run #19] abm: nan,nan
[V2, scale=0.1, run #6] abm: nan,nan
[V1, scale=1.0, run #15] abm-gwn: 0.1970,0.2152
[V1, scale=10.0, run #5] abm-gwn: 1.0431,1.0801
[V2, scale=0.1, run #7] abm: nan,nan
[V2, scale=0.1, run #10] abm: nan,nan
[V1, scale=0.01, run #2] abm-gwn: nan,nan
[V2, scale=0.1, run #8] abm: nan,nan
[V1, scale=10.0, run #6] abm-gwn: 0.8771,0.9241
[V1, scale=1.0, run #16] abm-gwn: 0.1815,0.1924
[V3, scale=0.01, run #19] abm-gwn: nan,nan
[V2, scale=0.1, run #9] abm: nan,nan
[V2, scale=0.1, run #11] abm: nan,nan
[V1, scale=0.01, run #3] abm-gwn: nan,nan
[V2, scale=0.1, run #10] abm: nan,nan
[V1, scale=10.0, run #7] abm-gwn: 0.7051,0.9611
[V1, scale=1.0, run #17] abm-gwn: 0.1988,0.2051
[V2, scale=0.1, run #11] abm: nan,nan
[V2, scale=0.1, run #12] abm: nan,nan
[V1, scale=10.0, run #8] abm-gwn: 1.0031,1.0211
[V2, scale=0.1, run #12] abm: nan,nan
[V1, scale=10.0, run #9] abm-gwn: 0.9481,1.0161
[V2, scale=0.1, run #13] abm: nan,nan
[V3, scale=0.01, run #0] abm-gwn: 0.0043,0.0043
[V3, scale=0.01, run #0] abm-gwn: 0.0049,0.0049
[V2, scale=0.1, run #13] abm: nan,nan
[V1, scale=1.0, run #18] abm-gwn: 0.1869,0.2133
[V3, scale=0.1, run #0] abm: nan,nan
[V1, scale=10.0, run #10] abm-gwn: 0.9341,1.0031
[V2, scale=0.1, run #14] abm: nan,nan
[V2, scale=0.1, run #15] abm: nan,nan
[V3, scale=0.01, run #19] abm-gwn: nan,nan
[V1, scale=10.0, run #11] abm-gwn: 1.0651,1.1711
[V2, scale=0.1, run #14] abm: nan,nan
[V2, scale=0.1, run #16] abm: nan,nan
[V1, scale=1.0, run #19] abm-gwn: 0.1808,0.2135
[V1, scale=10.0, run #12] abm-gwn: 0.8841,0.9401
[V2, scale=0.1, run #17] abm: nan,nan
[V1, scale=10.0, run #0] abm: 3.4641,3.7291
[V2, scale=0.1, run #15] abm: nan,nan
[V2, scale=0.1, run #18] abm: nan,nan
[V1, scale=10.0, run #13] abm-gwn: 1.0201,1.0851
[V1, scale=10.0, run #1] abm: 3.3411,3.5741
[V3, scale=0.1, run #1] abm: nan,nan
[V2, scale=0.1, run #19] abm: nan,nan
[V1, scale=10.0, run #14] abm-gwn: 0.8631,0.8921
[V1, scale=0.01, run #3] abm-gwn: nan,nan
[V1, scale=10.0, run #2] abm: 3.4171,3.5951
[V2, scale=0.1, run #16] abm: nan,nan
[V1, scale=10.0, run #15] abm-gwn: 0.9211,0.9851
[V1, scale=10.0, run #3] abm: 3.4261,3.6291
[V3, scale=0.1, run #0] abm: nan,nan
[V2, scale=0.1, run #0] abm-gwn: 0.0773,0.0847
[V1, scale=0.01, run #4] abm-gwn: nan,nan
[V3, scale=0.01, run #1] abm-gwn: 0.0042,0.0043
[V1, scale=10.0, run #16] abm-gwn: 0.9771,0.9891
[V1, scale=10.0, run #4] abm: 3.2741,3.6011
[V2, scale=0.1, run #17] abm: nan,nan
[V3, scale=0.01, run #1] abm-gwn: 0.0050,0.0050
[V1, scale=10.0, run #17] abm-gwn: 0.8601,0.8991
[V1, scale=10.0, run #5] abm: 3.4051,3.5701
[V2, scale=0.1, run #1] abm-gwn: 0.0820,0.0873
[V3, scale=0.1, run #2] abm: nan,nan
[V1, scale=10.0, run #6] abm: 3.4421,3.6441
[V2, scale=0.1, run #18] abm: nan,nan
[V1, scale=10.0, run #18] abm-gwn: 0.9111,1.0011
[V2, scale=0.1, run #2] abm-gwn: 0.0739,0.0833
[V1, scale=10.0, run #7] abm: 3.5561,3.8241
[V1, scale=10.0, run #19] abm-gwn: 1.0281,1.1021
[V1, scale=100.0, run #0] abm: 3.1110,3.2610
[V1, scale=100.0, run #1] abm: 3.1310,3.3710
[V1, scale=100.0, run #2] abm: 3.1210,3.2710
[V1, scale=100.0, run #3] abm: 3.1210,3.2710
[V1, scale=100.0, run #4] abm: 3.1410,3.2910
[V2, scale=0.1, run #3] abm-gwn: 0.0747,0.0780
[V2, scale=0.1, run #19] abm: nan,nan
[V1, scale=100.0, run #5] abm: 3.1410,3.3510
[V1, scale=100.0, run #6] abm: 3.1110,3.3210
[V1, scale=10.0, run #8] abm: 3.4961,3.7001
[V3, scale=0.1, run #1] abm: nan,nan
[V1, scale=100.0, run #7] abm: 3.1110,3.2410
[V1, scale=100.0, run #8] abm: 3.1210,3.2710
[V1, scale=100.0, run #9] abm: 3.1210,3.3010
[V2, scale=0.1, run #0] abm-gwn: 0.0183,0.0188
[V1, scale=100.0, run #10] abm: 3.1110,3.3010
[V1, scale=100.0, run #11] abm: 3.1110,3.3710
[V1, scale=100.0, run #12] abm: 3.1310,3.2010
[V1, scale=100.0, run #13] abm: 3.1310,3.3510
[V2, scale=0.1, run #1] abm-gwn: 0.0177,0.0177
[V1, scale=100.0, run #14] abm: 3.1210,3.3310
[V1, scale=100.0, run #15] abm: 3.1110,3.3010
[V1, scale=100.0, run #16] abm: 3.1210,3.1210
[V1, scale=100.0, run #17] abm: 3.1010,3.1710
[V1, scale=10.0, run #9] abm: 3.4361,3.6071
[V1, scale=100.0, run #18] abm: 3.1410,3.3610
[V1, scale=100.0, run #19] abm: 3.1210,3.3710
[V2, scale=0.1, run #2] abm-gwn: 0.0201,0.0206
[V2, scale=0.1, run #3] abm-gwn: 0.0134,0.0134
[V2, scale=0.1, run #4] abm-gwn: 0.0177,0.0183
[V1, scale=10.0, run #10] abm: 3.2751,3.4871
[V3, scale=0.1, run #3] abm: nan,nan
[V2, scale=0.1, run #4] abm-gwn: 0.0895,0.1000
[V1, scale=100.0, run #0] abm-gwn: 8.2310,10.8410
[V2, scale=0.1, run #5] abm-gwn: 0.0210,0.0219
[V2, scale=0.1, run #6] abm-gwn: 0.0163,0.0167
[V1, scale=10.0, run #11] abm: 3.5071,3.7701
[V2, scale=0.1, run #7] abm-gwn: 0.0167,0.0167
[V1, scale=100.0, run #1] abm-gwn: 9.4910,9.7710
[V2, scale=0.1, run #8] abm-gwn: 0.0204,0.0217
[V1, scale=10.0, run #12] abm: 3.4311,3.6071
[V2, scale=0.1, run #9] abm-gwn: 0.0172,0.0175
[V1, scale=0.01, run #4] abm-gwn: nan,nan
[V2, scale=0.1, run #5] abm-gwn: 0.0779,0.0941
[V1, scale=100.0, run #2] abm-gwn: 9.5410,9.6210
[V2, scale=0.1, run #10] abm-gwn: 0.0231,0.0234
[V1, scale=10.0, run #13] abm: 3.4731,3.5971
[V3, scale=0.1, run #2] abm: nan,nan
[V2, scale=0.1, run #11] abm-gwn: 0.0170,0.0184
[V1, scale=100.0, run #3] abm-gwn: 7.6310,7.6610
[V1, scale=0.01, run #5] abm-gwn: nan,nan
[V2, scale=0.1, run #6] abm-gwn: 0.0725,0.0819
[V2, scale=0.1, run #12] abm-gwn: 0.0187,0.0213
[V1, scale=10.0, run #14] abm: 3.4161,3.7151
[V3, scale=0.01, run #2] abm-gwn: 0.0057,0.0057
[V2, scale=0.1, run #13] abm-gwn: 0.0126,0.0127
[V1, scale=100.0, run #4] abm-gwn: 8.3010,8.9510
[V2, scale=0.1, run #7] abm-gwn: 0.0640,0.0676
[V2, scale=0.1, run #14] abm-gwn: 0.0208,0.0216
[V3, scale=0.1, run #4] abm: nan,nan
[V1, scale=10.0, run #15] abm: 3.4321,3.7471
[V2, scale=0.1, run #15] abm-gwn: 0.0203,0.0205
[V1, scale=100.0, run #5] abm-gwn: 10.4310,10.8010
[V1, scale=10.0, run #16] abm: 3.4031,3.6631
[V2, scale=0.1, run #16] abm-gwn: 0.0231,0.0252
[V2, scale=0.1, run #17] abm-gwn: 0.0171,0.0173
[V2, scale=0.1, run #8] abm-gwn: 0.0858,0.0886
[V1, scale=100.0, run #6] abm-gwn: 8.7710,9.2410
[V2, scale=0.1, run #18] abm-gwn: 0.0136,0.0140
[V1, scale=10.0, run #17] abm: 3.5861,3.7221
[V2, scale=0.1, run #19] abm-gwn: 0.0170,0.0192
[V2, scale=1.0, run #0] abm: 0.1089,0.1657
[V2, scale=1.0, run #1] abm: 0.1051,0.1716
[V2, scale=1.0, run #2] abm: 0.0978,0.1695
[V1, scale=100.0, run #7] abm-gwn: 7.0510,9.6110
[V2, scale=1.0, run #3] abm: 0.1179,0.1641
[V1, scale=10.0, run #18] abm: 3.3101,3.5341
[V3, scale=0.1, run #3] abm: nan,nan
[V2, scale=1.0, run #4] abm: 0.1025,0.1777
[V2, scale=1.0, run #5] abm: 0.0956,0.1719
[V2, scale=0.1, run #9] abm-gwn: 0.0837,0.0875
[V2, scale=1.0, run #6] abm: 0.0961,0.1629
[V2, scale=1.0, run #7] abm: 0.0952,0.1639
[V1, scale=10.0, run #19] abm: 3.3031,3.4871
[V2, scale=1.0, run #8] abm: 0.1026,0.1799
[V1, scale=100.0, run #8] abm-gwn: 10.0310,10.2110
[V2, scale=1.0, run #9] abm: 0.1106,0.1648
[V2, scale=1.0, run #10] abm: 0.0966,0.0978
[V2, scale=1.0, run #11] abm: 0.1006,0.1697
[V3, scale=0.1, run #5] abm: nan,nan
[V2, scale=1.0, run #12] abm: 0.0993,0.1841
[V2, scale=1.0, run #13] abm: 0.0842,0.1722
[V2, scale=1.0, run #14] abm: 0.1007,0.1771
[V1, scale=100.0, run #9] abm-gwn: 9.4810,10.1610
[V2, scale=1.0, run #15] abm: 0.0959,0.1662
[V2, scale=0.1, run #10] abm-gwn: 0.0718,0.0918
[V2, scale=1.0, run #16] abm: 0.0956,0.1047
[V2, scale=1.0, run #17] abm: 0.1100,0.1673
[V2, scale=1.0, run #18] abm: 0.1065,0.1736
[V2, scale=1.0, run #19] abm: 0.1073,0.1884
[V1, scale=100.0, run #10] abm-gwn: 9.3410,10.0310
[V1, scale=10.0, run #0] abm-gwn: 1.9991,2.1571
[V2, scale=1.0, run #0] abm-gwn: 0.1827,0.1884
[V2, scale=0.1, run #11] abm-gwn: 0.0588,0.0713
[V2, scale=1.0, run #1] abm-gwn: 0.1773,0.1773
[V3, scale=0.01, run #2] abm-gwn: nan,nan
[V2, scale=1.0, run #2] abm-gwn: 0.2009,0.2061
[V2, scale=1.0, run #3] abm-gwn: 0.1344,0.1344
[V1, scale=100.0, run #11] abm-gwn: 10.6510,11.7110
[V1, scale=0.01, run #5] abm-gwn: nan,nan
[V2, scale=1.0, run #4] abm-gwn: 0.1771,0.1826
[V3, scale=0.1, run #4] abm: nan,nan
[V2, scale=0.1, run #12] abm-gwn: 0.0738,0.0907
[V2, scale=1.0, run #5] abm-gwn: 0.2098,0.2192
[V1, scale=100.0, run #12] abm-gwn: 8.8410,9.4010
[V1, scale=10.0, run #1] abm-gwn: 1.7811,2.2331
[V2, scale=1.0, run #6] abm-gwn: 0.1626,0.1667
[V3, scale=0.1, run #6] abm: nan,nan
[V2, scale=1.0, run #7] abm-gwn: 0.1666,0.1668
[V1, scale=0.01, run #6] abm-gwn: nan,nan
[V1, scale=100.0, run #13] abm-gwn: 10.2010,10.8510
[V2, scale=1.0, run #8] abm-gwn: 0.2035,0.2174
[V2, scale=1.0, run #9] abm-gwn: 0.1723,0.1751
[V2, scale=0.1, run #13] abm-gwn: 0.0926,0.0972
[V1, scale=100.0, run #14] abm-gwn: 8.6310,8.9210
[V2, scale=1.0, run #10] abm-gwn: 0.2314,0.2340
[V1, scale=10.0, run #2] abm-gwn: 1.8311,2.0951
[V2, scale=1.0, run #11] abm-gwn: 0.1698,0.1839
[V1, scale=100.0, run #15] abm-gwn: 9.2110,9.8510
[V2, scale=1.0, run #12] abm-gwn: 0.1869,0.2134
[V2, scale=1.0, run #13] abm-gwn: 0.1258,0.1271
[V2, scale=0.1, run #14] abm-gwn: 0.0900,0.1000
[V2, scale=1.0, run #14] abm-gwn: 0.2080,0.2157
[V3, scale=0.1, run #5] abm: nan,nan
[V1, scale=100.0, run #16] abm-gwn: 9.7710,9.8910
[V2, scale=1.0, run #15] abm-gwn: 0.2029,0.2045
[V1, scale=10.0, run #3] abm-gwn: 1.9191,2.1481
[V3, scale=0.1, run #7] abm: nan,nan
[V2, scale=0.1, run #15] abm-gwn: 0.0810,0.0848
[V2, scale=1.0, run #16] abm-gwn: 0.2313,0.2515
[V1, scale=100.0, run #17] abm-gwn: 8.6010,8.9910
[V2, scale=1.0, run #17] abm-gwn: 0.1710,0.1730
[V2, scale=1.0, run #18] abm-gwn: 0.1361,0.1395
[V2, scale=1.0, run #19] abm-gwn: 0.1695,0.1923
[V1, scale=100.0, run #18] abm-gwn: 9.1110,10.0110
[V2, scale=10.0, run #0] abm: 2.3041,2.3521
[V2, scale=0.1, run #16] abm-gwn: 0.0864,0.0890
[V2, scale=10.0, run #1] abm: 2.2251,2.2591
[V1, scale=10.0, run #4] abm-gwn: 1.5861,1.9471
[V2, scale=10.0, run #2] abm: 2.4931,2.5861
[V2, scale=10.0, run #3] abm: 1.8311,1.8481
[V2, scale=10.0, run #4] abm: 2.1591,2.3291
[V1, scale=100.0, run #19] abm-gwn: 10.2810,11.0210
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/fromnumeric.py:3419: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:180: RuntimeWarning: invalid value encountered in true_divide
  ret = um.true_divide(
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:261: RuntimeWarning: Degrees of freedom <= 0 for slice
  ret = _var(a, axis=axis, dtype=dtype, out=out, ddof=ddof,
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:221: RuntimeWarning: invalid value encountered in true_divide
  arrmean = um.true_divide(arrmean, div, out=arrmean, casting='unsafe',
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:250: RuntimeWarning: invalid value encountered in true_divide
  ret = um.true_divide(
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:188: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:253: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
================================
data: V1 (extra dim = 0)
condition
{'npolys': [0, 0, 0, 0, 0, 0, 1], 'cmp': ['==', '==', '==', '==', '==', '==', '==']}
================================
================================
data: V1 (extra dim = 0)
condition
{'npolys': [0, 0, 0, 0, 0, 0, 1], 'cmp': ['==', '==', '==', '==', '==', '==', '==']}
================================
================================
data: V1 (extra dim = 0)
condition
{'npolys': [0, 0, 0, 0, 0, 0, 1], 'cmp': ['==', '==', '==', '==', '==', '==', '==']}
================================
    scale   method  ...                             coeff dist (std)   success rate
0    0.01      abm  ...                                    nan (nan)     0/20(0.0%)
0    0.01  abm-gwn  ...                                    nan (nan)     0/20(0.0%)
0    0.10      abm  ...                                    nan (nan)     0/20(0.0%)
0    0.10  abm-gwn  ...     1.2461527475781513 (0.16225929900313596)   18/20(90.0%)
0    1.00      abm  ...    1.3895798512813027 (0.015210233418775768)  20/20(100.0%)
0    1.00  abm-gwn  ...     1.2518266657959494 (0.09546737085043096)  20/20(100.0%)
0   10.00      abm  ...   1.4133945147041225 (7.661216648765617e-05)  20/20(100.0%)
0   10.00  abm-gwn  ...   1.4117290129146205 (0.0014241676375739262)  20/20(100.0%)
0  100.00      abm  ...  1.4142130935680082 (1.4817776073034412e-08)  20/20(100.0%)
0  100.00  abm-gwn  ...     1.41418513441704 (3.465134386018762e-05)  20/20(100.0%)

[10 rows x 7 columns]
[V2, scale=10.0, run #5] abm: 2.5371,2.6001
[V3, scale=0.01, run #3] abm-gwn: nan,nan
[V2, scale=0.1, run #17] abm-gwn: 0.0791,0.0808
[V2, scale=10.0, run #6] abm: 2.1391,2.1891
[V2, scale=10.0, run #7] abm: 2.1441,2.1971
[V2, scale=10.0, run #8] abm: 2.3451,2.7231
[V2, scale=0.1, run #18] abm-gwn: 0.0638,0.0651
[V2, scale=10.0, run #9] abm: 2.2221,2.3561
[V3, scale=0.1, run #6] abm: nan,nan
[V1, scale=10.0, run #5] abm-gwn: 1.7241,1.9111
[V2, scale=10.0, run #10] abm: 2.7991,2.8771
[V1, scale=0.01, run #6] abm-gwn: nan,nan
[V3, scale=0.1, run #8] abm: nan,nan
[V2, scale=10.0, run #11] abm: 2.0961,2.1961
[V2, scale=10.0, run #12] abm: 2.2321,2.7821
[V2, scale=10.0, run #13] abm: 1.6811,1.7551
[V2, scale=10.0, run #14] abm: 2.4281,2.7061
[V2, scale=0.1, run #19] abm-gwn: 0.0728,0.0838
[V2, scale=10.0, run #15] abm: 2.4681,2.5511
[V1, scale=0.01, run #7] abm-gwn: nan,nan
[V2, scale=10.0, run #16] abm: 2.6311,2.9431
[V2, scale=10.0, run #17] abm: 2.1671,2.1841
[V1, scale=10.0, run #6] abm-gwn: 1.5571,1.9911
[V2, scale=10.0, run #18] abm: 1.6951,1.8121
[V2, scale=10.0, run #19] abm: 1.9801,2.4401
[V2, scale=1.0, run #0] abm: nan,nan
[V2, scale=10.0, run #0] abm-gwn: 1.8271,1.8841
[V2, scale=10.0, run #1] abm-gwn: 1.7731,1.7731
[V2, scale=10.0, run #2] abm-gwn: 2.0091,2.0611
[V2, scale=10.0, run #3] abm-gwn: 1.3441,1.3441
[V2, scale=1.0, run #1] abm: nan,nan
[V2, scale=10.0, run #4] abm-gwn: 1.7711,1.8261
[V3, scale=0.1, run #9] abm: nan,nan
[V1, scale=10.0, run #7] abm-gwn: 1.8621,2.1101
[V3, scale=0.1, run #7] abm: nan,nan
[V2, scale=10.0, run #5] abm-gwn: 2.0981,2.1921
[V2, scale=10.0, run #6] abm-gwn: 1.6261,1.6671
[V2, scale=1.0, run #2] abm: nan,nan
[V2, scale=10.0, run #7] abm-gwn: 1.6661,1.6681
[V2, scale=10.0, run #8] abm-gwn: 2.0351,2.1741
[V3, scale=0.01, run #4] abm-gwn: 0.0048,0.0048
[V2, scale=10.0, run #9] abm-gwn: 1.7231,1.7511
[V1, scale=10.0, run #8] abm-gwn: 1.9311,2.0891
[V3, scale=0.01, run #3] abm-gwn: nan,nan
[V2, scale=1.0, run #3] abm: nan,nan
[V2, scale=10.0, run #10] abm-gwn: 2.3141,2.3401
[V2, scale=10.0, run #11] abm-gwn: 1.6981,1.8391
[V2, scale=10.0, run #12] abm-gwn: 1.8691,2.1341
[V2, scale=10.0, run #13] abm-gwn: 1.2581,1.2711
[V2, scale=1.0, run #4] abm: nan,nan
[V1, scale=10.0, run #9] abm-gwn: 1.7791,1.8941
[V3, scale=0.1, run #10] abm: nan,nan
[V2, scale=10.0, run #14] abm-gwn: 2.0801,2.1571
[V3, scale=0.1, run #8] abm: nan,nan
[V2, scale=10.0, run #15] abm-gwn: 2.0291,2.0451
[V1, scale=0.01, run #7] abm-gwn: nan,nan
[V2, scale=1.0, run #5] abm: nan,nan
[V2, scale=10.0, run #16] abm-gwn: 2.3131,2.5151
[V2, scale=10.0, run #17] abm-gwn: 1.7101,1.7301
[V2, scale=10.0, run #18] abm-gwn: 1.3611,1.3951
[V1, scale=10.0, run #10] abm-gwn: 1.6601,2.0791
[V2, scale=10.0, run #19] abm-gwn: 1.6951,1.9231
[V2, scale=100.0, run #0] abm: nan,nan
[V2, scale=100.0, run #1] abm: nan,nan
[V2, scale=100.0, run #2] abm: nan,nan
[V2, scale=1.0, run #6] abm: nan,nan
[V2, scale=100.0, run #3] abm: nan,nan
[V2, scale=100.0, run #4] abm: nan,nan
[V1, scale=0.01, run #8] abm-gwn: nan,nan
[V2, scale=100.0, run #5] abm: nan,nan
[V2, scale=100.0, run #6] abm: nan,nan
[V2, scale=100.0, run #7] abm: nan,nan
[V2, scale=100.0, run #8] abm: nan,nan
[V2, scale=100.0, run #9] abm: nan,nan
[V2, scale=100.0, run #10] abm: nan,nan
[V2, scale=100.0, run #11] abm: nan,nan
[V2, scale=100.0, run #12] abm: nan,nan
[V2, scale=100.0, run #13] abm: nan,nan
[V2, scale=100.0, run #14] abm: nan,nan
[V2, scale=100.0, run #15] abm: nan,nan
[V2, scale=100.0, run #16] abm: nan,nan
[V2, scale=100.0, run #17] abm: nan,nan
[V2, scale=100.0, run #18] abm: nan,nan
[V2, scale=100.0, run #19] abm: nan,nan
[V2, scale=100.0, run #0] abm-gwn: 15.0310,15.3610
[V2, scale=100.0, run #1] abm-gwn: 14.4410,14.8910
[V2, scale=1.0, run #7] abm: nan,nan
[V2, scale=100.0, run #2] abm-gwn: 16.5010,16.8010
[V3, scale=0.1, run #11] abm: nan,nan
[V1, scale=10.0, run #11] abm-gwn: 1.9401,2.0651
[V3, scale=0.01, run #4] abm-gwn: 0.0044,0.0045
[V3, scale=0.1, run #9] abm: nan,nan
[V2, scale=1.0, run #8] abm: nan,nan
[V2, scale=100.0, run #3] abm-gwn: 11.7910,43.2110
[V2, scale=100.0, run #4] abm-gwn: 14.3110,15.0910
[V2, scale=100.0, run #5] abm-gwn: 17.0110,17.4110
[V2, scale=100.0, run #6] abm-gwn: 13.6310,13.8710
[V1, scale=10.0, run #12] abm-gwn: 1.7771,2.1661
[V2, scale=100.0, run #7] abm-gwn: 13.7310,14.2210
[V2, scale=1.0, run #9] abm: nan,nan
[V2, scale=100.0, run #8] abm-gwn: 16.0910,18.0810
[V2, scale=100.0, run #9] abm-gwn: 14.3410,14.8510
[V2, scale=100.0, run #10] abm-gwn: 18.9610,19.2010
[V2, scale=100.0, run #11] abm-gwn: 13.8010,14.6810
[V2, scale=1.0, run #10] abm: nan,nan
[V3, scale=0.1, run #12] abm: nan,nan
[V2, scale=100.0, run #12] abm-gwn: 14.8910,18.0110
[V1, scale=10.0, run #13] abm-gwn: 1.7931,2.0631
[V2, scale=100.0, run #13] abm-gwn: 10.4610,10.7810
[V2, scale=100.0, run #14] abm-gwn: 16.4510,17.8110
[V2, scale=100.0, run #15] abm-gwn: 16.5410,16.8310
[V3, scale=0.1, run #10] abm: nan,nan
[V2, scale=1.0, run #11] abm: nan,nan
[V1, scale=0.01, run #8] abm-gwn: nan,nan
[V1, scale=10.0, run #14] abm-gwn: 1.8961,2.1511
[V2, scale=1.0, run #12] abm: nan,nan
[V2, scale=100.0, run #16] abm-gwn: 22.3410,50.5710
[V2, scale=100.0, run #17] abm-gwn: 14.0710,14.2110
[V2, scale=100.0, run #18] abm-gwn: 10.9910,11.5710
[V2, scale=100.0, run #19] abm-gwn: 13.4310,16.0610
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/fromnumeric.py:3419: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:180: RuntimeWarning: invalid value encountered in true_divide
  ret = um.true_divide(
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:261: RuntimeWarning: Degrees of freedom <= 0 for slice
  ret = _var(a, axis=axis, dtype=dtype, out=out, ddof=ddof,
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:221: RuntimeWarning: invalid value encountered in true_divide
  arrmean = um.true_divide(arrmean, div, out=arrmean, casting='unsafe',
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:250: RuntimeWarning: invalid value encountered in true_divide
  ret = um.true_divide(
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:188: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:253: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
================================
data: V2 (extra dim = 0)
condition
{'npolys': [0, 1, 0, 1], 'cmp': ['==', '==', '==', '==']}
================================
================================
data: V2 (extra dim = 0)
condition
{'npolys': [0, 1, 0, 1], 'cmp': ['==', '==', '==', '==']}
================================
================================
data: V2 (extra dim = 0)
condition
{'npolys': [0, 1, 0, 1], 'cmp': ['==', '==', '==', '==']}
================================
new range: 0.0010801000000000003, 0.010000100000000001
new range: 0.0010501000000000002, 0.010000100000000001
new range: 0.0009701000000000002, 0.010000100000000001
new range: 0.0011701000000000003, 0.010000100000000001
new range: 0.0010201000000000003, 0.010000100000000001
new range: 0.0009501000000000002, 0.010000100000000001
new range: 0.0009601000000000002, 0.010000100000000001
new range: 0.0009501000000000002, 0.010000100000000001
new range: 0.0010201000000000003, 0.010000100000000001
new range: 0.0011001000000000003, 0.010000100000000001
new range: 0.0008501000000000001, 0.010000100000000001
new range: 0.0010001000000000003, 0.010000100000000001
new range: 0.0009901000000000003, 0.010000100000000001
new range: 0.0008401000000000001, 0.010000100000000001
new range: 0.0010001000000000003, 0.010000100000000001
new range: 0.0009501000000000002, 0.010000100000000001
new range: 0.0009101000000000002, 0.010000100000000001
new range: 0.0010901000000000003, 0.010000100000000001
new range: 0.0010601000000000002, 0.010000100000000001
new range: 0.0010701000000000003, 0.010000100000000001
new range: 0.0010801000000000003, 0.010000100000000001
new range: 0.0010501000000000002, 0.010000100000000001
new range: 0.0009701000000000002, 0.010000100000000001
new range: 0.0011701000000000003, 0.010000100000000001
new range: 0.0010201000000000003, 0.010000100000000001
new range: 0.0009501000000000002, 0.010000100000000001
new range: 0.0009601000000000002, 0.010000100000000001
new range: 0.0009501000000000002, 0.010000100000000001
new range: 0.0010201000000000003, 0.010000100000000001
new range: 0.0011001000000000003, 0.010000100000000001
new range: 0.0008501000000000001, 0.010000100000000001
new range: 0.0010001000000000003, 0.010000100000000001
new range: 0.0009901000000000003, 0.010000100000000001
new range: 0.0008401000000000001, 0.010000100000000001
new range: 0.0010001000000000003, 0.010000100000000001
new range: 0.0009501000000000002, 0.010000100000000001
new range: 0.0009101000000000002, 0.010000100000000001
new range: 0.0010901000000000003, 0.010000100000000001
new range: 0.0010601000000000002, 0.010000100000000001
new range: 0.0010701000000000003, 0.010000100000000001
new range: 0.010801, 0.100001
new range: 0.010501, 0.100001
new range: 0.009701, 0.100001
new range: 0.011701, 0.100001
new range: 0.010201, 0.100001
new range: 0.009501, 0.100001
new range: 0.009601, 0.100001
new range: 0.009501, 0.100001
new range: 0.010201, 0.100001
new range: 0.011001, 0.100001
new range: 0.008501, 0.100001
new range: 0.010001000000000001, 0.100001
new range: 0.009901, 0.100001
new range: 0.008401, 0.100001
new range: 0.010001000000000001, 0.100001
new range: 0.009501, 0.100001
new range: 0.009101, 0.100001
new range: 0.010901000000000001, 0.100001
new range: 0.010601000000000001, 0.100001
new range: 0.010701, 0.100001
new range: 0.010801, 0.100001
new range: 0.010501, 0.100001
new range: 0.009701, 0.100001
new range: 0.011701, 0.100001
new range: 0.010201, 0.100001
new range: 0.009501, 0.100001
new range: 0.009601, 0.100001
new range: 0.009501, 0.100001
new range: 0.010201, 0.100001
new range: 0.011001, 0.100001
new range: 0.008501, 0.100001
new range: 0.010001000000000001, 0.100001
new range: 0.009901, 0.100001
new range: 0.008401, 0.100001
new range: 0.010001000000000001, 0.100001
new range: 0.009501, 0.100001
new range: 0.009101, 0.100001
new range: 0.010901000000000001, 0.100001
new range: 0.010601000000000001, 0.100001
new range: 0.010701, 0.100001
new range: 0.10801, 1.0000099999999998
new range: 0.10500999999999999, 1.0000099999999998
new range: 0.09701, 1.0000099999999998
new range: 0.11701, 1.0000099999999998
new range: 0.10201, 1.0000099999999998
new range: 0.09501, 1.0000099999999998
new range: 0.09601, 1.0000099999999998
new range: 0.09501, 1.0000099999999998
new range: 0.10201, 1.0000099999999998
new range: 0.11001, 1.0000099999999998
new range: 0.08501, 1.0000099999999998
new range: 0.10001, 1.0000099999999998
new range: 0.09901, 1.0000099999999998
new range: 0.08401, 1.0000099999999998
new range: 0.10001, 1.0000099999999998
new range: 0.09501, 1.0000099999999998
new range: 0.09101, 1.0000099999999998
new range: 0.10901, 1.0000099999999998
new range: 0.10601, 1.0000099999999998
new range: 0.10701, 1.0000099999999998
new range: 0.10801, 1.0000099999999998
new range: 0.10500999999999999, 1.0000099999999998
new range: 0.09701, 1.0000099999999998
new range: 0.11701, 1.0000099999999998
new range: 0.10201, 1.0000099999999998
new range: 0.09501, 1.0000099999999998
new range: 0.09601, 1.0000099999999998
new range: 0.09501, 1.0000099999999998
new range: 0.10201, 1.0000099999999998
new range: 0.11001, 1.0000099999999998
new range: 0.08501, 1.0000099999999998
new range: 0.10001, 1.0000099999999998
new range: 0.09901, 1.0000099999999998
new range: 0.08401, 1.0000099999999998
new range: 0.10001, 1.0000099999999998
new range: 0.09501, 1.0000099999999998
new range: 0.09101, 1.0000099999999998
new range: 0.10901, 1.0000099999999998
new range: 0.10601, 1.0000099999999998
new range: 0.10701, 1.0000099999999998
new range: 1.0801, 10.0001
new range: 1.0501, 10.0001
new range: 0.9701, 10.0001
new range: 1.1701, 10.0001
new range: 1.0201, 10.0001
new range: 0.9501, 10.0001
new range: 0.9501, 10.0001
new range: 0.9501, 10.0001
new range: 1.0201, 10.0001
new range: 1.1001, 10.0001
new range: 0.8501, 10.0001
new range: 1.0001, 10.0001
new range: 0.9901, 10.0001
new range: 0.8401, 10.0001
new range: 1.0001, 10.0001
new range: 0.9501, 10.0001
new range: 0.9101, 10.0001
new range: 1.0901, 10.0001
new range: 1.0601, 10.0001
new range: 1.0701, 10.0001
new range: 1.0801, 10.0001
new range: 1.0501, 10.0001
new range: 0.9701, 10.0001
new range: 1.1701, 10.0001
new range: 1.0201, 10.0001
new range: 0.9501, 10.0001
new range: 0.9601, 10.0001
new range: 0.9501, 10.0001
new range: 1.0201, 10.0001
new range: 1.1001, 10.0001
new range: 0.8501, 10.0001
new range: 1.0001, 10.0001
new range: 0.9901, 10.0001
new range: 0.8401, 10.0001
new range: 1.0001, 10.0001
new range: 0.9501, 10.0001
new range: 0.9101, 10.0001
new range: 1.0901, 10.0001
new range: 1.0601, 10.0001
new range: 1.0701, 10.0001
new range: 9.701, 10.001
new range: 9.401, 10.001
new range: 9.601, 10.001
new range: nan, nan
new range: nan, nan
new range: 8.601, 10.001
new range: 8.501, 10.001
new range: 9.001, 10.001
new range: 9.701, 10.001
new range: nan, nan
new range: 8.501, 10.001
new range: nan, nan
new range: 9.601, 10.001
new range: 7.901, 10.001
new range: 9.801, 10.001
new range: 9.501000000000001, 10.001
new range: 8.401, 10.001
new range: nan, nan
new range: nan, nan
new range: 9.601, 10.001
new range: 10.801, 100.001
new range: 10.501000000000001, 100.001
new range: 9.701, 100.001
new range: 11.701, 100.001
new range: 10.201, 100.001
new range: 9.501000000000001, 100.001
new range: 9.601, 100.001
new range: 9.501000000000001, 100.001
new range: 10.201, 100.001
new range: 11.001000000000001, 100.001
new range: 8.501, 100.001
new range: 10.001000000000001, 100.001
new range: 9.901, 100.001
new range: 8.401, 100.001
new range: 10.001000000000001, 100.001
new range: 9.501000000000001, 100.001
new range: 9.101, 100.001
new range: 10.901, 100.001
new range: 10.601, 100.001
new range: 10.701, 100.001
    scale   method  ...                             coeff dist (std)   success rate
0    0.01      abm  ...                                    nan (nan)     0/20(0.0%)
0    0.01  abm-gwn  ...    0.5923642150642606 (0.008718207137092001)  20/20(100.0%)
0    0.10      abm  ...                                    nan (nan)     0/20(0.0%)
0    0.10  abm-gwn  ...    0.4779883023379238 (0.017650446739407064)  20/20(100.0%)
0    1.00      abm  ...  0.015009153104326337 (0.031188241559152702)  20/20(100.0%)
0    1.00  abm-gwn  ...   0.04725806496189637 (0.029267596889790106)  20/20(100.0%)
0   10.00      abm  ...    0.5921494799119064 (0.009555620474734695)  20/20(100.0%)
0   10.00  abm-gwn  ...    0.5666256584859657 (0.006452079680722285)  20/20(100.0%)
0  100.00      abm  ...                                    nan (nan)     0/20(0.0%)
0  100.00  abm-gwn  ...     0.7415420311813067 (0.03884556776924608)  20/20(100.0%)

[10 rows x 7 columns]
[V1, scale=0.01, run #9] abm-gwn: nan,nan
[V2, scale=1.0, run #13] abm: nan,nan
[V3, scale=0.1, run #13] abm: nan,nan
[V1, scale=10.0, run #15] abm-gwn: 1.9701,2.1521
[V2, scale=1.0, run #14] abm: nan,nan
[V3, scale=0.1, run #11] abm: nan,nan
[V3, scale=0.01, run #5] abm-gwn: nan,nan
[V1, scale=10.0, run #16] abm-gwn: 1.8151,1.9241
[V2, scale=1.0, run #15] abm: nan,nan
[V2, scale=1.0, run #16] abm: nan,nan
[V3, scale=0.1, run #14] abm: nan,nan
[V1, scale=10.0, run #17] abm-gwn: 1.9881,2.0511
[V2, scale=1.0, run #17] abm: nan,nan
[V3, scale=0.1, run #12] abm: nan,nan
[V2, scale=1.0, run #18] abm: nan,nan
[V1, scale=10.0, run #18] abm-gwn: 1.8691,2.1331
[V2, scale=1.0, run #19] abm: nan,nan
[V1, scale=0.01, run #9] abm-gwn: nan,nan
[V3, scale=0.1, run #15] abm: nan,nan
[V1, scale=10.0, run #19] abm-gwn: 1.8081,2.1351
[V1, scale=100.0, run #0] abm: 3.4810,3.7310
[V1, scale=100.0, run #1] abm: 3.3610,3.5810
[V1, scale=0.01, run #10] abm-gwn: nan,nan
[V2, scale=1.0, run #0] abm-gwn: 0.7726,0.8470
[V1, scale=100.0, run #2] abm: 3.4310,3.7210
[V1, scale=100.0, run #3] abm: 3.4510,3.7110
[V1, scale=100.0, run #4] abm: 3.3010,3.6110
[V3, scale=0.01, run #5] abm-gwn: nan,nan
[V1, scale=100.0, run #5] abm: 3.4310,3.5810
[V1, scale=100.0, run #6] abm: 3.4610,3.6510
[V1, scale=100.0, run #7] abm: 3.5810,3.8210
[V1, scale=100.0, run #8] abm: 3.5210,3.7010
[V1, scale=100.0, run #9] abm: 3.4510,3.7210
[V1, scale=100.0, run #10] abm: 3.3110,3.7210
[V1, scale=100.0, run #11] abm: 3.5310,3.8010
[V1, scale=100.0, run #12] abm: 3.4410,3.6110
[V1, scale=100.0, run #13] abm: 3.4910,3.6010
[V1, scale=100.0, run #14] abm: 3.4410,3.7210
[V1, scale=100.0, run #15] abm: 3.4510,3.7510
[V1, scale=100.0, run #16] abm: 3.4210,3.6610
[V1, scale=100.0, run #17] abm: 3.6010,3.7210
[V3, scale=0.1, run #13] abm: nan,nan
[V1, scale=100.0, run #18] abm: 3.3210,3.5410
[V1, scale=100.0, run #19] abm: 3.3210,3.6610
[V2, scale=1.0, run #1] abm-gwn: 0.8202,0.8733
[V2, scale=1.0, run #2] abm-gwn: 0.7394,0.8332
[V3, scale=0.1, run #16] abm: nan,nan
[V1, scale=100.0, run #0] abm-gwn: 19.9910,21.5710
[V2, scale=1.0, run #3] abm-gwn: 0.7474,0.7796
[V3, scale=0.1, run #14] abm: nan,nan
[V1, scale=100.0, run #1] abm-gwn: 17.8110,22.3310
[V2, scale=1.0, run #4] abm-gwn: 0.8952,0.9999
[V3, scale=0.1, run #17] abm: nan,nan
[V1, scale=0.01, run #10] abm-gwn: nan,nan
[V1, scale=100.0, run #2] abm-gwn: 18.3110,20.9510
[V2, scale=1.0, run #5] abm-gwn: 0.7788,0.9413
[V1, scale=0.01, run #11] abm-gwn: nan,nan
[V3, scale=0.01, run #6] abm-gwn: nan,nan
[V2, scale=1.0, run #6] abm-gwn: 0.7249,0.8194
[V2, scale=1.0, run #7] abm-gwn: 0.6395,0.6758
[V3, scale=0.1, run #15] abm: nan,nan
[V1, scale=100.0, run #3] abm-gwn: 19.1910,21.4810
[V3, scale=0.1, run #18] abm: nan,nan
[V2, scale=1.0, run #8] abm-gwn: 0.8582,0.8858
[V1, scale=100.0, run #4] abm-gwn: 15.8610,19.4710
[V2, scale=1.0, run #9] abm-gwn: 0.8368,0.8753
[V1, scale=100.0, run #5] abm-gwn: 17.2410,19.1110
[V3, scale=0.1, run #16] abm: nan,nan
[V2, scale=1.0, run #10] abm-gwn: 0.7177,0.9177
[V3, scale=0.1, run #19] abm: nan,nan
[V1, scale=100.0, run #6] abm-gwn: 15.5710,19.9110
[V2, scale=1.0, run #11] abm-gwn: 0.5880,0.7128
[V3, scale=0.01, run #6] abm-gwn: nan,nan
[V3, scale=0.01, run #7] abm-gwn: 0.0049,0.0049
[V1, scale=0.01, run #11] abm-gwn: nan,nan
[V2, scale=1.0, run #12] abm-gwn: 0.7380,0.9069
[V1, scale=100.0, run #7] abm-gwn: 18.6210,21.1010
[V1, scale=0.01, run #12] abm-gwn: nan,nan
[V3, scale=0.1, run #0] abm-gwn: 0.0199,0.0199
[V3, scale=0.1, run #17] abm: nan,nan
[V2, scale=1.0, run #13] abm-gwn: 0.9262,0.9717
[V1, scale=100.0, run #8] abm-gwn: 19.3110,20.8910
[V3, scale=0.1, run #1] abm-gwn: 0.0151,0.0154
[V2, scale=1.0, run #14] abm-gwn: 0.8995,0.9999
[V1, scale=100.0, run #9] abm-gwn: 17.7910,18.9410
[V3, scale=0.01, run #7] abm-gwn: 0.0041,0.0041
[V2, scale=1.0, run #15] abm-gwn: 0.8098,0.8481
[V3, scale=0.1, run #18] abm: nan,nan
[V3, scale=0.1, run #2] abm-gwn: 0.0172,0.0188
[V3, scale=0.01, run #8] abm-gwn: 0.0049,0.0050
[V2, scale=1.0, run #16] abm-gwn: 0.8639,0.8899
[V1, scale=100.0, run #10] abm-gwn: 16.6010,20.7910
[V2, scale=1.0, run #17] abm-gwn: 0.7914,0.8075
[V2, scale=1.0, run #18] abm-gwn: 0.6379,0.6505
[V3, scale=0.1, run #3] abm-gwn: 0.0144,0.0145
[V1, scale=0.01, run #12] abm-gwn: nan,nan
[V1, scale=100.0, run #11] abm-gwn: 19.4010,20.6510
[V2, scale=1.0, run #19] abm-gwn: 0.7277,0.8384
[V2, scale=10.0, run #0] abm: 4.6251,5.1391
[V1, scale=0.01, run #13] abm-gwn: nan,nan
[V3, scale=0.1, run #19] abm: nan,nan
[V2, scale=10.0, run #1] abm: 4.5861,5.5801
[V2, scale=10.0, run #2] abm: 4.5631,5.4291
[V2, scale=10.0, run #3] abm: 5.2871,5.3481
[V2, scale=10.0, run #4] abm: 4.3341,5.7181
[V1, scale=100.0, run #12] abm-gwn: 17.7710,21.6610
[V2, scale=10.0, run #5] abm: 4.6901,5.6141
[V3, scale=0.1, run #4] abm-gwn: 0.0161,0.0162
[V2, scale=10.0, run #6] abm: 4.8361,5.4151
[V2, scale=10.0, run #7] abm: 5.0971,5.3001
[V2, scale=10.0, run #8] abm: 4.6031,5.3441
[V3, scale=0.01, run #8] abm-gwn: 0.0042,0.0043
[V2, scale=10.0, run #9] abm: 4.4631,5.5171
[V3, scale=0.1, run #0] abm-gwn: 0.0086,0.0090
[V2, scale=10.0, run #10] abm: 4.9861,5.5321
[V2, scale=10.0, run #11] abm: 4.8371,4.8621
[V2, scale=10.0, run #12] abm: 5.1491,5.4801
[V2, scale=10.0, run #13] abm: 4.7751,5.4781
[V2, scale=10.0, run #14] abm: 4.8041,5.5371
[V2, scale=10.0, run #15] abm: 5.0181,5.7381
[V2, scale=10.0, run #16] abm: 5.4351,5.5961
[V2, scale=10.0, run #17] abm: 5.1191,5.4401
[V2, scale=10.0, run #18] abm: 5.0241,5.1731
[V2, scale=10.0, run #19] abm: 4.7571,5.3341
[V1, scale=100.0, run #13] abm-gwn: 17.9310,20.6310
[V3, scale=0.1, run #1] abm-gwn: 0.0098,0.0099
[V2, scale=10.0, run #0] abm-gwn: 7.7261,8.4701
[V3, scale=0.1, run #2] abm-gwn: 0.0084,0.0086
[V3, scale=0.1, run #5] abm-gwn: 0.0179,0.0217
[V1, scale=100.0, run #14] abm-gwn: 18.9610,21.5110
[V2, scale=10.0, run #1] abm-gwn: 8.2021,8.7331
[V3, scale=0.1, run #3] abm-gwn: 0.0107,0.0107
[V3, scale=0.1, run #6] abm-gwn: 0.0163,0.0166
[V1, scale=100.0, run #15] abm-gwn: 19.7010,21.5210
[V2, scale=10.0, run #2] abm-gwn: 7.3941,8.3321
[V3, scale=0.1, run #4] abm-gwn: 0.0092,0.0092
[V1, scale=0.01, run #13] abm-gwn: nan,nan
[V3, scale=0.01, run #9] abm-gwn: 0.0044,0.0045
[V2, scale=10.0, run #3] abm-gwn: 7.4741,7.7961
[V3, scale=0.1, run #5] abm-gwn: 0.0081,0.0082
[V1, scale=100.0, run #16] abm-gwn: 18.1510,19.2410
[V1, scale=0.01, run #14] abm-gwn: nan,nan
[V3, scale=0.1, run #6] abm-gwn: 0.0065,0.0065
[V3, scale=0.1, run #7] abm-gwn: 0.0164,0.0203
[V2, scale=10.0, run #4] abm-gwn: 8.9521,9.9991
[V1, scale=100.0, run #17] abm-gwn: 19.8810,20.5110
[V3, scale=0.1, run #7] abm-gwn: 0.0096,0.0098
[V3, scale=0.01, run #9] abm-gwn: nan,nan
[V2, scale=10.0, run #5] abm-gwn: 7.7881,9.4131
[V3, scale=0.1, run #8] abm-gwn: 0.0093,0.0095
[V1, scale=100.0, run #18] abm-gwn: 18.6910,21.3310
[V3, scale=0.1, run #8] abm-gwn: 0.0161,0.0188
[V2, scale=10.0, run #6] abm-gwn: 7.2491,8.1941
[V3, scale=0.1, run #9] abm-gwn: 0.0082,0.0083
[V2, scale=10.0, run #7] abm-gwn: 6.3951,6.7581
[V3, scale=0.01, run #10] abm-gwn: 0.0045,0.0045
[V1, scale=100.0, run #19] abm-gwn: 18.0810,21.3510
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/fromnumeric.py:3419: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:180: RuntimeWarning: invalid value encountered in true_divide
  ret = um.true_divide(
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:261: RuntimeWarning: Degrees of freedom <= 0 for slice
  ret = _var(a, axis=axis, dtype=dtype, out=out, ddof=ddof,
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:221: RuntimeWarning: invalid value encountered in true_divide
  arrmean = um.true_divide(arrmean, div, out=arrmean, casting='unsafe',
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:250: RuntimeWarning: invalid value encountered in true_divide
  ret = um.true_divide(
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:188: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:253: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
================================
data: V1 (extra dim = 0)
condition
{'npolys': [0, 0, 0, 0, 0, 0, 1], 'cmp': ['==', '==', '==', '==', '==', '==', '==']}
================================
================================
data: V1 (extra dim = 0)
condition
{'npolys': [0, 0, 0, 0, 0, 0, 1], 'cmp': ['==', '==', '==', '==', '==', '==', '==']}
================================
================================
data: V1 (extra dim = 0)
condition
{'npolys': [0, 0, 0, 0, 0, 0, 1], 'cmp': ['==', '==', '==', '==', '==', '==', '==']}
================================
    scale   method  ...                             coeff dist (std)   success rate
0    0.01      abm  ...                                    nan (nan)     0/20(0.0%)
0    0.01  abm-gwn  ...                                    nan (nan)     0/20(0.0%)
0    0.10      abm  ...                                    nan (nan)     0/20(0.0%)
0    0.10  abm-gwn  ...     1.3302186702402847 (0.06736354203074492)   19/20(95.0%)
0    1.00      abm  ...    1.2979518015290097 (0.024997838398931556)  20/20(100.0%)
0    1.00  abm-gwn  ...      1.345154947209996 (0.04121746564766355)  20/20(100.0%)
0   10.00      abm  ...  1.4127130820316893 (0.00015375435102534367)  20/20(100.0%)
0   10.00  abm-gwn  ...     1.402343181087292 (0.003925484081537564)  20/20(100.0%)
0  100.00      abm  ...   1.4142079202709052 (5.741861793779995e-07)  20/20(100.0%)
0  100.00  abm-gwn  ...  1.4139660190443517 (0.00023639946170328776)  20/20(100.0%)

[10 rows x 7 columns]
[V3, scale=0.1, run #10] abm-gwn: 0.0085,0.0091
[V2, scale=10.0, run #8] abm-gwn: 8.5821,8.8581
[V3, scale=0.1, run #9] abm-gwn: 0.0202,0.0204
[V1, scale=0.01, run #14] abm-gwn: nan,nan
[V3, scale=0.1, run #11] abm-gwn: 0.0062,0.0097
[V2, scale=10.0, run #9] abm-gwn: 8.3681,8.7531
[V3, scale=0.1, run #10] abm-gwn: 0.0093,0.0098
[V1, scale=0.01, run #15] abm-gwn: nan,nan
[V3, scale=0.1, run #12] abm-gwn: 0.0092,0.0093
[V2, scale=10.0, run #10] abm-gwn: 7.1771,9.1771
[V2, scale=10.0, run #11] abm-gwn: 5.8801,7.1281
[V3, scale=0.1, run #13] abm-gwn: 0.0091,0.0110
[V3, scale=0.1, run #11] abm-gwn: 0.0158,0.0159
[V3, scale=0.01, run #11] abm-gwn: 0.0045,0.0046
[V2, scale=10.0, run #12] abm-gwn: 7.3801,9.0691
[V3, scale=0.1, run #14] abm-gwn: 0.0097,0.0101
[V3, scale=0.1, run #15] abm-gwn: 0.0096,0.0098
[V3, scale=0.1, run #12] abm-gwn: 0.0198,0.0203
[V2, scale=10.0, run #13] abm-gwn: 9.2621,9.7171
[V3, scale=0.1, run #16] abm-gwn: 0.0090,0.0092
[V3, scale=0.1, run #13] abm-gwn: 0.0122,0.0128
[V2, scale=10.0, run #14] abm-gwn: 8.9951,9.9991
[V1, scale=0.01, run #15] abm-gwn: nan,nan
[V3, scale=0.1, run #17] abm-gwn: 0.0097,0.0099
[V2, scale=10.0, run #15] abm-gwn: 8.0981,8.4811
[V1, scale=0.01, run #16] abm-gwn: nan,nan
[V3, scale=0.1, run #18] abm-gwn: 0.0092,0.0093
[V2, scale=10.0, run #16] abm-gwn: 8.6391,8.8991
[V3, scale=0.1, run #14] abm-gwn: 0.0194,0.0199
[V2, scale=10.0, run #17] abm-gwn: 7.9141,8.0751
[V3, scale=0.1, run #19] abm-gwn: 0.0093,0.0098
[V3, scale=1.0, run #0] abm: 0.0389,0.0408
[V3, scale=1.0, run #1] abm: 0.0414,0.0450
[V3, scale=1.0, run #2] abm: 0.0390,0.0398
[V2, scale=10.0, run #18] abm-gwn: 6.3791,6.5051
[V3, scale=1.0, run #3] abm: 0.0416,0.0443
[V3, scale=1.0, run #4] abm: 0.0385,0.0399
[V3, scale=0.01, run #10] abm-gwn: nan,nan
[V3, scale=1.0, run #5] abm: 0.0381,0.0396
[V3, scale=1.0, run #6] abm: 0.0332,0.0341
[V3, scale=1.0, run #7] abm: 0.0423,0.0443
[V3, scale=1.0, run #8] abm: 0.0358,0.0378
[V3, scale=1.0, run #9] abm: 0.0419,0.0435
[V3, scale=1.0, run #10] abm: 0.0388,0.0408
[V2, scale=10.0, run #19] abm-gwn: 7.2771,8.3841
[V3, scale=0.1, run #15] abm-gwn: 0.0170,0.0186
[V2, scale=100.0, run #0] abm: nan,nan
[V3, scale=1.0, run #11] abm: 0.0326,0.0326
[V2, scale=100.0, run #1] abm: nan,nan
[V2, scale=100.0, run #2] abm: nan,nan
[V2, scale=100.0, run #3] abm: nan,nan
[V2, scale=100.0, run #4] abm: nan,nan
[V3, scale=1.0, run #12] abm: 0.0398,0.0412
[V2, scale=100.0, run #5] abm: nan,nan
[V2, scale=100.0, run #6] abm: nan,nan
[V3, scale=1.0, run #13] abm: 0.0424,0.0432
[V2, scale=100.0, run #7] abm: nan,nan
[V2, scale=100.0, run #8] abm: nan,nan
[V2, scale=100.0, run #9] abm: nan,nan
[V2, scale=100.0, run #10] abm: nan,nan
[V2, scale=100.0, run #11] abm: nan,nan
[V3, scale=1.0, run #14] abm: 0.0429,0.0459
[V2, scale=100.0, run #12] abm: nan,nan
[V2, scale=100.0, run #13] abm: nan,nan
[V2, scale=100.0, run #14] abm: nan,nan
[V3, scale=1.0, run #15] abm: 0.0385,0.0405
[V2, scale=100.0, run #15] abm: nan,nan
[V2, scale=100.0, run #16] abm: nan,nan
[V2, scale=100.0, run #17] abm: nan,nan
[V3, scale=1.0, run #16] abm: 0.0440,0.0456
[V2, scale=100.0, run #18] abm: nan,nan
[V2, scale=100.0, run #19] abm: nan,nan
[V3, scale=1.0, run #17] abm: 0.0413,0.0433
[V3, scale=1.0, run #18] abm: 0.0422,0.0443
[V3, scale=1.0, run #19] abm: 0.0392,0.0414
[V3, scale=0.1, run #16] abm-gwn: 0.0146,0.0177
[V3, scale=1.0, run #0] abm-gwn: 0.0864,0.0900
[V2, scale=100.0, run #0] abm-gwn: 88.4510,99.9910
[V1, scale=0.01, run #16] abm-gwn: nan,nan
[V3, scale=1.0, run #1] abm-gwn: 0.0980,0.0989
[V1, scale=0.01, run #17] abm-gwn: nan,nan
[V2, scale=100.0, run #1] abm-gwn: 87.5410,99.9910
[V3, scale=0.1, run #17] abm-gwn: 0.0166,0.0177
[V3, scale=0.01, run #12] abm-gwn: nan,nan
[V3, scale=1.0, run #2] abm-gwn: 0.0840,0.0855
[V2, scale=100.0, run #2] abm-gwn: 87.4310,99.9910
[V3, scale=1.0, run #3] abm-gwn: 0.1065,0.1067
[V3, scale=0.1, run #18] abm-gwn: 0.0140,0.0152
[V2, scale=100.0, run #3] abm-gwn: 79.5710,92.9810
[V3, scale=1.0, run #4] abm-gwn: 0.0920,0.0920
[V3, scale=1.0, run #5] abm-gwn: 0.0808,0.0816
[V3, scale=0.1, run #19] abm-gwn: 0.0157,0.0171
[V2, scale=100.0, run #4] abm-gwn: nan,nan
[V3, scale=1.0, run #0] abm: 0.0520,0.0558
[V3, scale=1.0, run #1] abm: 0.0415,0.0510
[V3, scale=1.0, run #6] abm-gwn: 0.0645,0.0649
[V3, scale=1.0, run #2] abm: 0.0479,0.0511
[V3, scale=1.0, run #3] abm: 0.0354,0.0402
[V3, scale=1.0, run #4] abm: 0.0412,0.0412
[V3, scale=1.0, run #5] abm: 0.0469,0.0496
[V3, scale=0.01, run #13] abm-gwn: 0.0044,0.0044
[V3, scale=1.0, run #6] abm: 0.0422,0.0438
[V3, scale=1.0, run #7] abm: 0.0434,0.0461
[V3, scale=1.0, run #8] abm: 0.0434,0.0500
[V1, scale=0.01, run #17] abm-gwn: nan,nan
[V3, scale=1.0, run #9] abm: 0.0582,0.0588
[V2, scale=100.0, run #5] abm-gwn: 97.5810,100.0010
[V3, scale=1.0, run #10] abm: 0.0231,0.0244
[V3, scale=1.0, run #7] abm-gwn: 0.0959,0.0978
[V3, scale=1.0, run #11] abm: 0.0421,0.0424
[V3, scale=1.0, run #12] abm: 0.0542,0.0548
[V3, scale=1.0, run #13] abm: 0.0314,0.0333
[V3, scale=1.0, run #14] abm: 0.0513,0.0530
[V3, scale=1.0, run #15] abm: 0.0481,0.0518
[V3, scale=1.0, run #16] abm: 0.0391,0.0467
[V1, scale=0.01, run #18] abm-gwn: nan,nan
[V3, scale=1.0, run #17] abm: 0.0419,0.0440
[V3, scale=1.0, run #8] abm-gwn: 0.0933,0.0951
[V3, scale=1.0, run #18] abm: 0.0353,0.0378
[V3, scale=1.0, run #19] abm: 0.0380,0.0420
[V2, scale=100.0, run #6] abm-gwn: 72.9210,93.5810
[V3, scale=1.0, run #9] abm-gwn: 0.0824,0.0826
[V2, scale=100.0, run #7] abm-gwn: 75.3510,81.6410
[V3, scale=0.01, run #11] abm-gwn: nan,nan
[V3, scale=1.0, run #10] abm-gwn: 0.0847,0.0910
[V3, scale=1.0, run #0] abm-gwn: 0.1987,0.1994
[V2, scale=100.0, run #8] abm-gwn: 89.7710,100.0010
[V3, scale=0.01, run #14] abm-gwn: 0.0043,0.0043
[V3, scale=1.0, run #11] abm-gwn: 0.0615,0.0969
[V2, scale=100.0, run #9] abm-gwn: 88.3610,100.0010
[V3, scale=1.0, run #1] abm-gwn: 0.1514,0.1536
[V3, scale=1.0, run #12] abm-gwn: 0.0918,0.0931
[V1, scale=0.01, run #18] abm-gwn: nan,nan
[V2, scale=100.0, run #10] abm-gwn: 90.2610,97.9310
[V3, scale=1.0, run #13] abm-gwn: 0.0913,0.1104
[V3, scale=1.0, run #2] abm-gwn: 0.1721,0.1878
[V2, scale=100.0, run #11] abm-gwn: 63.5910,79.2110
[V3, scale=1.0, run #14] abm-gwn: 0.0968,0.1011
[V3, scale=0.01, run #12] abm-gwn: 0.0048,0.0048
[V2, scale=100.0, run #12] abm-gwn: 81.6210,100.0010
[V3, scale=1.0, run #15] abm-gwn: 0.0963,0.0978
[V3, scale=1.0, run #3] abm-gwn: 0.1442,0.1445
[V3, scale=1.0, run #16] abm-gwn: 0.0903,0.0921
[V2, scale=100.0, run #13] abm-gwn: nan,nan
[V3, scale=1.0, run #4] abm-gwn: 0.1611,0.1617
[V3, scale=1.0, run #17] abm-gwn: 0.0967,0.0993
[V2, scale=100.0, run #14] abm-gwn: nan,nan
[V3, scale=1.0, run #18] abm-gwn: 0.0920,0.0934
[V2, scale=100.0, run #15] abm-gwn: 83.9210,99.9910
[V1, scale=0.01, run #19] abm-gwn: nan,nan
[V3, scale=1.0, run #19] abm-gwn: 0.0933,0.0977
[V3, scale=1.0, run #5] abm-gwn: 0.1788,0.2170
[V3, scale=0.01, run #13] abm-gwn: 0.0060,0.0060
[V3, scale=10.0, run #0] abm: 3.2621,3.3981
[V2, scale=100.0, run #16] abm-gwn: 90.8210,100.0010
[V1, scale=0.1, run #0] abm: nan,nan
[V3, scale=1.0, run #6] abm-gwn: 0.1632,0.1655
[V3, scale=10.0, run #1] abm: 3.2741,3.5571
[V2, scale=100.0, run #17] abm-gwn: 82.9510,95.4010
[V1, scale=0.1, run #1] abm: nan,nan
[V2, scale=100.0, run #18] abm-gwn: 77.7910,79.8810
[V3, scale=10.0, run #2] abm: 3.3071,3.5031
[V1, scale=0.1, run #2] abm: nan,nan
[V3, scale=10.0, run #3] abm: 3.0771,3.2961
[V3, scale=1.0, run #7] abm-gwn: 0.1640,0.2025
[V2, scale=100.0, run #19] abm-gwn: 76.3710,95.3810
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/fromnumeric.py:3419: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:180: RuntimeWarning: invalid value encountered in true_divide
  ret = um.true_divide(
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:261: RuntimeWarning: Degrees of freedom <= 0 for slice
  ret = _var(a, axis=axis, dtype=dtype, out=out, ddof=ddof,
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:221: RuntimeWarning: invalid value encountered in true_divide
  arrmean = um.true_divide(arrmean, div, out=arrmean, casting='unsafe',
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:250: RuntimeWarning: invalid value encountered in true_divide
  ret = um.true_divide(
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:188: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:253: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
================================
data: V2 (extra dim = 0)
condition
{'npolys': [0, 1, 0, 1], 'cmp': ['==', '==', '==', '==']}
================================
================================
data: V2 (extra dim = 0)
condition
{'npolys': [0, 1, 0, 1], 'cmp': ['==', '==', '==', '==']}
================================
================================
data: V2 (extra dim = 0)
condition
{'npolys': [0, 1, 0, 1], 'cmp': ['==', '==', '==', '==']}
================================
new range: 0.004620100000000002, 0.010000100000000001
new range: 0.004580100000000002, 0.010000100000000001
new range: 0.004580100000000002, 0.010000100000000001
new range: 0.005280100000000002, 0.010000100000000001
new range: 0.004260100000000002, 0.010000100000000001
new range: 0.004690100000000002, 0.010000100000000001
new range: 0.004830100000000002, 0.010000100000000001
new range: 0.005090100000000002, 0.010000100000000001
new range: 0.004640100000000002, 0.010000100000000001
new range: 0.004450100000000002, 0.010000100000000001
new range: 0.005000100000000002, 0.010000100000000001
new range: 0.004840100000000002, 0.010000100000000001
new range: 0.005140100000000002, 0.010000100000000001
new range: 0.004770100000000002, 0.010000100000000001
new range: 0.004800100000000002, 0.010000100000000001
new range: 0.005020100000000002, 0.010000100000000001
new range: 0.005440100000000002, 0.010000100000000001
new range: 0.005110100000000002, 0.010000100000000001
new range: 0.005020100000000002, 0.010000100000000001
new range: 0.0047601000000000015, 0.010000100000000001
new range: 0.004620100000000002, 0.010000100000000001
new range: 0.004580100000000002, 0.010000100000000001
new range: 0.004580100000000002, 0.010000100000000001
new range: 0.005280100000000002, 0.010000100000000001
new range: 0.004260100000000002, 0.010000100000000001
new range: 0.004690100000000002, 0.010000100000000001
new range: 0.004830100000000002, 0.010000100000000001
new range: 0.005090100000000002, 0.010000100000000001
new range: 0.004640100000000002, 0.010000100000000001
new range: 0.004450100000000002, 0.010000100000000001
new range: 0.005000100000000002, 0.010000100000000001
new range: 0.004840100000000002, 0.010000100000000001
new range: 0.005140100000000002, 0.010000100000000001
new range: 0.004770100000000002, 0.010000100000000001
new range: 0.004800100000000002, 0.010000100000000001
new range: 0.005020100000000002, 0.010000100000000001
new range: 0.005440100000000002, 0.010000100000000001
new range: 0.005110100000000002, 0.010000100000000001
new range: 0.005020100000000002, 0.010000100000000001
new range: 0.0047601000000000015, 0.010000100000000001
new range: 0.046201, 0.100001
new range: 0.045801, 0.100001
new range: 0.045801, 0.100001
new range: 0.052801, 0.100001
new range: 0.042601, 0.100001
new range: 0.046901, 0.100001
new range: 0.048301000000000004, 0.100001
new range: 0.050901, 0.100001
new range: 0.046401, 0.100001
new range: 0.044501, 0.100001
new range: 0.050001000000000004, 0.100001
new range: 0.048401, 0.100001
new range: 0.051401, 0.100001
new range: 0.047701, 0.100001
new range: 0.048001, 0.100001
new range: 0.050201, 0.100001
new range: 0.054401, 0.100001
new range: 0.051101, 0.100001
new range: 0.050201, 0.100001
new range: 0.047601, 0.100001
new range: 0.046201, 0.100001
new range: 0.045801, 0.100001
new range: 0.045801, 0.100001
new range: 0.052801, 0.100001
new range: 0.042601, 0.100001
new range: 0.046901, 0.100001
new range: 0.048301000000000004, 0.100001
new range: 0.050901, 0.100001
new range: 0.046401, 0.100001
new range: 0.044501, 0.100001
new range: 0.050001000000000004, 0.100001
new range: 0.048401, 0.100001
new range: 0.051401, 0.100001
new range: 0.047701, 0.100001
new range: 0.048001, 0.100001
new range: 0.050201, 0.100001
new range: 0.054401, 0.100001
new range: 0.051101, 0.100001
new range: 0.050201, 0.100001
new range: 0.047601, 0.100001
new range: 0.46201000000000003, 1.0000099999999998
new range: 0.45801000000000003, 1.0000099999999998
new range: 0.45801000000000003, 1.0000099999999998
new range: 0.52801, 1.0000099999999998
new range: 0.42601, 1.0000099999999998
new range: 0.46901000000000004, 1.0000099999999998
new range: 0.48301, 1.0000099999999998
new range: 0.50901, 1.0000099999999998
new range: 0.46401000000000003, 1.0000099999999998
new range: 0.44501, 1.0000099999999998
new range: 0.50001, 1.0000099999999998
new range: 0.48401, 1.0000099999999998
new range: 0.51401, 1.0000099999999998
new range: 0.47701000000000005, 1.0000099999999998
new range: 0.48001, 1.0000099999999998
new range: 0.50201, 1.0000099999999998
new range: 0.54401, 1.0000099999999998
new range: 0.51101, 1.0000099999999998
new range: 0.50201, 1.0000099999999998
new range: 0.47601000000000004, 1.0000099999999998
new range: 0.46201000000000003, 1.0000099999999998
new range: 0.45801000000000003, 1.0000099999999998
new range: 0.45801000000000003, 1.0000099999999998
new range: 0.52801, 1.0000099999999998
new range: 0.42601, 1.0000099999999998
new range: 0.46901000000000004, 1.0000099999999998
new range: 0.48301, 1.0000099999999998
new range: 0.50901, 1.0000099999999998
new range: 0.46401000000000003, 1.0000099999999998
new range: 0.44501, 1.0000099999999998
new range: 0.50001, 1.0000099999999998
new range: 0.48401, 1.0000099999999998
new range: 0.51401, 1.0000099999999998
new range: 0.47701000000000005, 1.0000099999999998
new range: 0.48001, 1.0000099999999998
new range: 0.50201, 1.0000099999999998
new range: 0.54401, 1.0000099999999998
new range: 0.51101, 1.0000099999999998
new range: 0.50201, 1.0000099999999998
new range: 0.47601000000000004, 1.0000099999999998
new range: 4.6201, 10.0001
new range: 4.5801, 10.0001
new range: 4.5601, 10.0001
new range: 5.2801, 10.0001
new range: 4.2501, 10.0001
new range: 4.6801, 10.0001
new range: 4.8301, 10.0001
new range: 5.0901000000000005, 10.0001
new range: 4.6001, 10.0001
new range: 4.4401, 10.0001
new range: 4.9801, 10.0001
new range: 4.8301, 10.0001
new range: 5.1401, 10.0001
new range: 4.7701, 10.0001
new range: 4.8001000000000005, 10.0001
new range: 5.0101, 10.0001
new range: 5.4301, 10.0001
new range: 5.1101, 10.0001
new range: 5.0201, 10.0001
new range: 4.7501, 10.0001
new range: 4.6201, 10.0001
new range: 4.5801, 10.0001
new range: 4.5801, 10.0001
new range: 5.2801, 10.0001
new range: 4.2601, 10.0001
new range: 4.6901, 10.0001
new range: 4.8301, 10.0001
new range: 5.0901000000000005, 10.0001
new range: 4.6401, 10.0001
new range: 4.4501, 10.0001
new range: 5.0001, 10.0001
new range: 4.8401000000000005, 10.0001
new range: 5.1401, 10.0001
new range: 4.7701, 10.0001
new range: 4.8001000000000005, 10.0001
new range: 5.0201, 10.0001
new range: 5.4401, 10.0001
new range: 5.1101, 10.0001
new range: 5.0201, 10.0001
new range: 4.7601, 10.0001
new range: nan, nan
new range: nan, nan
new range: 9.801, 10.001
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: 9.601, 10.001
new range: nan, nan
new range: 9.801, 10.001
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: 46.201, 100.001
new range: 45.801, 100.001
new range: 45.801, 100.001
new range: 52.801, 100.001
new range: 42.601, 100.001
new range: 46.900999999999996, 100.001
new range: 48.301, 100.001
new range: 50.900999999999996, 100.001
new range: 46.400999999999996, 100.001
new range: 44.501, 100.001
new range: 50.001, 100.001
new range: 48.400999999999996, 100.001
new range: 51.400999999999996, 100.001
new range: 47.701, 100.001
new range: 48.001, 100.001
new range: 50.201, 100.001
new range: 54.400999999999996, 100.001
new range: 51.101, 100.001
new range: 50.201, 100.001
new range: 47.601, 100.001
    scale   method  ...                           coeff dist (std)   success rate
0    0.01      abm  ...                                  nan (nan)     0/20(0.0%)
0    0.01  abm-gwn  ...  0.6737232406689881 (0.022695193015016824)  20/20(100.0%)
0    0.10      abm  ...                                  nan (nan)     0/20(0.0%)
0    0.10  abm-gwn  ...  0.6114469773439131 (0.056087960197353647)  20/20(100.0%)
0    1.00      abm  ...                                  nan (nan)     0/20(0.0%)
0    1.00  abm-gwn  ...  0.27527288965762275 (0.13426883260754907)  20/20(100.0%)
0   10.00      abm  ...   0.692602493127913 (0.019290977441209643)  20/20(100.0%)
0   10.00  abm-gwn  ...  0.6335631434182895 (0.024136303846655875)  20/20(100.0%)
0  100.00      abm  ...                                  nan (nan)     0/20(0.0%)
0  100.00  abm-gwn  ...   0.8779037472040025 (0.11925319199059298)   17/20(85.0%)

[10 rows x 7 columns]
[V1, scale=0.1, run #3] abm: nan,nan
[V3, scale=10.0, run #4] abm: 3.3041,3.5401
[V1, scale=0.1, run #4] abm: nan,nan
[V3, scale=10.0, run #5] abm: 3.2341,3.3881
[V3, scale=1.0, run #8] abm-gwn: 0.1612,0.1880
[V3, scale=10.0, run #6] abm: 3.4001,3.5421
[V1, scale=0.1, run #5] abm: nan,nan
[V3, scale=10.0, run #7] abm: 3.3011,3.4701
[V3, scale=1.0, run #9] abm-gwn: 0.2022,0.2042
[V1, scale=0.1, run #6] abm: nan,nan
[V3, scale=10.0, run #8] abm: 3.1421,3.4181
[V3, scale=1.0, run #10] abm-gwn: 0.0927,0.0981
[V1, scale=0.1, run #7] abm: nan,nan
[V3, scale=10.0, run #9] abm: 3.2241,3.3811
[V1, scale=0.1, run #8] abm: nan,nan
[V3, scale=1.0, run #11] abm-gwn: 0.1582,0.1591
[V3, scale=10.0, run #10] abm: 3.3351,3.4251
[V1, scale=0.1, run #9] abm: nan,nan
[V3, scale=10.0, run #11] abm: 3.2151,3.4381
[V3, scale=0.01, run #14] abm-gwn: nan,nan
[V3, scale=10.0, run #12] abm: 3.3251,3.5611
[V1, scale=0.1, run #10] abm: nan,nan
[V3, scale=1.0, run #12] abm-gwn: 0.1983,0.2027
[V3, scale=10.0, run #13] abm: 3.2671,3.4581
[V1, scale=0.1, run #11] abm: nan,nan
[V3, scale=1.0, run #13] abm-gwn: 0.1221,0.1283
[V3, scale=10.0, run #14] abm: 3.3511,3.5531
[V1, scale=0.1, run #12] abm: nan,nan
[V3, scale=10.0, run #15] abm: 3.2911,3.4911
[V3, scale=1.0, run #14] abm-gwn: 0.1936,0.1994
[V1, scale=0.1, run #13] abm: nan,nan
[V3, scale=10.0, run #16] abm: 3.1351,3.4661
[V1, scale=0.1, run #14] abm: nan,nan
[V3, scale=10.0, run #17] abm: 3.3371,3.4971
[V3, scale=1.0, run #15] abm-gwn: 0.1698,0.1857
[V1, scale=0.1, run #15] abm: nan,nan
[V3, scale=10.0, run #18] abm: 3.2311,3.4001
[V3, scale=10.0, run #19] abm: 3.1941,3.4751
[V1, scale=0.1, run #16] abm: nan,nan
[V3, scale=1.0, run #16] abm-gwn: 0.1464,0.1765
[V3, scale=10.0, run #0] abm-gwn: 0.8641,0.9001
[V1, scale=0.1, run #17] abm: nan,nan
[V3, scale=10.0, run #1] abm-gwn: 0.9801,0.9891
[V3, scale=1.0, run #17] abm-gwn: 0.1661,0.1773
[V1, scale=0.1, run #18] abm: nan,nan
[V3, scale=10.0, run #2] abm-gwn: 0.8401,0.8551
[V3, scale=0.01, run #15] abm-gwn: nan,nan
[V1, scale=0.1, run #19] abm: nan,nan
[V3, scale=1.0, run #18] abm-gwn: 0.1401,0.1515
[V3, scale=10.0, run #3] abm-gwn: 1.0651,1.0671
[V3, scale=10.0, run #4] abm-gwn: 0.9201,0.9201
[V3, scale=1.0, run #19] abm-gwn: 0.1566,0.1709
[V1, scale=0.1, run #0] abm-gwn: 0.0246,0.0335
[V3, scale=10.0, run #5] abm-gwn: 0.8081,0.8161
[V3, scale=10.0, run #0] abm: 1.5991,1.6441
[V3, scale=10.0, run #6] abm-gwn: 0.6451,0.6491
[V3, scale=10.0, run #1] abm: 1.7861,1.7991
[V3, scale=10.0, run #2] abm: 1.7911,1.7971
[V3, scale=10.0, run #3] abm: 1.6681,1.7121
[V3, scale=10.0, run #7] abm-gwn: 0.9591,0.9781
[V1, scale=0.1, run #1] abm-gwn: 0.0320,0.0336
[V3, scale=10.0, run #4] abm: 1.9401,1.9991
[V3, scale=10.0, run #8] abm-gwn: 0.9331,0.9511
[V3, scale=10.0, run #5] abm: 1.9461,1.9771
[V3, scale=10.0, run #6] abm: 1.6771,1.7171
[V3, scale=10.0, run #9] abm-gwn: 0.8241,0.8261
[V3, scale=10.0, run #7] abm: 1.8321,1.8341
[V1, scale=0.1, run #2] abm-gwn: 0.0242,0.0323
[V3, scale=10.0, run #8] abm: 1.7311,1.7651
[V3, scale=10.0, run #10] abm-gwn: 0.8471,0.9101
[V3, scale=10.0, run #9] abm: 1.7381,1.7431
[V3, scale=10.0, run #10] abm: 1.8011,1.8511
[V3, scale=10.0, run #11] abm-gwn: 0.6151,0.9691
[V3, scale=10.0, run #11] abm: 1.7111,1.7121
[V1, scale=0.1, run #3] abm-gwn: 0.0230,0.0330
[V3, scale=10.0, run #12] abm: 1.9291,1.9341
[V3, scale=10.0, run #12] abm-gwn: 0.9181,0.9311
[V3, scale=10.0, run #13] abm: 1.8631,1.9471
[V3, scale=10.0, run #14] abm: 1.8211,1.8271
[V3, scale=10.0, run #13] abm-gwn: 0.9131,1.1041
[V3, scale=10.0, run #15] abm: 1.8291,1.8641
[V1, scale=0.1, run #4] abm-gwn: 0.0224,0.0293
[V3, scale=10.0, run #16] abm: 1.7691,1.7801
[V3, scale=0.01, run #16] abm-gwn: nan,nan
[V3, scale=10.0, run #14] abm-gwn: 0.9681,1.0111
[V3, scale=10.0, run #17] abm: 1.8441,1.8511
[V3, scale=10.0, run #18] abm: 1.6451,1.6621
[V1, scale=0.1, run #5] abm-gwn: 0.0211,0.0251
[V3, scale=10.0, run #19] abm: 1.9021,1.9321
[V3, scale=10.0, run #15] abm-gwn: 0.9631,0.9781
[V3, scale=10.0, run #16] abm-gwn: 0.9031,0.9211
[V1, scale=0.1, run #6] abm-gwn: 0.0360,0.0371
[V3, scale=10.0, run #17] abm-gwn: 0.9671,0.9931
[V3, scale=10.0, run #0] abm-gwn: 1.9871,1.9941
[V3, scale=10.0, run #18] abm-gwn: 0.9201,0.9341
[V3, scale=10.0, run #1] abm-gwn: 1.5141,1.5361
[V3, scale=10.0, run #19] abm-gwn: 0.9331,0.9771
[V3, scale=100.0, run #0] abm: 3.4410,3.5710
[V3, scale=100.0, run #1] abm: 3.4310,3.6510
[V1, scale=0.1, run #7] abm-gwn: 0.0319,0.0374
[V3, scale=100.0, run #2] abm: 3.4410,3.6210
[V3, scale=100.0, run #3] abm: 3.3110,3.5210
[V3, scale=100.0, run #4] abm: 3.4310,3.6210
[V3, scale=100.0, run #5] abm: 3.3810,3.5510
[V3, scale=100.0, run #6] abm: 3.5010,3.6410
[V3, scale=100.0, run #7] abm: 3.4410,3.6110
[V3, scale=100.0, run #8] abm: 3.3110,3.5810
[V3, scale=100.0, run #9] abm: 3.4410,3.6010
[V3, scale=100.0, run #10] abm: 3.4810,3.5610
[V3, scale=100.0, run #11] abm: 3.3710,3.5610
[V3, scale=100.0, run #12] abm: 3.4410,3.6410
[V3, scale=100.0, run #13] abm: 3.4210,3.6110
[V3, scale=100.0, run #14] abm: 3.4510,3.6210
[V3, scale=10.0, run #2] abm-gwn: 1.7211,1.8781
[V3, scale=100.0, run #15] abm: 3.4410,3.6210
[V3, scale=100.0, run #16] abm: 3.3010,3.5910
[V3, scale=100.0, run #17] abm: 3.4410,3.6010
[V3, scale=100.0, run #18] abm: 3.4210,3.5710
[V1, scale=0.1, run #8] abm-gwn: 0.0266,0.0287
[V3, scale=100.0, run #19] abm: 3.3610,3.5910
[V3, scale=100.0, run #0] abm-gwn: 8.6410,9.0010
[V3, scale=10.0, run #3] abm-gwn: 1.4421,1.4451
[V3, scale=100.0, run #1] abm-gwn: 9.8010,9.8910
[V1, scale=0.1, run #9] abm-gwn: 0.0203,0.0358
[V3, scale=10.0, run #4] abm-gwn: 1.6111,1.6171
[V3, scale=100.0, run #2] abm-gwn: 8.4010,8.5510
[V3, scale=0.01, run #17] abm-gwn: nan,nan
[V1, scale=0.1, run #10] abm-gwn: 0.0217,0.0289
[V3, scale=100.0, run #3] abm-gwn: 10.6510,10.6710
[V3, scale=10.0, run #5] abm-gwn: 1.7881,2.1701
[V3, scale=100.0, run #4] abm-gwn: 9.2010,9.2010
[V3, scale=100.0, run #5] abm-gwn: 8.0810,8.1610
[V1, scale=0.1, run #11] abm-gwn: 0.0339,0.0362
[V3, scale=100.0, run #6] abm-gwn: 6.4510,6.4910
[V3, scale=10.0, run #6] abm-gwn: 1.6321,1.6551
[V3, scale=100.0, run #7] abm-gwn: 9.5910,9.7810
[V1, scale=0.1, run #12] abm-gwn: 0.0224,0.0303
[V3, scale=100.0, run #8] abm-gwn: 9.3310,9.5110
[V3, scale=0.01, run #18] abm-gwn: 0.0054,0.0057
[V3, scale=10.0, run #7] abm-gwn: 1.6401,2.0251
[V3, scale=100.0, run #9] abm-gwn: 8.2410,8.2610
[V1, scale=0.1, run #13] abm-gwn: 0.0345,0.0353
[V3, scale=100.0, run #10] abm-gwn: 8.4710,9.1010
[V3, scale=10.0, run #8] abm-gwn: 1.6121,1.8801
[V3, scale=100.0, run #11] abm-gwn: 6.1510,9.6910
[V1, scale=0.1, run #14] abm-gwn: 0.0226,0.0312
[V3, scale=100.0, run #12] abm-gwn: 9.1810,9.3110
[V3, scale=10.0, run #9] abm-gwn: 2.0221,2.0421
[V3, scale=100.0, run #13] abm-gwn: 9.1310,11.0410
[V1, scale=0.1, run #15] abm-gwn: 0.0244,0.0282
[V3, scale=10.0, run #10] abm-gwn: 0.9271,0.9811
[V3, scale=100.0, run #14] abm-gwn: 9.6810,10.1110
[V3, scale=10.0, run #11] abm-gwn: 1.5821,1.5911
[V3, scale=100.0, run #15] abm-gwn: 9.6310,9.7810
[V1, scale=0.1, run #16] abm-gwn: 0.0225,0.0319
[V3, scale=100.0, run #16] abm-gwn: 9.0310,9.2110
[V3, scale=10.0, run #12] abm-gwn: 1.9831,2.0271
[V3, scale=100.0, run #17] abm-gwn: 9.6710,9.9310
[V1, scale=0.1, run #17] abm-gwn: 0.0375,0.0386
[V3, scale=100.0, run #18] abm-gwn: 9.2010,9.3410
[V3, scale=10.0, run #13] abm-gwn: 1.2211,1.2831
[V3, scale=0.01, run #19] abm-gwn: nan,nan
[V3, scale=100.0, run #19] abm-gwn: 9.3310,9.7710
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/fromnumeric.py:3419: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:180: RuntimeWarning: invalid value encountered in true_divide
  ret = um.true_divide(
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:261: RuntimeWarning: Degrees of freedom <= 0 for slice
  ret = _var(a, axis=axis, dtype=dtype, out=out, ddof=ddof,
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:221: RuntimeWarning: invalid value encountered in true_divide
  arrmean = um.true_divide(arrmean, div, out=arrmean, casting='unsafe',
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:250: RuntimeWarning: invalid value encountered in true_divide
  ret = um.true_divide(
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:188: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:253: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
================================
data: V3 (extra dim = 0)
condition
{'npolys': [0, 0, 0, 0, 1], 'cmp': ['==', '==', '==', '==', '==']}
================================
================================
data: V3 (extra dim = 0)
condition
{'npolys': [0, 0, 0, 0, 1], 'cmp': ['==', '==', '==', '==', '==']}
================================
================================
data: V3 (extra dim = 0)
condition
{'npolys': [0, 0, 0, 0, 1], 'cmp': ['==', '==', '==', '==', '==']}
================================
    scale   method  ...                            coeff dist (std)   success rate
0    0.01      abm  ...                                   nan (nan)     0/20(0.0%)
0    0.01  abm-gwn  ...                                   nan (nan)     0/20(0.0%)
0    0.10      abm  ...                                   nan (nan)     0/20(0.0%)
0    0.10  abm-gwn  ...     1.258690420751789 (0.05021161076077015)  20/20(100.0%)
0    1.00      abm  ...     1.2272657771437043 (0.1738992164020704)  20/20(100.0%)
0    1.00  abm-gwn  ...    0.9812339327711278 (0.20811129943801854)  20/20(100.0%)
0   10.00      abm  ...     1.3310895835043488 (0.0304563462628762)  20/20(100.0%)
0   10.00  abm-gwn  ...    1.0686755247582762 (0.24464216937171337)  20/20(100.0%)
0  100.00      abm  ...  1.4124517097667637 (0.0002316018395710749)  20/20(100.0%)
0  100.00  abm-gwn  ...    1.3729653149099046 (0.06487906507265573)  20/20(100.0%)

[10 rows x 7 columns]
[V1, scale=0.1, run #18] abm-gwn: 0.0255,0.0307
[V3, scale=10.0, run #14] abm-gwn: 1.9361,1.9941
[V1, scale=0.1, run #19] abm-gwn: 0.0235,0.0316
[V3, scale=0.1, run #0] abm: nan,nan
[V3, scale=0.1, run #1] abm: 0.0000,0.0000
[V3, scale=0.1, run #2] abm: 0.0000,0.0000
[V3, scale=0.1, run #3] abm: 0.0000,0.0000
[V3, scale=0.1, run #4] abm: 0.0000,0.0000
[V1, scale=1.0, run #0] abm: 0.0784,0.0863
[V1, scale=1.0, run #1] abm: 0.0775,0.0881
[V1, scale=1.0, run #2] abm: 0.0921,0.1009
[V1, scale=1.0, run #3] abm: 0.0798,0.0903
[V1, scale=1.0, run #4] abm: 0.0857,0.0910
[V1, scale=1.0, run #5] abm: 0.0790,0.0837
[V3, scale=10.0, run #15] abm-gwn: 1.6981,1.8571
[V1, scale=1.0, run #6] abm: 0.0750,0.0801
[V1, scale=1.0, run #7] abm: 0.0738,0.0814
[V1, scale=1.0, run #8] abm: 0.0816,0.0861
[V1, scale=1.0, run #9] abm: 0.0743,0.0832
[V1, scale=1.0, run #10] abm: 0.0704,0.0846
[V1, scale=1.0, run #11] abm: 0.0800,0.0908
[V1, scale=1.0, run #12] abm: 0.0687,0.0719
[V1, scale=1.0, run #13] abm: 0.0719,0.0788
[V1, scale=1.0, run #14] abm: 0.0739,0.0899
[V1, scale=1.0, run #15] abm: 0.0814,0.0842
[V1, scale=1.0, run #16] abm: 0.0735,0.0793
[V1, scale=1.0, run #17] abm: 0.0767,0.0854
[V1, scale=1.0, run #18] abm: 0.0714,0.0783
[V1, scale=1.0, run #19] abm: 0.0659,0.0763
[V3, scale=10.0, run #16] abm-gwn: 1.4641,1.7651
[V3, scale=0.1, run #5] abm: nan,nan
[V1, scale=1.0, run #0] abm-gwn: 0.1642,0.1778
[V3, scale=10.0, run #17] abm-gwn: 1.6611,1.7731
[V1, scale=1.0, run #1] abm-gwn: 0.1601,0.1909
[V3, scale=0.1, run #6] abm: nan,nan
[V3, scale=0.1, run #7] abm: 0.0000,0.0000
[V3, scale=0.1, run #8] abm: 0.0000,0.0000
[V3, scale=0.1, run #9] abm: 0.0000,0.0000
[V3, scale=10.0, run #18] abm-gwn: 1.4011,1.5151
[V1, scale=1.0, run #2] abm-gwn: 0.1813,0.2037
[V1, scale=1.0, run #3] abm-gwn: 0.1682,0.1946
[V3, scale=10.0, run #19] abm-gwn: 1.5661,1.7091
[V3, scale=100.0, run #0] abm: 1.7210,1.7510
[V3, scale=100.0, run #1] abm: 1.9010,1.9010
[V3, scale=100.0, run #2] abm: 1.8910,1.8910
[V3, scale=100.0, run #3] abm: 1.8010,1.8710
[V3, scale=100.0, run #4] abm: 2.1010,2.1410
[V3, scale=100.0, run #5] abm: 2.0910,2.1110
[V3, scale=100.0, run #6] abm: 1.7910,1.8210
[V3, scale=100.0, run #7] abm: 1.9510,2.0210
[V3, scale=100.0, run #8] abm: 1.8910,1.9210
[V1, scale=1.0, run #4] abm-gwn: 0.1707,0.1804
[V3, scale=100.0, run #9] abm: 1.8610,1.8610
[V3, scale=0.1, run #10] abm: nan,nan
[V3, scale=0.1, run #11] abm: 0.0000,0.0000
[V3, scale=100.0, run #10] abm: 1.9710,2.0010
[V3, scale=100.0, run #11] abm: 1.8310,1.8810
[V3, scale=100.0, run #12] abm: 2.0510,2.0510
[V3, scale=100.0, run #13] abm: 2.0110,2.0810
[V3, scale=100.0, run #14] abm: 1.9610,1.9610
[V3, scale=100.0, run #15] abm: 1.9510,1.9710
[V3, scale=100.0, run #16] abm: 1.8810,1.9010
[V3, scale=100.0, run #17] abm: 1.9910,2.0110
[V3, scale=100.0, run #18] abm: 1.8010,1.8010
[V3, scale=100.0, run #19] abm: 2.0410,2.0510
[V1, scale=1.0, run #5] abm-gwn: 0.1578,0.1608
[V1, scale=1.0, run #6] abm-gwn: 0.1589,0.1714
[V3, scale=100.0, run #0] abm-gwn: 19.8710,19.9410
[V3, scale=0.1, run #12] abm: nan,nan
[V3, scale=0.1, run #13] abm: 0.0000,0.0000
[V3, scale=0.1, run #14] abm: 0.0000,0.0000
[V1, scale=1.0, run #7] abm-gwn: 0.1594,0.1806
[V3, scale=100.0, run #1] abm-gwn: 15.1410,15.3610
[V1, scale=1.0, run #8] abm-gwn: 0.1791,0.1837
[V1, scale=1.0, run #9] abm-gwn: 0.1518,0.1682
[V3, scale=0.1, run #15] abm: nan,nan
[V3, scale=0.1, run #16] abm: 0.0000,0.0000
[V3, scale=100.0, run #2] abm-gwn: 17.2110,18.7810
[V1, scale=1.0, run #10] abm-gwn: 0.1601,0.1858
[V3, scale=100.0, run #3] abm-gwn: 14.4210,14.4510
[V1, scale=1.0, run #11] abm-gwn: 0.1697,0.1996
[V3, scale=0.1, run #17] abm: nan,nan
[V3, scale=0.1, run #18] abm: 0.0000,0.0000
[V1, scale=1.0, run #12] abm-gwn: 0.1470,0.1729
[V3, scale=100.0, run #4] abm-gwn: 16.1110,16.1710
[V1, scale=1.0, run #13] abm-gwn: 0.1632,0.1771
[V1, scale=1.0, run #14] abm-gwn: 0.1506,0.1997
[V3, scale=0.1, run #19] abm: nan,nan
[V3, scale=100.0, run #5] abm-gwn: 17.8810,21.7010
[V1, scale=1.0, run #15] abm-gwn: 0.1546,0.1573
[V3, scale=0.1, run #0] abm-gwn: 0.0095,0.0129
[V1, scale=1.0, run #16] abm-gwn: 0.1510,0.1691
[V3, scale=100.0, run #6] abm-gwn: 16.3210,16.5510
[V1, scale=1.0, run #17] abm-gwn: 0.1701,0.1973
[V3, scale=0.1, run #1] abm-gwn: 0.0153,0.0202
[V1, scale=1.0, run #18] abm-gwn: 0.1585,0.1774
[V3, scale=100.0, run #7] abm-gwn: 16.4010,20.2510
[V1, scale=1.0, run #19] abm-gwn: 0.1553,0.1614
[V3, scale=0.1, run #2] abm-gwn: 0.0134,0.0211
[V1, scale=10.0, run #0] abm: 3.3451,3.7331
[V3, scale=100.0, run #8] abm-gwn: 16.1210,18.8010
[V1, scale=10.0, run #1] abm: 3.5931,3.9101
[V1, scale=10.0, run #2] abm: 3.4871,3.8671
[V1, scale=10.0, run #3] abm: 3.5581,3.8581
[V3, scale=0.1, run #3] abm-gwn: 0.0160,0.0234
[V1, scale=10.0, run #4] abm: 3.5171,3.6911
[V3, scale=100.0, run #9] abm-gwn: 20.2210,20.4210
[V1, scale=10.0, run #5] abm: 3.4351,3.6341
[V1, scale=10.0, run #6] abm: 3.4381,3.6101
[V3, scale=100.0, run #10] abm-gwn: 9.2710,9.8110
[V3, scale=0.1, run #4] abm-gwn: 0.0147,0.0175
[V1, scale=10.0, run #7] abm: 3.4111,3.7321
[V1, scale=10.0, run #8] abm: 3.4671,3.7541
[V3, scale=100.0, run #11] abm-gwn: 15.8210,15.9110
[V3, scale=0.1, run #5] abm-gwn: 0.0125,0.0147
[V1, scale=10.0, run #9] abm: 3.4401,3.7051
[V1, scale=10.0, run #10] abm: 3.4801,3.7271
[V1, scale=10.0, run #11] abm: 3.7321,3.8611
[V3, scale=0.1, run #6] abm-gwn: 0.0132,0.0150
[V1, scale=10.0, run #12] abm: 3.3591,3.5881
[V3, scale=100.0, run #12] abm-gwn: 19.8310,20.2710
[V1, scale=10.0, run #13] abm: 3.3781,3.7171
[V1, scale=10.0, run #14] abm: 3.4511,3.8481
[V3, scale=100.0, run #13] abm-gwn: 12.2110,12.8310
[V1, scale=10.0, run #15] abm: 3.4531,3.7311
[V3, scale=0.1, run #7] abm-gwn: 0.0142,0.0229
[V1, scale=10.0, run #16] abm: 3.5051,3.6281
[V1, scale=10.0, run #17] abm: 3.6921,3.9701
[V3, scale=100.0, run #14] abm-gwn: 19.3610,19.9410
[V1, scale=10.0, run #18] abm: 3.4931,3.9061
[V3, scale=0.1, run #8] abm-gwn: 0.0148,0.0182
[V1, scale=10.0, run #19] abm: 3.6661,3.9401
[V3, scale=100.0, run #15] abm-gwn: 16.9810,18.5710
[V1, scale=10.0, run #0] abm-gwn: 1.7541,1.8631
[V3, scale=0.1, run #9] abm-gwn: 0.0127,0.0183
[V1, scale=10.0, run #1] abm-gwn: 1.7811,1.9951
[V3, scale=0.1, run #10] abm-gwn: 0.0131,0.0147
[V3, scale=100.0, run #16] abm-gwn: 14.6410,17.6510
[V1, scale=10.0, run #2] abm-gwn: 2.0101,2.0991
[V3, scale=0.1, run #11] abm-gwn: 0.0117,0.0169
[V3, scale=100.0, run #17] abm-gwn: 16.6110,17.7310
[V1, scale=10.0, run #3] abm-gwn: 1.7731,2.0141
[V1, scale=10.0, run #4] abm-gwn: 1.6771,1.8421
[V3, scale=0.1, run #12] abm-gwn: 0.0129,0.0145
[V3, scale=100.0, run #18] abm-gwn: 14.0110,15.1510
[V1, scale=10.0, run #5] abm-gwn: 1.9251,2.0581
[V3, scale=0.1, run #13] abm-gwn: 0.0117,0.0195
[V3, scale=100.0, run #19] abm-gwn: 15.6610,17.0910
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/fromnumeric.py:3419: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:180: RuntimeWarning: invalid value encountered in true_divide
  ret = um.true_divide(
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:261: RuntimeWarning: Degrees of freedom <= 0 for slice
  ret = _var(a, axis=axis, dtype=dtype, out=out, ddof=ddof,
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:221: RuntimeWarning: invalid value encountered in true_divide
  arrmean = um.true_divide(arrmean, div, out=arrmean, casting='unsafe',
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:250: RuntimeWarning: invalid value encountered in true_divide
  ret = um.true_divide(
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:188: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:253: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
================================
data: V3 (extra dim = 0)
condition
{'npolys': [0, 0, 0, 0, 1], 'cmp': ['==', '==', '==', '==', '==']}
================================
================================
data: V3 (extra dim = 0)
condition
{'npolys': [0, 0, 0, 0, 1], 'cmp': ['==', '==', '==', '==', '==']}
================================
================================
data: V3 (extra dim = 0)
condition
{'npolys': [0, 0, 0, 0, 1], 'cmp': ['==', '==', '==', '==', '==']}
================================
    scale   method  ...                             coeff dist (std)   success rate
0    0.01      abm  ...                                    nan (nan)     0/20(0.0%)
0    0.01  abm-gwn  ...                                    nan (nan)     0/20(0.0%)
0    0.10      abm  ...                                    nan (nan)     0/20(0.0%)
0    0.10  abm-gwn  ...     1.3912968037414246 (0.01225157321496857)  20/20(100.0%)
0    1.00      abm  ...     1.3363920205733009 (0.04618747342909026)  20/20(100.0%)
0    1.00  abm-gwn  ...     1.3261126870040183 (0.04162712903936621)  20/20(100.0%)
0   10.00      abm  ...     1.359502217114721 (0.008562054442257262)  20/20(100.0%)
0   10.00  abm-gwn  ...     1.0792243586533332 (0.10884459378201143)  20/20(100.0%)
0  100.00      abm  ...  1.4088369800450475 (0.00027367686184973685)  20/20(100.0%)
0  100.00  abm-gwn  ...     1.3636726063486293 (0.01732136067783424)  20/20(100.0%)

[10 rows x 7 columns]
[V1, scale=10.0, run #6] abm-gwn: 1.5871,1.6861
[V1, scale=10.0, run #7] abm-gwn: 1.6611,1.8061
[V3, scale=0.1, run #14] abm-gwn: 0.0145,0.0202
[V1, scale=10.0, run #8] abm-gwn: 1.7681,1.8971
[V3, scale=0.1, run #15] abm-gwn: 0.0083,0.0151
[V1, scale=10.0, run #9] abm-gwn: 1.5921,1.7221
[V1, scale=10.0, run #10] abm-gwn: 1.6511,1.7441
[V3, scale=0.1, run #16] abm-gwn: 0.0137,0.0206
[V1, scale=10.0, run #11] abm-gwn: 1.6591,1.9501
[V1, scale=10.0, run #12] abm-gwn: 1.7061,1.7481
[V3, scale=0.1, run #17] abm-gwn: 0.0143,0.0160
[V1, scale=10.0, run #13] abm-gwn: 1.6411,1.7801
[V1, scale=10.0, run #14] abm-gwn: 1.8421,2.0221
[V3, scale=0.1, run #18] abm-gwn: 0.0128,0.0191
[V1, scale=10.0, run #15] abm-gwn: 1.7591,1.8611
[V3, scale=0.1, run #19] abm-gwn: 0.0135,0.0175
[V3, scale=1.0, run #0] abm: 0.0433,0.0622
[V1, scale=10.0, run #16] abm-gwn: 1.4021,1.6301
[V3, scale=1.0, run #1] abm: 0.0770,0.0892
[V3, scale=1.0, run #2] abm: 0.0662,0.0799
[V3, scale=1.0, run #3] abm: 0.0806,0.0857
[V3, scale=1.0, run #4] abm: 0.0739,0.0779
[V3, scale=1.0, run #5] abm: 0.0535,0.0672
[V1, scale=10.0, run #17] abm-gwn: 1.7101,1.8941
[V3, scale=1.0, run #6] abm: 0.0536,0.0697
[V3, scale=1.0, run #7] abm: 0.0683,0.0996
[V3, scale=1.0, run #8] abm: 0.0665,0.0777
[V3, scale=1.0, run #9] abm: 0.0605,0.0827
[V1, scale=10.0, run #18] abm-gwn: 1.6181,1.7351
[V3, scale=1.0, run #10] abm: 0.0577,0.0616
[V3, scale=1.0, run #11] abm: 0.0577,0.0775
[V3, scale=1.0, run #12] abm: 0.0564,0.0668
[V3, scale=1.0, run #13] abm: 0.0489,0.0813
[V1, scale=10.0, run #19] abm-gwn: 1.5901,1.7001
[V1, scale=100.0, run #0] abm: 3.3610,3.7410
[V3, scale=1.0, run #14] abm: 0.0715,0.0920
[V1, scale=100.0, run #1] abm: 3.6210,3.9210
[V1, scale=100.0, run #2] abm: 3.5110,3.8810
[V1, scale=100.0, run #3] abm: 3.5810,3.8710
[V3, scale=1.0, run #15] abm: 0.0415,0.0674
[V1, scale=100.0, run #4] abm: 3.5410,3.7110
[V1, scale=100.0, run #5] abm: 3.4710,3.6610
[V1, scale=100.0, run #6] abm: 3.4610,3.6310
[V1, scale=100.0, run #7] abm: 3.4310,3.7410
[V3, scale=1.0, run #16] abm: 0.0679,0.0806
[V1, scale=100.0, run #8] abm: 3.4810,3.7610
[V1, scale=100.0, run #9] abm: 3.4710,3.7310
[V1, scale=100.0, run #10] abm: 3.5110,3.7410
[V1, scale=100.0, run #11] abm: 3.7610,3.8810
[V3, scale=1.0, run #17] abm: 0.0550,0.0724
[V1, scale=100.0, run #12] abm: 3.3810,3.6610
[V1, scale=100.0, run #13] abm: 3.4010,3.7310
[V1, scale=100.0, run #14] abm: 3.4710,3.8610
[V1, scale=100.0, run #15] abm: 3.4910,3.7510
[V3, scale=1.0, run #18] abm: 0.0644,0.0811
[V1, scale=100.0, run #16] abm: 3.5310,3.6510
[V1, scale=100.0, run #17] abm: 3.7110,3.9810
[V1, scale=100.0, run #18] abm: 3.5110,3.9210
[V1, scale=100.0, run #19] abm: 3.6810,3.9410
[V3, scale=1.0, run #19] abm: 0.0582,0.0748
[V3, scale=1.0, run #0] abm-gwn: 0.0871,0.1288
[V3, scale=1.0, run #1] abm-gwn: 0.1525,0.2015
[V3, scale=1.0, run #2] abm-gwn: 0.1340,0.1653
[V1, scale=100.0, run #0] abm-gwn: nan,nan
[V3, scale=1.0, run #3] abm-gwn: 0.1605,0.1955
[V3, scale=1.0, run #4] abm-gwn: 0.1470,0.1695
[V3, scale=1.0, run #5] abm-gwn: 0.1076,0.1437
[V1, scale=100.0, run #1] abm-gwn: nan,nan
[V3, scale=1.0, run #6] abm-gwn: 0.1070,0.1500
[V3, scale=1.0, run #7] abm-gwn: 0.1416,0.2112
[V1, scale=100.0, run #2] abm-gwn: nan,nan
[V3, scale=1.0, run #8] abm-gwn: 0.1451,0.1766
[V3, scale=1.0, run #9] abm-gwn: 0.1264,0.1825
[V3, scale=1.0, run #10] abm-gwn: 0.1308,0.1468
[V3, scale=1.0, run #11] abm-gwn: 0.1182,0.1688
[V1, scale=100.0, run #3] abm-gwn: nan,nan
[V3, scale=1.0, run #12] abm-gwn: 0.1171,0.1443
[V3, scale=1.0, run #13] abm-gwn: 0.1002,0.1888
[V1, scale=100.0, run #4] abm-gwn: nan,nan
[V3, scale=1.0, run #14] abm-gwn: 0.1415,0.2011
[V3, scale=1.0, run #15] abm-gwn: 0.0825,0.1509
[V3, scale=1.0, run #16] abm-gwn: 0.1363,0.1663
[V3, scale=1.0, run #17] abm-gwn: 0.1092,0.1522
[V1, scale=100.0, run #5] abm-gwn: nan,nan
[V3, scale=1.0, run #18] abm-gwn: 0.1278,0.1819
[V3, scale=1.0, run #19] abm-gwn: 0.1189,0.1698
[V3, scale=10.0, run #0] abm: 3.3041,3.3351
[V1, scale=100.0, run #6] abm-gwn: nan,nan
[V3, scale=10.0, run #1] abm: 3.6411,3.6441
[V3, scale=10.0, run #2] abm: 3.3571,3.4001
[V3, scale=10.0, run #3] abm: 3.2251,3.2271
[V3, scale=10.0, run #4] abm: 3.3061,3.3561
[V3, scale=10.0, run #5] abm: 3.1131,3.1211
[V3, scale=10.0, run #6] abm: 3.3501,3.4181
[V1, scale=100.0, run #7] abm-gwn: nan,nan
[V3, scale=10.0, run #7] abm: 3.3771,3.3951
[V3, scale=10.0, run #8] abm: 3.2241,3.2251
[V3, scale=10.0, run #9] abm: 3.3011,3.3121
[V3, scale=10.0, run #10] abm: 3.5451,3.5511
[V3, scale=10.0, run #11] abm: 3.4371,3.4881
[V1, scale=100.0, run #8] abm-gwn: nan,nan
[V3, scale=10.0, run #12] abm: 3.3791,3.3811
[V3, scale=10.0, run #13] abm: 3.5141,3.5261
[V3, scale=10.0, run #14] abm: 3.5201,3.5931
[V3, scale=10.0, run #15] abm: 3.1461,3.1551
[V3, scale=10.0, run #16] abm: 3.2181,3.2831
[V3, scale=10.0, run #17] abm: 3.4401,3.4661
[V1, scale=100.0, run #9] abm-gwn: nan,nan
[V3, scale=10.0, run #18] abm: 3.3231,3.3261
[V3, scale=10.0, run #19] abm: 3.4591,3.5201
[V3, scale=10.0, run #0] abm-gwn: 0.8711,1.2881
[V3, scale=10.0, run #1] abm-gwn: 1.5251,2.0151
[V1, scale=100.0, run #10] abm-gwn: nan,nan
[V3, scale=10.0, run #2] abm-gwn: 1.3401,1.6531
[V3, scale=10.0, run #3] abm-gwn: 1.6051,1.9551
[V3, scale=10.0, run #4] abm-gwn: 1.4701,1.6951
[V1, scale=100.0, run #11] abm-gwn: nan,nan
[V3, scale=10.0, run #5] abm-gwn: 1.0761,1.4371
[V3, scale=10.0, run #6] abm-gwn: 1.0701,1.5001
[V3, scale=10.0, run #7] abm-gwn: 1.4161,2.1121
[V1, scale=100.0, run #12] abm-gwn: nan,nan
[V3, scale=10.0, run #8] abm-gwn: 1.4511,1.7661
[V3, scale=10.0, run #9] abm-gwn: 1.2641,1.8251
[V3, scale=10.0, run #10] abm-gwn: 1.3081,1.4681
[V1, scale=100.0, run #13] abm-gwn: nan,nan
[V3, scale=10.0, run #11] abm-gwn: 1.1821,1.6881
[V3, scale=10.0, run #12] abm-gwn: 1.1711,1.4431
[V3, scale=10.0, run #13] abm-gwn: 1.0021,1.8881
[V1, scale=100.0, run #14] abm-gwn: nan,nan
[V3, scale=10.0, run #14] abm-gwn: 1.4151,2.0111
[V3, scale=10.0, run #15] abm-gwn: 0.8251,1.5081
[V3, scale=10.0, run #16] abm-gwn: 1.3631,1.6631
[V1, scale=100.0, run #15] abm-gwn: nan,nan
[V3, scale=10.0, run #17] abm-gwn: 1.0921,1.5221
[V3, scale=10.0, run #18] abm-gwn: 1.2781,1.8191
[V3, scale=10.0, run #19] abm-gwn: 1.1891,1.6981
[V3, scale=100.0, run #0] abm: 3.4510,3.4910
[V3, scale=100.0, run #1] abm: 3.7610,3.8310
[V3, scale=100.0, run #2] abm: 3.4610,3.5210
[V1, scale=100.0, run #16] abm-gwn: nan,nan
[V3, scale=100.0, run #3] abm: 3.3910,3.4110
[V3, scale=100.0, run #4] abm: 3.4210,3.4710
[V3, scale=100.0, run #5] abm: 3.3410,3.3810
[V3, scale=100.0, run #6] abm: 3.5010,3.5710
[V3, scale=100.0, run #7] abm: 3.5010,3.5610
[V3, scale=100.0, run #8] abm: 3.4310,3.5110
[V3, scale=100.0, run #9] abm: 3.4610,3.5110
[V3, scale=100.0, run #10] abm: 3.6910,3.7510
[V3, scale=100.0, run #11] abm: 3.5510,3.6310
[V3, scale=100.0, run #12] abm: 3.5310,3.5410
[V3, scale=100.0, run #13] abm: 3.6510,3.6710
[V3, scale=100.0, run #14] abm: 3.6410,3.7110
[V3, scale=100.0, run #15] abm: 3.3210,3.3410
[V3, scale=100.0, run #16] abm: 3.4310,3.5110
[V3, scale=100.0, run #17] abm: 3.5610,3.5910
[V3, scale=100.0, run #18] abm: 3.4710,3.5010
[V3, scale=100.0, run #19] abm: 3.5810,3.6310
[V3, scale=100.0, run #0] abm-gwn: 4.2510,4.4710
[V3, scale=100.0, run #1] abm-gwn: 4.2510,4.4810
[V3, scale=100.0, run #2] abm-gwn: 4.9910,5.2210
[V3, scale=100.0, run #3] abm-gwn: 4.8810,5.1510
[V3, scale=100.0, run #4] abm-gwn: 4.5010,4.7010
[V3, scale=100.0, run #5] abm-gwn: 3.8610,4.1110
[V3, scale=100.0, run #6] abm-gwn: 4.3910,4.6210
[V1, scale=100.0, run #17] abm-gwn: nan,nan
[V3, scale=100.0, run #7] abm-gwn: 4.3010,4.5110
[V3, scale=100.0, run #8] abm-gwn: 4.2310,4.4710
[V3, scale=100.0, run #9] abm-gwn: 4.0410,4.2510
[V3, scale=100.0, run #10] abm-gwn: 4.3610,4.5710
[V3, scale=100.0, run #11] abm-gwn: 4.3310,4.5410
[V3, scale=100.0, run #12] abm-gwn: 4.3310,4.6710
[V3, scale=100.0, run #13] abm-gwn: 4.9410,5.6510
[V3, scale=100.0, run #14] abm-gwn: 4.3310,4.6010
[V3, scale=100.0, run #15] abm-gwn: 4.3810,4.5910
[V3, scale=100.0, run #16] abm-gwn: 4.5810,4.8210
[V3, scale=100.0, run #17] abm-gwn: 4.8910,5.1610
[V1, scale=100.0, run #18] abm-gwn: nan,nan
[V3, scale=100.0, run #18] abm-gwn: 4.8010,5.0710
[V3, scale=100.0, run #19] abm-gwn: 4.8210,5.0510
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/fromnumeric.py:3419: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:180: RuntimeWarning: invalid value encountered in true_divide
  ret = um.true_divide(
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:261: RuntimeWarning: Degrees of freedom <= 0 for slice
  ret = _var(a, axis=axis, dtype=dtype, out=out, ddof=ddof,
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:221: RuntimeWarning: invalid value encountered in true_divide
  arrmean = um.true_divide(arrmean, div, out=arrmean, casting='unsafe',
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:250: RuntimeWarning: invalid value encountered in true_divide
  ret = um.true_divide(
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:188: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:253: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
================================
data: V3 (extra dim = 0)
condition
{'npolys': [0, 0, 0, 0, 1], 'cmp': ['==', '==', '==', '==', '==']}
================================
================================
data: V3 (extra dim = 0)
condition
{'npolys': [0, 0, 0, 0, 1], 'cmp': ['==', '==', '==', '==', '==']}
================================
================================
data: V3 (extra dim = 0)
condition
{'npolys': [0, 0, 0, 0, 1], 'cmp': ['==', '==', '==', '==', '==']}
================================
    scale   method  ...                            coeff dist (std)   success rate
0    0.01      abm  ...                                   nan (nan)     0/20(0.0%)
0    0.01  abm-gwn  ...   1.3835191431687117 (0.026631315413998248)    9/20(45.0%)
0    0.10      abm  ...   1.3911372777519604 (0.025489193061982333)   12/20(60.0%)
0    0.10  abm-gwn  ...   1.3912387914992528 (0.019458524714936285)  20/20(100.0%)
0    1.00      abm  ...      1.328236493973197 (0.0660327833258676)  20/20(100.0%)
0    1.00  abm-gwn  ...    1.3512468249201042 (0.05209836412813013)  20/20(100.0%)
0   10.00      abm  ...   1.4008460175595117 (0.010538261130788944)  20/20(100.0%)
0   10.00  abm-gwn  ...     1.251733096255207 (0.09509472147100781)  20/20(100.0%)
0  100.00      abm  ...  1.4141225335257637 (8.519457700589255e-05)  20/20(100.0%)
0  100.00  abm-gwn  ...  1.4052321548960913 (0.0023460755082110743)  20/20(100.0%)

[10 rows x 7 columns]
[V1, scale=100.0, run #19] abm-gwn: nan,nan
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/fromnumeric.py:3419: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:180: RuntimeWarning: invalid value encountered in true_divide
  ret = um.true_divide(
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:261: RuntimeWarning: Degrees of freedom <= 0 for slice
  ret = _var(a, axis=axis, dtype=dtype, out=out, ddof=ddof,
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:221: RuntimeWarning: invalid value encountered in true_divide
  arrmean = um.true_divide(arrmean, div, out=arrmean, casting='unsafe',
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:250: RuntimeWarning: invalid value encountered in true_divide
  ret = um.true_divide(
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:188: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:253: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
================================
data: V1 (extra dim = 0)
condition
{'npolys': [0, 0, 0, 0, 0, 0, 1], 'cmp': ['==', '==', '==', '==', '==', '==', '==']}
================================
================================
data: V1 (extra dim = 0)
condition
{'npolys': [0, 0, 0, 0, 0, 0, 1], 'cmp': ['==', '==', '==', '==', '==', '==', '==']}
================================
================================
data: V1 (extra dim = 0)
condition
{'npolys': [0, 0, 0, 0, 0, 0, 1], 'cmp': ['==', '==', '==', '==', '==', '==', '==']}
================================
    scale   method  ...                            coeff dist (std)   success rate
0    0.01      abm  ...                                   nan (nan)     0/20(0.0%)
0    0.01  abm-gwn  ...                                   nan (nan)     0/20(0.0%)
0    0.10      abm  ...                                   nan (nan)     0/20(0.0%)
0    0.10  abm-gwn  ...    1.3199931720949354 (0.06439271343801134)  20/20(100.0%)
0    1.00      abm  ...     1.2927582366534431 (0.0449657654259281)  20/20(100.0%)
0    1.00  abm-gwn  ...    1.3021909964462017 (0.03576936443149382)  20/20(100.0%)
0   10.00      abm  ...    1.412976124443494 (0.000254544893372027)  20/20(100.0%)
0   10.00  abm-gwn  ...  1.4051287303303297 (0.0037350388490561145)  20/20(100.0%)
0  100.00      abm  ...  1.4140983058254593 (5.088297239368432e-06)  20/20(100.0%)
0  100.00  abm-gwn  ...                                   nan (nan)     0/20(0.0%)

[10 rows x 7 columns]
[V2, scale=0.01, run #0] abm: nan,nan
[V1, scale=0.01, run #0] abm: nan,nan
[V2, scale=0.01, run #1] abm: nan,nan
usage: experiment3.py [-h] [--save-dir SAVE_DIR] [--data-name DATA_NAME]
                      [--extra-dim EXTRA_DIM] [--nrun NRUN]
                      [--nsample NSAMPLE] [--noise-level NOISE_LEVEL]
                      [--no-preprocessing]
experiment3.py: error: unrecognized arguments: --extra_dim 1
usage: experiment3.py [-h] [--save-dir SAVE_DIR] [--data-name DATA_NAME]
                      [--extra-dim EXTRA_DIM] [--nrun NRUN]
                      [--nsample NSAMPLE] [--noise-level NOISE_LEVEL]
                      [--no-preprocessing]
experiment3.py: error: unrecognized arguments: --extra_dim 1
usage: experiment3.py [-h] [--save-dir SAVE_DIR] [--data-name DATA_NAME]
                      [--extra-dim EXTRA_DIM] [--nrun NRUN]
                      [--nsample NSAMPLE] [--noise-level NOISE_LEVEL]
                      [--no-preprocessing]
experiment3.py: error: unrecognized arguments: --extra_dim 1
usage: experiment3.py [-h] [--save-dir SAVE_DIR] [--data-name DATA_NAME]
                      [--extra-dim EXTRA_DIM] [--nrun NRUN]
                      [--nsample NSAMPLE] [--noise-level NOISE_LEVEL]
                      [--no-preprocessing]
usage: experiment3.py [-h] [--save-dir SAVE_DIR] [--data-name DATA_NAME]
                      [--extra-dim EXTRA_DIM] [--nrun NRUN]
                      [--nsample NSAMPLE] [--noise-level NOISE_LEVEL]
                      [--no-preprocessing]
experiment3.py: error: unrecognized arguments: --extra_dim 1
experiment3.py: error: unrecognized arguments: --extra_dim 1
usage: experiment3.py [-h] [--save-dir SAVE_DIR] [--data-name DATA_NAME]
                      [--extra-dim EXTRA_DIM] [--nrun NRUN]
                      [--nsample NSAMPLE] [--noise-level NOISE_LEVEL]
                      [--no-preprocessing]
experiment3.py: error: unrecognized arguments: --extra_dim 1
[V2, scale=0.01, run #0] abm: nan,nan
[V1, scale=0.01, run #0] abm: nan,nan
[V2, scale=0.01, run #1] abm: nan,nan
[V1, scale=0.01, run #1] abm: nan,nan
[V2, scale=0.01, run #2] abm: nan,nan
[V3, scale=0.01, run #0] abm: nan,nan
[V2, scale=0.01, run #3] abm: nan,nan
[V1, scale=0.01, run #2] abm: nan,nan
[V2, scale=0.01, run #4] abm: nan,nan
[V1, scale=0.01, run #3] abm: nan,nan
[V2, scale=0.01, run #5] abm: nan,nan
[V1, scale=0.01, run #4] abm: nan,nan
[V3, scale=0.01, run #1] abm: nan,nan
[V2, scale=0.01, run #6] abm: nan,nan
[V1, scale=0.01, run #5] abm: nan,nan
[V2, scale=0.01, run #7] abm: nan,nan
[V2, scale=0.01, run #8] abm: nan,nan
[V1, scale=0.01, run #6] abm: nan,nan
[V3, scale=0.01, run #2] abm: nan,nan
[V2, scale=0.01, run #9] abm: nan,nan
[V1, scale=0.01, run #7] abm: nan,nan
[V2, scale=0.01, run #10] abm: nan,nan
[V1, scale=0.01, run #8] abm: nan,nan
[V2, scale=0.01, run #11] abm: nan,nan
[V1, scale=0.01, run #9] abm: nan,nan
[V2, scale=0.01, run #12] abm: nan,nan
[V3, scale=0.01, run #3] abm: nan,nan
[V2, scale=0.01, run #13] abm: nan,nan
[V1, scale=0.01, run #10] abm: nan,nan
[V2, scale=0.01, run #14] abm: nan,nan
[V1, scale=0.01, run #11] abm: nan,nan
[V2, scale=0.01, run #15] abm: nan,nan
[V3, scale=0.01, run #4] abm: nan,nan
[V1, scale=0.01, run #12] abm: nan,nan
[V2, scale=0.01, run #16] abm: nan,nan
[V2, scale=0.01, run #17] abm: nan,nan
[V1, scale=0.01, run #13] abm: nan,nan
[V2, scale=0.01, run #18] abm: nan,nan
[V1, scale=0.01, run #14] abm: nan,nan
[V3, scale=0.01, run #5] abm: nan,nan
[V2, scale=0.01, run #19] abm: nan,nan
[V1, scale=0.01, run #15] abm: nan,nan
[V1, scale=0.01, run #16] abm: nan,nan
[V2, scale=0.01, run #0] abm-gwn: 0.0078,0.0097
[V3, scale=0.01, run #6] abm: nan,nan
[V1, scale=0.01, run #17] abm: nan,nan
[V1, scale=0.01, run #18] abm: nan,nan
[V2, scale=0.01, run #1] abm-gwn: 0.0077,0.0091
[V1, scale=0.01, run #19] abm: nan,nan
[V3, scale=0.01, run #7] abm: nan,nan
[V2, scale=0.01, run #2] abm-gwn: 0.0086,0.0093
[V2, scale=0.01, run #3] abm-gwn: 0.0079,0.0085
[V3, scale=0.01, run #8] abm: nan,nan
[V2, scale=0.01, run #4] abm-gwn: 0.0068,0.0090
[V3, scale=0.01, run #9] abm: nan,nan
[V2, scale=0.01, run #5] abm-gwn: 0.0072,0.0098
[V3, scale=0.01, run #10] abm: nan,nan
[V2, scale=0.01, run #6] abm-gwn: 0.0070,0.0099
[V2, scale=0.01, run #7] abm-gwn: 0.0075,0.0087
[V3, scale=0.01, run #11] abm: nan,nan
[V1, scale=0.01, run #0] abm-gwn: nan,nan
Traceback (most recent call last):
  File "/Users/kera/Dropbox/RESEARCH/Experiments/javi/mavi/experiment/gwn_stability/src/experiment3.py", line 196, in <module>
    exp3.run(args.data_name, 
  File "/Users/kera/Dropbox/RESEARCH/Experiments/javi/mavi/experiment/gwn_stability/src/experiment3.py", line 63, in run
    V = self.load_data(data_name=data_name, extra_dim=extra_dim, basis_type=basis_type)
  File "/Users/kera/Dropbox/RESEARCH/Experiments/javi/mavi/experiment/gwn_stability/src/experiment3.py", line 40, in load_data
    data = VLinearExtension(data, extra_dim, basis_type=basis_type)
TypeError: __init__() got an unexpected keyword argument 'basis_type'
Traceback (most recent call last):
  File "/Users/kera/Dropbox/RESEARCH/Experiments/javi/mavi/experiment/gwn_stability/src/experiment3.py", line 196, in <module>
    exp3.run(args.data_name, 
  File "/Users/kera/Dropbox/RESEARCH/Experiments/javi/mavi/experiment/gwn_stability/src/experiment3.py", line 63, in run
    V = self.load_data(data_name=data_name, extra_dim=extra_dim, basis_type=basis_type)
  File "/Users/kera/Dropbox/RESEARCH/Experiments/javi/mavi/experiment/gwn_stability/src/experiment3.py", line 40, in load_data
    data = VLinearExtension(data, extra_dim, basis_type=basis_type)
TypeError: __init__() got an unexpected keyword argument 'basis_type'
Traceback (most recent call last):
  File "/Users/kera/Dropbox/RESEARCH/Experiments/javi/mavi/experiment/gwn_stability/src/experiment3.py", line 196, in <module>
    exp3.run(args.data_name, 
  File "/Users/kera/Dropbox/RESEARCH/Experiments/javi/mavi/experiment/gwn_stability/src/experiment3.py", line 63, in run
    V = self.load_data(data_name=data_name, extra_dim=extra_dim, basis_type=basis_type)
  File "/Users/kera/Dropbox/RESEARCH/Experiments/javi/mavi/experiment/gwn_stability/src/experiment3.py", line 40, in load_data
    data = VLinearExtension(data, extra_dim, basis_type=basis_type)
TypeError: __init__() got an unexpected keyword argument 'basis_type'
[V2, scale=0.01, run #8] abm-gwn: 0.0094,0.0100
[V3, scale=0.01, run #12] abm: nan,nan
[V2, scale=0.01, run #9] abm-gwn: 0.0063,0.0081
[V3, scale=0.01, run #13] abm: nan,nan
[V2, scale=0.01, run #10] abm-gwn: 0.0082,0.0093
[V1, scale=0.01, run #0] abm: nan,nan
[V2, scale=0.01, run #0] abm: nan,nan
[V1, scale=0.01, run #1] abm: nan,nan
[V3, scale=0.01, run #0] abm: nan,nan
[V2, scale=0.01, run #1] abm: nan,nan
[V1, scale=0.01, run #2] abm: nan,nan
[V3, scale=0.01, run #14] abm: nan,nan
[V2, scale=0.01, run #11] abm-gwn: 0.0070,0.0088
[V1, scale=0.01, run #3] abm: nan,nan
[V2, scale=0.01, run #2] abm: nan,nan
[V3, scale=0.01, run #1] abm: nan,nan
[V1, scale=0.01, run #4] abm: nan,nan
[V2, scale=0.01, run #3] abm: nan,nan
[V2, scale=0.01, run #12] abm-gwn: 0.0078,0.0097
[V1, scale=0.01, run #5] abm: nan,nan
[V3, scale=0.01, run #15] abm: nan,nan
[V3, scale=0.01, run #2] abm: nan,nan
[V2, scale=0.01, run #4] abm: nan,nan
[V1, scale=0.01, run #6] abm: nan,nan
[V2, scale=0.01, run #13] abm-gwn: 0.0070,0.0081
[V2, scale=0.01, run #5] abm: nan,nan
[V1, scale=0.01, run #7] abm: nan,nan
[V1, scale=0.01, run #1] abm-gwn: nan,nan
[V3, scale=0.01, run #3] abm: nan,nan
[V1, scale=0.01, run #8] abm: nan,nan
[V2, scale=0.01, run #14] abm-gwn: 0.0075,0.0082
[V2, scale=0.01, run #6] abm: nan,nan
[V3, scale=0.01, run #16] abm: nan,nan
[V1, scale=0.01, run #9] abm: nan,nan
[V3, scale=0.01, run #4] abm: nan,nan
[V2, scale=0.01, run #7] abm: nan,nan
[V1, scale=0.01, run #10] abm: nan,nan
[V2, scale=0.01, run #15] abm-gwn: 0.0079,0.0091
[V2, scale=0.01, run #8] abm: nan,nan
[V1, scale=0.01, run #11] abm: nan,nan
[V3, scale=0.01, run #5] abm: nan,nan
[V3, scale=0.01, run #17] abm: nan,nan
[V1, scale=0.01, run #12] abm: nan,nan
[V2, scale=0.01, run #16] abm-gwn: 0.0076,0.0082
[V2, scale=0.01, run #9] abm: nan,nan
[V1, scale=0.01, run #13] abm: nan,nan
[V2, scale=0.01, run #10] abm: nan,nan
[V3, scale=0.01, run #6] abm: nan,nan
[V1, scale=0.01, run #14] abm: nan,nan
[V2, scale=0.01, run #17] abm-gwn: 0.0082,0.0089
[V1, scale=0.01, run #15] abm: nan,nan
[V2, scale=0.01, run #11] abm: nan,nan
[V3, scale=0.01, run #18] abm: nan,nan
[V1, scale=0.01, run #16] abm: nan,nan
[V3, scale=0.01, run #7] abm: nan,nan
[V2, scale=0.01, run #12] abm: nan,nan
[V1, scale=0.01, run #17] abm: nan,nan
[V2, scale=0.01, run #18] abm-gwn: 0.0077,0.0100
[V2, scale=0.01, run #13] abm: nan,nan
[V1, scale=0.01, run #18] abm: nan,nan
[V3, scale=0.01, run #19] abm: nan,nan
[V3, scale=0.01, run #8] abm: nan,nan
[V1, scale=0.01, run #19] abm: nan,nan
[V2, scale=0.01, run #14] abm: nan,nan
[V2, scale=0.01, run #19] abm-gwn: 0.0088,0.0092
[V2, scale=0.01, run #15] abm: nan,nan
[V3, scale=0.01, run #9] abm: nan,nan
[V2, scale=0.1, run #0] abm: nan,nan
[V1, scale=0.01, run #2] abm-gwn: nan,nan
[V2, scale=0.1, run #1] abm: nan,nan
[V2, scale=0.01, run #16] abm: nan,nan
[V3, scale=0.01, run #0] abm-gwn: 0.0017,0.0018
[V2, scale=0.1, run #2] abm: nan,nan
[V3, scale=0.01, run #10] abm: nan,nan
[V2, scale=0.01, run #17] abm: nan,nan
[V2, scale=0.1, run #3] abm: nan,nan
[V2, scale=0.01, run #18] abm: nan,nan
[V3, scale=0.01, run #11] abm: nan,nan
[V2, scale=0.1, run #4] abm: nan,nan
[V3, scale=0.01, run #1] abm-gwn: 0.0013,0.0016
[V2, scale=0.01, run #19] abm: nan,nan
[V2, scale=0.1, run #5] abm: nan,nan
[V2, scale=0.1, run #6] abm: nan,nan
[V3, scale=0.01, run #12] abm: nan,nan
[V2, scale=0.1, run #7] abm: nan,nan
[V1, scale=0.01, run #0] abm-gwn: nan,nan
[V2, scale=0.01, run #0] abm-gwn: 0.0068,0.0092
[V2, scale=0.1, run #8] abm: nan,nan
[V3, scale=0.01, run #13] abm: nan,nan
[V3, scale=0.01, run #2] abm-gwn: 0.0015,0.0017
[V2, scale=0.1, run #9] abm: nan,nan
[V2, scale=0.01, run #1] abm-gwn: 0.0075,0.0083
[V3, scale=0.01, run #14] abm: nan,nan
[V2, scale=0.1, run #10] abm: nan,nan
[V2, scale=0.1, run #11] abm: nan,nan
[V3, scale=0.01, run #3] abm-gwn: 0.0015,0.0015
[V2, scale=0.1, run #12] abm: nan,nan
[V3, scale=0.01, run #15] abm: nan,nan
[V2, scale=0.01, run #2] abm-gwn: 0.0075,0.0091
[V2, scale=0.1, run #13] abm: nan,nan
[V2, scale=0.1, run #14] abm: nan,nan
[V1, scale=0.01, run #3] abm-gwn: nan,nan
[V3, scale=0.01, run #16] abm: nan,nan
[V2, scale=0.1, run #15] abm: nan,nan
[V3, scale=0.01, run #4] abm-gwn: 0.0018,0.0021
[V2, scale=0.1, run #16] abm: nan,nan
[V2, scale=0.01, run #3] abm-gwn: 0.0080,0.0100
[V2, scale=0.1, run #17] abm: nan,nan
[V1, scale=0.01, run #1] abm-gwn: nan,nan
[V3, scale=0.01, run #17] abm: nan,nan
[V2, scale=0.1, run #18] abm: nan,nan
[V3, scale=0.01, run #18] abm: nan,nan
[V2, scale=0.1, run #19] abm: nan,nan
[V3, scale=0.01, run #5] abm-gwn: 0.0015,0.0017
[V2, scale=0.01, run #4] abm-gwn: 0.0091,0.0100
[V3, scale=0.01, run #19] abm: nan,nan
[V2, scale=0.1, run #0] abm-gwn: 0.0775,0.0966
[V2, scale=0.01, run #5] abm-gwn: 0.0062,0.0088
[V3, scale=0.01, run #6] abm-gwn: 0.0015,0.0018
[V2, scale=0.1, run #1] abm-gwn: 0.0774,0.0906
[V1, scale=0.01, run #2] abm-gwn: nan,nan
[V2, scale=0.01, run #6] abm-gwn: 0.0092,0.0100
[V2, scale=0.1, run #2] abm-gwn: 0.0859,0.0935
[V3, scale=0.01, run #7] abm-gwn: 0.0013,0.0016
[V2, scale=0.1, run #3] abm-gwn: 0.0787,0.0846
[V1, scale=0.01, run #4] abm-gwn: nan,nan
[V2, scale=0.01, run #7] abm-gwn: 0.0074,0.0100
[V3, scale=0.01, run #8] abm-gwn: 0.0016,0.0017
[V2, scale=0.1, run #4] abm-gwn: 0.0684,0.0905
[V2, scale=0.01, run #8] abm-gwn: 0.0067,0.0093
[V2, scale=0.1, run #5] abm-gwn: 0.0724,0.0975
[V3, scale=0.01, run #9] abm-gwn: 0.0013,0.0015
[V2, scale=0.1, run #6] abm-gwn: 0.0704,0.0990
[V2, scale=0.01, run #9] abm-gwn: 0.0079,0.0100
[V1, scale=0.01, run #3] abm-gwn: nan,nan
[V3, scale=0.01, run #10] abm-gwn: 0.0015,0.0016
[V2, scale=0.1, run #7] abm-gwn: 0.0752,0.0868
[V2, scale=0.01, run #10] abm-gwn: 0.0098,0.0100
[V3, scale=0.01, run #11] abm-gwn: 0.0013,0.0014
[V2, scale=0.1, run #8] abm-gwn: 0.0943,0.1000
[V1, scale=0.01, run #5] abm-gwn: nan,nan
[V2, scale=0.01, run #11] abm-gwn: 0.0089,0.0100
[V2, scale=0.1, run #9] abm-gwn: 0.0626,0.0805
[V3, scale=0.01, run #12] abm-gwn: 0.0019,0.0020
[V2, scale=0.1, run #10] abm-gwn: 0.0823,0.0925
[V2, scale=0.01, run #12] abm-gwn: 0.0076,0.0099
[V1, scale=0.01, run #4] abm-gwn: nan,nan
[V3, scale=0.01, run #0] abm-gwn: nan,nan
[V2, scale=0.1, run #11] abm-gwn: 0.0701,0.0881
[V3, scale=0.01, run #13] abm-gwn: 0.0016,0.0018
[V2, scale=0.01, run #13] abm-gwn: 0.0067,0.0093
[V2, scale=0.1, run #12] abm-gwn: 0.0784,0.0969
[V3, scale=0.01, run #14] abm-gwn: 0.0016,0.0017
[V2, scale=0.1, run #13] abm-gwn: 0.0695,0.0815
[V2, scale=0.01, run #14] abm-gwn: 0.0080,0.0100
[V2, scale=0.1, run #14] abm-gwn: 0.0754,0.0823
[V3, scale=0.01, run #15] abm-gwn: 0.0013,0.0014
[V1, scale=0.01, run #5] abm-gwn: nan,nan
[V2, scale=0.1, run #15] abm-gwn: 0.0791,0.0910
[V1, scale=0.01, run #6] abm-gwn: nan,nan
[V2, scale=0.01, run #15] abm-gwn: 0.0090,0.0099
[V2, scale=0.1, run #16] abm-gwn: 0.0758,0.0818
[V3, scale=0.01, run #16] abm-gwn: 0.0017,0.0019
[V2, scale=0.01, run #16] abm-gwn: 0.0082,0.0096
[V2, scale=0.1, run #17] abm-gwn: 0.0819,0.0895
[V3, scale=0.01, run #17] abm-gwn: 0.0014,0.0016
[V2, scale=0.1, run #18] abm-gwn: 0.0773,0.1000
[V2, scale=0.01, run #17] abm-gwn: 0.0070,0.0098
[V2, scale=0.1, run #19] abm-gwn: 0.0885,0.0918
[V3, scale=0.01, run #18] abm-gwn: 0.0015,0.0016
[V1, scale=0.01, run #6] abm-gwn: nan,nan
[V2, scale=0.01, run #18] abm-gwn: 0.0077,0.0100
[V2, scale=1.0, run #0] abm: nan,nan
[V2, scale=1.0, run #1] abm: nan,nan
[V2, scale=0.01, run #19] abm-gwn: 0.0067,0.0092
[V3, scale=0.01, run #19] abm-gwn: 0.0017,0.0018
[V2, scale=1.0, run #2] abm: nan,nan
[V1, scale=0.01, run #7] abm-gwn: nan,nan
[V2, scale=0.1, run #0] abm: nan,nan
[V3, scale=0.01, run #1] abm-gwn: nan,nan
[V2, scale=1.0, run #3] abm: nan,nan
[V2, scale=0.1, run #1] abm: nan,nan
[V2, scale=0.1, run #2] abm: nan,nan
[V2, scale=1.0, run #4] abm: nan,nan
[V2, scale=0.1, run #3] abm: nan,nan
[V3, scale=0.1, run #0] abm: nan,nan
[V2, scale=1.0, run #5] abm: nan,nan
[V1, scale=0.01, run #7] abm-gwn: nan,nan
[V2, scale=0.1, run #4] abm: nan,nan
[V2, scale=1.0, run #6] abm: nan,nan
[V2, scale=0.1, run #5] abm: nan,nan
[V2, scale=1.0, run #7] abm: nan,nan
[V2, scale=0.1, run #6] abm: nan,nan
[V2, scale=0.1, run #7] abm: nan,nan
[V2, scale=1.0, run #8] abm: nan,nan
[V3, scale=0.1, run #1] abm: nan,nan
[V2, scale=0.1, run #8] abm: nan,nan
[V2, scale=1.0, run #9] abm: nan,nan
[V2, scale=0.1, run #9] abm: nan,nan
[V2, scale=0.1, run #10] abm: nan,nan
[V2, scale=1.0, run #10] abm: nan,nan
[V1, scale=0.01, run #8] abm-gwn: nan,nan
[V1, scale=0.01, run #8] abm-gwn: nan,nan
[V2, scale=0.1, run #11] abm: nan,nan
[V2, scale=1.0, run #11] abm: nan,nan
[V3, scale=0.1, run #2] abm: nan,nan
[V2, scale=0.1, run #12] abm: nan,nan
[V2, scale=1.0, run #12] abm: nan,nan
[V2, scale=0.1, run #13] abm: nan,nan
[V2, scale=1.0, run #13] abm: nan,nan
[V2, scale=0.1, run #14] abm: nan,nan
[V2, scale=1.0, run #14] abm: nan,nan
[V2, scale=0.1, run #15] abm: nan,nan
[V3, scale=0.1, run #3] abm: nan,nan
[V3, scale=0.1, run #4] abm: 0.0000,0.0000
[V3, scale=0.1, run #5] abm: 0.0000,0.0000
[V2, scale=0.1, run #16] abm: nan,nan
[V2, scale=1.0, run #15] abm: nan,nan
[V2, scale=0.1, run #17] abm: nan,nan
[V3, scale=0.01, run #2] abm-gwn: nan,nan
[V2, scale=1.0, run #16] abm: nan,nan
[V1, scale=0.01, run #9] abm-gwn: nan,nan
[V2, scale=0.1, run #18] abm: nan,nan
[V2, scale=1.0, run #17] abm: nan,nan
[V2, scale=0.1, run #19] abm: nan,nan
[V3, scale=0.1, run #6] abm: nan,nan
[V2, scale=1.0, run #18] abm: nan,nan
[V1, scale=0.01, run #9] abm-gwn: nan,nan
[V2, scale=0.1, run #0] abm-gwn: 0.0682,0.0918
[V2, scale=1.0, run #19] abm: nan,nan
[V2, scale=0.1, run #1] abm-gwn: 0.0749,0.0828
[V2, scale=1.0, run #0] abm-gwn: 0.7753,0.9662
[V3, scale=0.1, run #7] abm: nan,nan
[V2, scale=1.0, run #1] abm-gwn: 0.7741,0.9064
[V1, scale=0.01, run #10] abm-gwn: nan,nan
[V2, scale=0.1, run #2] abm-gwn: 0.0747,0.0910
[V2, scale=1.0, run #2] abm-gwn: 0.8588,0.9346
[V2, scale=0.1, run #3] abm-gwn: 0.0800,0.1000
[V3, scale=0.1, run #8] abm: nan,nan
[V2, scale=1.0, run #3] abm-gwn: 0.7865,0.8463
[V2, scale=1.0, run #4] abm-gwn: 0.6842,0.9045
[V2, scale=0.1, run #4] abm-gwn: 0.0913,0.1000
[V1, scale=0.01, run #10] abm-gwn: nan,nan
[V2, scale=1.0, run #5] abm-gwn: 0.7242,0.9754
[V3, scale=0.1, run #9] abm: nan,nan
[V2, scale=0.1, run #5] abm-gwn: 0.0622,0.0883
[V1, scale=0.01, run #11] abm-gwn: nan,nan
[V2, scale=1.0, run #6] abm-gwn: 0.7043,0.9901
[V2, scale=0.1, run #6] abm-gwn: 0.0916,0.1000
[V2, scale=1.0, run #7] abm-gwn: 0.7516,0.8684
[V3, scale=0.01, run #3] abm-gwn: nan,nan
[V3, scale=0.1, run #10] abm: nan,nan
[V2, scale=1.0, run #8] abm-gwn: 0.9432,0.9999
[V2, scale=0.1, run #7] abm-gwn: 0.0745,0.1000
[V2, scale=1.0, run #9] abm-gwn: 0.6259,0.8050
[V1, scale=0.01, run #12] abm-gwn: nan,nan
[V2, scale=0.1, run #8] abm-gwn: 0.0675,0.0933
[V3, scale=0.1, run #11] abm: nan,nan
[V2, scale=1.0, run #10] abm-gwn: 0.8227,0.9250
[V1, scale=0.01, run #11] abm-gwn: nan,nan
[V2, scale=0.1, run #9] abm-gwn: 0.0791,0.1000
[V2, scale=1.0, run #11] abm-gwn: 0.7013,0.8812
[V3, scale=0.1, run #12] abm: nan,nan
[V2, scale=0.1, run #10] abm-gwn: 0.0980,0.1000
[V2, scale=1.0, run #12] abm-gwn: 0.7842,0.9692
[V1, scale=0.01, run #13] abm-gwn: nan,nan
[V2, scale=1.0, run #13] abm-gwn: 0.6952,0.8146
[V2, scale=0.1, run #11] abm-gwn: 0.0891,0.1000
[V2, scale=1.0, run #14] abm-gwn: 0.7535,0.8233
[V3, scale=0.1, run #13] abm: nan,nan
[V2, scale=1.0, run #15] abm-gwn: 0.7910,0.9101
[V2, scale=0.1, run #12] abm-gwn: 0.0758,0.0989
[V2, scale=1.0, run #16] abm-gwn: 0.7577,0.8183
[V2, scale=1.0, run #17] abm-gwn: 0.8194,0.8946
[V1, scale=0.01, run #12] abm-gwn: nan,nan
[V1, scale=0.01, run #14] abm-gwn: nan,nan
[V2, scale=0.1, run #13] abm-gwn: 0.0667,0.0933
[V3, scale=0.1, run #14] abm: nan,nan
[V3, scale=0.01, run #4] abm-gwn: nan,nan
[V2, scale=1.0, run #18] abm-gwn: 0.7730,0.9999
[V2, scale=0.1, run #14] abm-gwn: 0.0797,0.1000
[V2, scale=1.0, run #19] abm-gwn: 0.8846,0.9178
[V2, scale=10.0, run #0] abm: nan,nan
[V3, scale=0.1, run #15] abm: nan,nan
[V2, scale=10.0, run #1] abm: nan,nan
[V2, scale=0.1, run #15] abm-gwn: 0.0899,0.0986
[V2, scale=10.0, run #2] abm: nan,nan
[V1, scale=0.01, run #15] abm-gwn: nan,nan
[V2, scale=10.0, run #3] abm: nan,nan
[V2, scale=0.1, run #16] abm-gwn: 0.0824,0.0962
[V2, scale=10.0, run #4] abm: nan,nan
[V3, scale=0.1, run #16] abm: nan,nan
[V2, scale=10.0, run #5] abm: nan,nan
[V2, scale=10.0, run #6] abm: nan,nan
[V2, scale=10.0, run #7] abm: 4.5361,4.7971
[V2, scale=10.0, run #8] abm: 4.6551,4.7661
[V2, scale=10.0, run #9] abm: 4.3161,4.4781
[V1, scale=0.01, run #13] abm-gwn: nan,nan
[V2, scale=0.1, run #17] abm-gwn: 0.0702,0.0981
[V2, scale=10.0, run #10] abm: nan,nan
[V2, scale=10.0, run #11] abm: 4.5591,4.7371
[V2, scale=10.0, run #12] abm: nan,nan
[V3, scale=0.1, run #17] abm: nan,nan
[V2, scale=10.0, run #13] abm: nan,nan
[V2, scale=0.1, run #18] abm-gwn: 0.0767,0.1000
[V1, scale=0.01, run #16] abm-gwn: nan,nan
[V2, scale=10.0, run #14] abm: nan,nan
[V2, scale=10.0, run #15] abm: nan,nan
[V2, scale=0.1, run #19] abm-gwn: 0.0673,0.0922
[V2, scale=10.0, run #16] abm: nan,nan
[V2, scale=10.0, run #17] abm: nan,nan
[V2, scale=10.0, run #18] abm: 4.2901,5.0001
[V2, scale=1.0, run #0] abm: nan,nan
[V3, scale=0.1, run #18] abm: nan,nan
[V2, scale=10.0, run #19] abm: nan,nan
[V3, scale=0.01, run #5] abm-gwn: nan,nan
[V2, scale=1.0, run #1] abm: nan,nan
[V2, scale=10.0, run #0] abm-gwn: 7.7531,9.6621
[V2, scale=1.0, run #2] abm: nan,nan
[V1, scale=0.01, run #17] abm-gwn: nan,nan
[V1, scale=0.01, run #14] abm-gwn: nan,nan
[V2, scale=10.0, run #1] abm-gwn: 7.7411,9.0641
[V3, scale=0.1, run #19] abm: nan,nan
[V2, scale=1.0, run #3] abm: nan,nan
[V2, scale=10.0, run #2] abm-gwn: 8.5881,9.3461
[V2, scale=1.0, run #4] abm: nan,nan
[V3, scale=0.1, run #0] abm-gwn: 0.0168,0.0184
[V2, scale=10.0, run #3] abm-gwn: 7.8651,8.4631
[V2, scale=1.0, run #5] abm: nan,nan
[V2, scale=10.0, run #4] abm-gwn: 6.8421,9.0451
[V2, scale=1.0, run #6] abm: nan,nan
[V3, scale=0.1, run #1] abm-gwn: 0.0134,0.0160
[V1, scale=0.01, run #18] abm-gwn: nan,nan
[V2, scale=1.0, run #7] abm: nan,nan
[V2, scale=10.0, run #5] abm-gwn: 7.2421,9.7541
[V3, scale=0.1, run #2] abm-gwn: 0.0149,0.0170
[V2, scale=1.0, run #8] abm: nan,nan
[V2, scale=10.0, run #6] abm-gwn: 7.0431,9.9011
[V2, scale=1.0, run #9] abm: nan,nan
[V1, scale=0.01, run #15] abm-gwn: nan,nan
[V2, scale=10.0, run #7] abm-gwn: 7.5161,8.6841
[V3, scale=0.1, run #3] abm-gwn: 0.0145,0.0153
[V2, scale=1.0, run #10] abm: nan,nan
[V2, scale=10.0, run #8] abm-gwn: 9.4321,9.9991
[V2, scale=1.0, run #11] abm: nan,nan
[V1, scale=0.01, run #19] abm-gwn: nan,nan
[V3, scale=0.1, run #4] abm-gwn: 0.0179,0.0209
[V2, scale=10.0, run #9] abm-gwn: 6.2591,8.0501
[V1, scale=0.1, run #0] abm: nan,nan
[V2, scale=1.0, run #12] abm: nan,nan
[V3, scale=0.01, run #6] abm-gwn: nan,nan
[V1, scale=0.1, run #1] abm: nan,nan
[V1, scale=0.1, run #2] abm: nan,nan
[V2, scale=10.0, run #10] abm-gwn: 8.2271,9.2501
[V2, scale=1.0, run #13] abm: nan,nan
[V3, scale=0.1, run #5] abm-gwn: 0.0152,0.0172
[V1, scale=0.1, run #3] abm: nan,nan
[V1, scale=0.1, run #4] abm: nan,nan
[V2, scale=10.0, run #11] abm-gwn: 7.0131,8.8121
[V2, scale=1.0, run #14] abm: nan,nan
[V1, scale=0.1, run #5] abm: nan,nan
[V1, scale=0.1, run #6] abm: nan,nan
[V2, scale=10.0, run #12] abm-gwn: 7.8421,9.6921
[V2, scale=1.0, run #15] abm: nan,nan
[V3, scale=0.1, run #6] abm-gwn: 0.0152,0.0185
[V1, scale=0.1, run #7] abm: nan,nan
[V1, scale=0.01, run #16] abm-gwn: nan,nan
[V1, scale=0.1, run #8] abm: nan,nan
[V2, scale=10.0, run #13] abm-gwn: 6.9521,8.1461
[V2, scale=1.0, run #16] abm: nan,nan
[V1, scale=0.1, run #9] abm: nan,nan
[V2, scale=10.0, run #14] abm-gwn: 7.5351,8.2331
[V3, scale=0.1, run #7] abm-gwn: 0.0132,0.0157
[V1, scale=0.1, run #10] abm: nan,nan
[V2, scale=1.0, run #17] abm: nan,nan
[V1, scale=0.1, run #11] abm: nan,nan
[V2, scale=10.0, run #15] abm-gwn: 7.9101,9.1011
[V1, scale=0.1, run #12] abm: nan,nan
[V2, scale=1.0, run #18] abm: nan,nan
[V1, scale=0.1, run #13] abm: nan,nan
[V3, scale=0.1, run #8] abm-gwn: 0.0158,0.0169
[V2, scale=10.0, run #16] abm-gwn: 7.5771,8.1831
[V1, scale=0.1, run #14] abm: nan,nan
[V2, scale=1.0, run #19] abm: nan,nan
[V1, scale=0.1, run #15] abm: nan,nan
[V2, scale=10.0, run #17] abm-gwn: 8.1941,8.9461
[V1, scale=0.1, run #16] abm: nan,nan
[V3, scale=0.1, run #9] abm-gwn: 0.0130,0.0148
[V1, scale=0.1, run #17] abm: nan,nan
[V2, scale=1.0, run #0] abm-gwn: 0.6817,0.9178
[V1, scale=0.1, run #18] abm: nan,nan
[V2, scale=10.0, run #18] abm-gwn: 7.7301,9.9991
[V1, scale=0.1, run #19] abm: nan,nan
[V3, scale=0.1, run #10] abm-gwn: 0.0150,0.0164
[V2, scale=1.0, run #1] abm-gwn: 0.7494,0.8283
[V2, scale=10.0, run #19] abm-gwn: 8.8461,9.1781
[V2, scale=100.0, run #0] abm: nan,nan
[V2, scale=100.0, run #1] abm: nan,nan
[V2, scale=100.0, run #2] abm: nan,nan
[V1, scale=0.01, run #17] abm-gwn: nan,nan
[V2, scale=100.0, run #3] abm: nan,nan
[V2, scale=100.0, run #4] abm: nan,nan
[V2, scale=100.0, run #5] abm: nan,nan
[V2, scale=100.0, run #6] abm: nan,nan
[V2, scale=100.0, run #7] abm: nan,nan
[V2, scale=100.0, run #8] abm: nan,nan
[V2, scale=100.0, run #9] abm: nan,nan
[V2, scale=100.0, run #10] abm: nan,nan
[V2, scale=100.0, run #11] abm: nan,nan
[V2, scale=100.0, run #12] abm: nan,nan
[V2, scale=100.0, run #13] abm: nan,nan
[V2, scale=100.0, run #14] abm: nan,nan
[V2, scale=100.0, run #15] abm: nan,nan
[V2, scale=100.0, run #16] abm: nan,nan
[V2, scale=100.0, run #17] abm: nan,nan
[V2, scale=100.0, run #18] abm: nan,nan
[V2, scale=100.0, run #19] abm: nan,nan
[V3, scale=0.1, run #11] abm-gwn: 0.0127,0.0142
[V2, scale=1.0, run #2] abm-gwn: 0.7474,0.9100
[V3, scale=0.01, run #7] abm-gwn: nan,nan
[V2, scale=100.0, run #0] abm-gwn: 77.5310,96.6210
[V2, scale=1.0, run #3] abm-gwn: 0.7995,0.9999
[V2, scale=100.0, run #1] abm-gwn: 77.4110,90.6410
[V3, scale=0.1, run #12] abm-gwn: 0.0192,0.0196
[V2, scale=100.0, run #2] abm-gwn: 85.8810,93.4610
[V2, scale=1.0, run #4] abm-gwn: 0.9131,0.9999
[V1, scale=0.1, run #0] abm-gwn: nan,nan
[V3, scale=0.1, run #13] abm-gwn: 0.0159,0.0181
[V2, scale=100.0, run #3] abm-gwn: 78.6510,84.6310
[V2, scale=1.0, run #5] abm-gwn: 0.6224,0.8828
[V2, scale=100.0, run #4] abm-gwn: 68.4210,90.4510
[V3, scale=0.1, run #14] abm-gwn: 0.0157,0.0165
[V1, scale=0.01, run #18] abm-gwn: nan,nan
[V2, scale=1.0, run #6] abm-gwn: 0.9163,0.9999
[V2, scale=100.0, run #5] abm-gwn: 72.4210,97.5410
[V3, scale=0.1, run #15] abm-gwn: 0.0135,0.0142
[V2, scale=100.0, run #6] abm-gwn: 70.4310,99.0110
[V2, scale=1.0, run #7] abm-gwn: 0.7448,0.9999
[V2, scale=100.0, run #7] abm-gwn: 75.1610,86.8410
[V3, scale=0.1, run #16] abm-gwn: 0.0165,0.0187
[V2, scale=1.0, run #8] abm-gwn: 0.6745,0.9325
[V1, scale=0.1, run #1] abm-gwn: nan,nan
[V2, scale=100.0, run #8] abm-gwn: 94.3210,100.0010
[V3, scale=0.1, run #17] abm-gwn: 0.0138,0.0165
[V2, scale=1.0, run #9] abm-gwn: 0.7905,0.9999
[V2, scale=100.0, run #9] abm-gwn: 62.5910,80.5010
[V3, scale=0.1, run #18] abm-gwn: 0.0154,0.0158
[V2, scale=100.0, run #10] abm-gwn: 82.2710,92.5010
[V2, scale=1.0, run #10] abm-gwn: 0.9803,0.9999
[V1, scale=0.01, run #19] abm-gwn: nan,nan
[V2, scale=100.0, run #11] abm-gwn: 70.1310,88.1210
[V1, scale=0.1, run #0] abm: nan,nan
[V3, scale=0.01, run #8] abm-gwn: nan,nan
[V3, scale=0.1, run #19] abm-gwn: 0.0167,0.0179
[V2, scale=1.0, run #11] abm-gwn: 0.8913,0.9999
[V3, scale=1.0, run #0] abm: 0.0697,0.0772
[V3, scale=1.0, run #1] abm: 0.0546,0.0685
[V3, scale=1.0, run #2] abm: 0.0604,0.0667
[V2, scale=100.0, run #12] abm-gwn: 78.4210,96.9210
[V3, scale=1.0, run #3] abm: 0.0602,0.0625
[V1, scale=0.1, run #2] abm-gwn: nan,nan
[V1, scale=0.1, run #1] abm: nan,nan
[V3, scale=1.0, run #4] abm: 0.0740,0.0814
[V3, scale=1.0, run #5] abm: 0.0625,0.0696
[V3, scale=1.0, run #6] abm: 0.0647,0.0792
[V3, scale=1.0, run #7] abm: 0.0542,0.0639
[V3, scale=1.0, run #8] abm: 0.0621,0.0674
[V2, scale=100.0, run #13] abm-gwn: 69.5210,81.4610
[V3, scale=1.0, run #9] abm: 0.0517,0.0601
[V2, scale=1.0, run #12] abm-gwn: 0.7575,0.9890
[V3, scale=1.0, run #10] abm: 0.0601,0.0672
[V1, scale=0.1, run #2] abm: nan,nan
[V3, scale=1.0, run #11] abm: 0.0482,0.0532
[V3, scale=1.0, run #12] abm: 0.0788,0.0797
[V3, scale=1.0, run #13] abm: 0.0643,0.0697
[V2, scale=100.0, run #14] abm-gwn: 75.3510,82.3310
[V3, scale=1.0, run #14] abm: 0.0667,0.0702
[V3, scale=1.0, run #15] abm: 0.0535,0.0562
[V3, scale=1.0, run #16] abm: 0.0751,0.0843
[V1, scale=0.1, run #3] abm: nan,nan
[V3, scale=1.0, run #17] abm: 0.0569,0.0676
[V3, scale=1.0, run #18] abm: 0.0637,0.0659
[V3, scale=1.0, run #19] abm: 0.0695,0.0750
[V2, scale=1.0, run #13] abm-gwn: 0.6665,0.9330
[V2, scale=100.0, run #15] abm-gwn: 79.1010,91.0110
[V1, scale=0.1, run #4] abm: nan,nan
[V2, scale=100.0, run #16] abm-gwn: 75.7710,81.8310
[V1, scale=0.1, run #5] abm: nan,nan
[V2, scale=1.0, run #14] abm-gwn: 0.7967,0.9999
[V3, scale=1.0, run #0] abm-gwn: 0.1677,0.1840
[V2, scale=100.0, run #17] abm-gwn: 81.9410,89.4610
[V1, scale=0.1, run #6] abm: nan,nan
[V2, scale=1.0, run #15] abm-gwn: 0.8994,0.9857
[V2, scale=100.0, run #18] abm-gwn: 77.3010,99.9910
[V3, scale=1.0, run #1] abm-gwn: 0.1337,0.1599
[V1, scale=0.1, run #3] abm-gwn: nan,nan
[V1, scale=0.1, run #7] abm: nan,nan
[V2, scale=100.0, run #19] abm-gwn: 88.4610,91.7810
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/fromnumeric.py:3419: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:180: RuntimeWarning: invalid value encountered in true_divide
  ret = um.true_divide(
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:261: RuntimeWarning: Degrees of freedom <= 0 for slice
  ret = _var(a, axis=axis, dtype=dtype, out=out, ddof=ddof,
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:221: RuntimeWarning: invalid value encountered in true_divide
  arrmean = um.true_divide(arrmean, div, out=arrmean, casting='unsafe',
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:250: RuntimeWarning: invalid value encountered in true_divide
  ret = um.true_divide(
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:188: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:253: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
================================
data: V2 (extra dim = 0)
condition
{'npolys': [0, 1, 0, 1], 'cmp': ['==', '==', '==', '==']}
================================
================================
data: V2 (extra dim = 0)
condition
{'npolys': [0, 1, 0, 1], 'cmp': ['==', '==', '==', '==']}
================================
================================
data: V2 (extra dim = 0)
condition
{'npolys': [0, 1, 0, 1], 'cmp': ['==', '==', '==', '==']}
================================
new range: 0.005850100000000002, 0.010000100000000001
new range: 0.005110100000000002, 0.010000100000000001
new range: 0.004790100000000002, 0.010000100000000001
new range: 0.004700100000000002, 0.010000100000000001
new range: 0.004790100000000002, 0.010000100000000001
new range: 0.005060100000000002, 0.010000100000000001
new range: 0.005980100000000002, 0.010000100000000001
new range: 0.004530100000000002, 0.010000100000000001
new range: 0.004650100000000002, 0.010000100000000001
new range: 0.004230100000000001, 0.010000100000000001
new range: 0.0044601000000000016, 0.010000100000000001
new range: 0.004550100000000002, 0.010000100000000001
new range: 0.005380100000000002, 0.010000100000000001
new range: 0.004730100000000002, 0.010000100000000001
new range: 0.005250100000000002, 0.010000100000000001
new range: 0.005100100000000002, 0.010000100000000001
new range: 0.0049301000000000015, 0.010000100000000001
new range: 0.005110100000000002, 0.010000100000000001
new range: 0.004280100000000002, 0.010000100000000001
new range: 0.004920100000000002, 0.010000100000000001
new range: 0.005850100000000002, 0.010000100000000001
new range: 0.005110100000000002, 0.010000100000000001
new range: 0.004790100000000002, 0.010000100000000001
new range: 0.004700100000000002, 0.010000100000000001
new range: 0.004790100000000002, 0.010000100000000001
new range: 0.005060100000000002, 0.010000100000000001
new range: 0.005980100000000002, 0.010000100000000001
new range: 0.004530100000000002, 0.010000100000000001
new range: 0.004650100000000002, 0.010000100000000001
new range: 0.004230100000000001, 0.010000100000000001
new range: 0.0044601000000000016, 0.010000100000000001
new range: 0.004550100000000002, 0.010000100000000001
new range: 0.005380100000000002, 0.010000100000000001
new range: 0.004730100000000002, 0.010000100000000001
new range: 0.005250100000000002, 0.010000100000000001
new range: 0.005100100000000002, 0.010000100000000001
new range: 0.0049301000000000015, 0.010000100000000001
new range: 0.005110100000000002, 0.010000100000000001
new range: 0.004280100000000002, 0.010000100000000001
new range: 0.004920100000000002, 0.010000100000000001
new range: 0.058501000000000004, 0.100001
new range: 0.051101, 0.100001
new range: 0.047901, 0.100001
new range: 0.047001, 0.100001
new range: 0.047901, 0.100001
new range: 0.050601, 0.100001
new range: 0.059801, 0.100001
new range: 0.045301, 0.100001
new range: 0.046501, 0.100001
new range: 0.042301, 0.100001
new range: 0.044601, 0.100001
new range: 0.045501, 0.100001
new range: 0.053801, 0.100001
new range: 0.047301, 0.100001
new range: 0.052501, 0.100001
new range: 0.051001, 0.100001
new range: 0.049301, 0.100001
new range: 0.051101, 0.100001
new range: 0.042801, 0.100001
new range: 0.049201, 0.100001
new range: 0.058501000000000004, 0.100001
new range: 0.051101, 0.100001
new range: 0.047901, 0.100001
new range: 0.047001, 0.100001
new range: 0.047901, 0.100001
new range: 0.050601, 0.100001
new range: 0.059801, 0.100001
new range: 0.045301, 0.100001
new range: 0.046501, 0.100001
new range: 0.042301, 0.100001
new range: 0.044601, 0.100001
new range: 0.045501, 0.100001
new range: 0.053801, 0.100001
new range: 0.047301, 0.100001
new range: 0.052501, 0.100001
new range: 0.051001, 0.100001
new range: 0.049301, 0.100001
new range: 0.051101, 0.100001
new range: 0.042801, 0.100001
new range: 0.049201, 0.100001
new range: 0.5850099999999999, 1.0000099999999998
new range: 0.51101, 1.0000099999999998
new range: 0.47901, 1.0000099999999998
new range: 0.47001000000000004, 1.0000099999999998
new range: 0.47901, 1.0000099999999998
new range: 0.50601, 1.0000099999999998
new range: 0.5980099999999999, 1.0000099999999998
new range: 0.45301, 1.0000099999999998
new range: 0.46501000000000003, 1.0000099999999998
new range: 0.42301, 1.0000099999999998
new range: 0.44601, 1.0000099999999998
new range: 0.45501, 1.0000099999999998
new range: 0.53801, 1.0000099999999998
new range: 0.47301000000000004, 1.0000099999999998
new range: 0.52501, 1.0000099999999998
new range: 0.51001, 1.0000099999999998
new range: 0.49301, 1.0000099999999998
new range: 0.51101, 1.0000099999999998
new range: 0.42801, 1.0000099999999998
new range: 0.49201, 1.0000099999999998
new range: 0.5850099999999999, 1.0000099999999998
new range: 0.51101, 1.0000099999999998
new range: 0.47901, 1.0000099999999998
new range: 0.47001000000000004, 1.0000099999999998
new range: 0.47901, 1.0000099999999998
new range: 0.50601, 1.0000099999999998
new range: 0.5980099999999999, 1.0000099999999998
new range: 0.45301, 1.0000099999999998
new range: 0.46501000000000003, 1.0000099999999998
new range: 0.42301, 1.0000099999999998
new range: 0.44601, 1.0000099999999998
new range: 0.45501, 1.0000099999999998
new range: 0.53801, 1.0000099999999998
new range: 0.47301000000000004, 1.0000099999999998
new range: 0.52501, 1.0000099999999998
new range: 0.51001, 1.0000099999999998
new range: 0.49301, 1.0000099999999998
new range: 0.51101, 1.0000099999999998
new range: 0.42801, 1.0000099999999998
new range: 0.49201, 1.0000099999999998
new range: 5.8501, 10.0001
new range: 5.1101, 10.0001
new range: 4.7901, 10.0001
new range: 4.7001, 10.0001
new range: 4.7901, 10.0001
new range: 5.0601, 10.0001
new range: 5.9801, 10.0001
new range: 4.5301, 10.0001
new range: 4.6501, 10.0001
new range: 4.2301, 10.0001
new range: 4.4601, 10.0001
new range: 4.5501000000000005, 10.0001
new range: 5.3801, 10.0001
new range: 4.7301, 10.0001
new range: 5.2501, 10.0001
new range: 5.1001, 10.0001
new range: 4.9301, 10.0001
new range: 5.1101, 10.0001
new range: 4.2801, 10.0001
new range: 4.9201, 10.0001
new range: 5.8501, 10.0001
new range: 5.1101, 10.0001
new range: 4.7901, 10.0001
new range: 4.7001, 10.0001
new range: 4.7901, 10.0001
new range: 5.0601, 10.0001
new range: 5.9801, 10.0001
new range: 4.5301, 10.0001
new range: 4.6501, 10.0001
new range: 4.2301, 10.0001
new range: 4.4601, 10.0001
new range: 4.5501000000000005, 10.0001
new range: 5.3801, 10.0001
new range: 4.7301, 10.0001
new range: 5.2501, 10.0001
new range: 5.1001, 10.0001
new range: 4.9301, 10.0001
new range: 5.1101, 10.0001
new range: 4.2801, 10.0001
new range: 4.9201, 10.0001
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: 58.501, 100.001
new range: 51.101, 100.001
new range: 47.900999999999996, 100.001
new range: 47.001, 100.001
new range: 47.900999999999996, 100.001
new range: 50.601, 100.001
new range: 59.801, 100.001
new range: 45.301, 100.001
new range: 46.501, 100.001
new range: 42.301, 100.001
new range: 44.601, 100.001
new range: 45.501, 100.001
new range: 53.801, 100.001
new range: 47.301, 100.001
new range: 52.501, 100.001
new range: 51.001, 100.001
new range: 49.301, 100.001
new range: 51.101, 100.001
new range: 42.801, 100.001
new range: 49.201, 100.001
    scale   method  ...                           coeff dist (std)   success rate
0    0.01      abm  ...                                  nan (nan)     0/20(0.0%)
0    0.01  abm-gwn  ...  0.7006240283230557 (0.007027958369600922)  20/20(100.0%)
0    0.10      abm  ...                                  nan (nan)     0/20(0.0%)
0    0.10  abm-gwn  ...  0.6894883306208813 (0.012275286629449968)  20/20(100.0%)
0    1.00      abm  ...                                  nan (nan)     0/20(0.0%)
0    1.00  abm-gwn  ...   0.5788700501552384 (0.06857893077084756)  20/20(100.0%)
0   10.00      abm  ...  0.6621054338539197 (0.006953190963212942)    5/20(25.0%)
0   10.00  abm-gwn  ...   0.6242005605376053 (0.04897504682727892)  20/20(100.0%)
0  100.00      abm  ...                                  nan (nan)     0/20(0.0%)
0  100.00  abm-gwn  ...   0.690603427749371 (0.010603160386814602)  20/20(100.0%)

[10 rows x 7 columns]
[V1, scale=0.1, run #8] abm: nan,nan
[V2, scale=1.0, run #16] abm-gwn: 0.8244,0.9619
[V3, scale=1.0, run #2] abm-gwn: 0.1489,0.1699
[V1, scale=0.1, run #9] abm: nan,nan
[V2, scale=1.0, run #17] abm-gwn: 0.7016,0.9809
[V3, scale=1.0, run #3] abm-gwn: 0.1454,0.1532
[V1, scale=0.1, run #10] abm: nan,nan
[V1, scale=0.1, run #11] abm: nan,nan
[V2, scale=1.0, run #18] abm-gwn: 0.7667,0.9999
[V3, scale=0.01, run #9] abm-gwn: nan,nan
[V3, scale=1.0, run #4] abm-gwn: 0.1793,0.2088
[V1, scale=0.1, run #12] abm: nan,nan
[V1, scale=0.1, run #4] abm-gwn: nan,nan
[V2, scale=1.0, run #19] abm-gwn: 0.6734,0.9215
[V2, scale=10.0, run #0] abm: nan,nan
[V1, scale=0.1, run #13] abm: nan,nan
[V3, scale=1.0, run #5] abm-gwn: 0.1515,0.1718
[V2, scale=10.0, run #1] abm: nan,nan
[V1, scale=0.1, run #14] abm: nan,nan
[V2, scale=10.0, run #2] abm: nan,nan
[V1, scale=0.1, run #15] abm: nan,nan
[V3, scale=1.0, run #6] abm-gwn: 0.1520,0.1849
[V2, scale=10.0, run #3] abm: nan,nan
[V2, scale=10.0, run #4] abm: nan,nan
[V1, scale=0.1, run #16] abm: nan,nan
[V3, scale=1.0, run #7] abm-gwn: 0.1318,0.1568
[V2, scale=10.0, run #5] abm: nan,nan
[V1, scale=0.1, run #17] abm: nan,nan
[V2, scale=10.0, run #6] abm: nan,nan
[V1, scale=0.1, run #5] abm-gwn: nan,nan
[V1, scale=0.1, run #18] abm: nan,nan
[V3, scale=1.0, run #8] abm-gwn: 0.1584,0.1686
[V2, scale=10.0, run #7] abm: nan,nan
[V2, scale=10.0, run #8] abm: nan,nan
[V1, scale=0.1, run #19] abm: nan,nan
[V2, scale=10.0, run #9] abm: nan,nan
[V3, scale=1.0, run #9] abm-gwn: 0.1301,0.1482
[V2, scale=10.0, run #10] abm: nan,nan
[V1, scale=0.1, run #0] abm-gwn: 0.0199,0.0210
[V2, scale=10.0, run #11] abm: nan,nan
[V3, scale=1.0, run #10] abm-gwn: 0.1495,0.1642
[V1, scale=0.1, run #1] abm-gwn: 0.0205,0.0216
[V2, scale=10.0, run #12] abm: nan,nan
[V3, scale=0.01, run #10] abm-gwn: nan,nan
[V3, scale=1.0, run #11] abm-gwn: 0.1267,0.1418
[V2, scale=10.0, run #13] abm: nan,nan
[V1, scale=0.1, run #2] abm-gwn: 0.0226,0.0249
[V1, scale=0.1, run #6] abm-gwn: nan,nan
[V2, scale=10.0, run #14] abm: nan,nan
[V2, scale=10.0, run #15] abm: nan,nan
[V1, scale=0.1, run #3] abm-gwn: 0.0189,0.0217
[V3, scale=1.0, run #12] abm-gwn: 0.1916,0.1959
[V2, scale=10.0, run #16] abm: nan,nan
[V2, scale=10.0, run #17] abm: nan,nan
[V1, scale=0.1, run #4] abm-gwn: 0.0251,0.0279
[V3, scale=1.0, run #13] abm-gwn: 0.1588,0.1812
[V2, scale=10.0, run #18] abm: nan,nan
[V2, scale=10.0, run #19] abm: nan,nan
[V1, scale=0.1, run #5] abm-gwn: 0.0191,0.0214
[V3, scale=1.0, run #14] abm-gwn: 0.1565,0.1653
[V2, scale=10.0, run #0] abm-gwn: 6.8171,9.1781
[V1, scale=0.1, run #6] abm-gwn: 0.0206,0.0220
[V1, scale=0.1, run #7] abm-gwn: nan,nan
[V3, scale=1.0, run #15] abm-gwn: 0.1347,0.1419
[V2, scale=10.0, run #1] abm-gwn: 7.4941,8.2831
[V1, scale=0.1, run #7] abm-gwn: 0.0181,0.0210
[V3, scale=1.0, run #16] abm-gwn: 0.1653,0.1872
[V2, scale=10.0, run #2] abm-gwn: 7.4741,9.1001
[V1, scale=0.1, run #8] abm-gwn: 0.0209,0.0249
[V2, scale=10.0, run #3] abm-gwn: 7.9951,9.9991
[V3, scale=1.0, run #17] abm-gwn: 0.1377,0.1645
[V3, scale=0.01, run #11] abm-gwn: nan,nan
[V1, scale=0.1, run #9] abm-gwn: 0.0173,0.0242
[V1, scale=0.1, run #8] abm-gwn: nan,nan
[V2, scale=10.0, run #4] abm-gwn: 9.1311,9.9991
[V3, scale=1.0, run #18] abm-gwn: 0.1544,0.1582
[V1, scale=0.1, run #10] abm-gwn: 0.0192,0.0225
[V2, scale=10.0, run #5] abm-gwn: 6.2241,8.8281
[V1, scale=0.1, run #11] abm-gwn: 0.0221,0.0234
[V3, scale=1.0, run #19] abm-gwn: 0.1665,0.1790
[V3, scale=10.0, run #0] abm: 3.6181,3.6421
[V2, scale=10.0, run #6] abm-gwn: 9.1631,9.9991
[V1, scale=0.1, run #12] abm-gwn: 0.0205,0.0224
[V3, scale=10.0, run #1] abm: 3.4621,3.4851
[V3, scale=10.0, run #2] abm: 3.6431,3.6451
[V2, scale=10.0, run #7] abm-gwn: 7.4481,9.9991
[V1, scale=0.1, run #13] abm-gwn: 0.0196,0.0241
[V3, scale=10.0, run #3] abm: 3.4691,3.5011
[V1, scale=0.1, run #14] abm-gwn: 0.0171,0.0184
[V2, scale=10.0, run #8] abm-gwn: 6.7451,9.3251
[V1, scale=0.1, run #9] abm-gwn: nan,nan
[V3, scale=10.0, run #4] abm: 3.7141,3.7391
[V3, scale=10.0, run #5] abm: 3.7671,3.7891
[V1, scale=0.1, run #15] abm-gwn: 0.0200,0.0250
[V2, scale=10.0, run #9] abm-gwn: 7.9051,9.9991
[V3, scale=10.0, run #6] abm: 3.6781,3.6831
[V3, scale=10.0, run #7] abm: 3.4261,3.4741
[V1, scale=0.1, run #16] abm-gwn: 0.0189,0.0216
[V2, scale=10.0, run #10] abm-gwn: 9.8031,9.9991
[V3, scale=10.0, run #8] abm: 3.3951,3.4431
[V3, scale=10.0, run #9] abm: 3.6341,3.6341
[V1, scale=0.1, run #17] abm-gwn: 0.0221,0.0246
[V2, scale=10.0, run #11] abm-gwn: 8.9131,9.9991
[V3, scale=0.01, run #12] abm-gwn: nan,nan
[V3, scale=10.0, run #10] abm: 3.6131,3.6321
[V1, scale=0.1, run #10] abm-gwn: nan,nan
[V3, scale=10.0, run #11] abm: 3.6611,3.6731
[V1, scale=0.1, run #18] abm-gwn: 0.0198,0.0214
[V3, scale=10.0, run #12] abm: 3.4541,3.4691
[V2, scale=10.0, run #12] abm-gwn: 7.5751,9.8901
[V3, scale=10.0, run #13] abm: 3.5541,3.6381
[V1, scale=0.1, run #19] abm-gwn: 0.0173,0.0201
[V1, scale=1.0, run #0] abm: 0.0940,0.1040
[V1, scale=1.0, run #1] abm: 0.0950,0.1096
[V1, scale=1.0, run #2] abm: 0.0992,0.1093
[V1, scale=1.0, run #3] abm: 0.0766,0.0895
[V1, scale=1.0, run #4] abm: 0.1125,0.1234
[V3, scale=10.0, run #14] abm: 3.4041,3.4071
[V2, scale=10.0, run #13] abm-gwn: 6.6651,9.3301
[V1, scale=1.0, run #5] abm: 0.0858,0.0999
[V1, scale=1.0, run #6] abm: 0.0966,0.1086
[V1, scale=1.0, run #7] abm: 0.0839,0.0891
[V1, scale=1.0, run #8] abm: 0.0916,0.1097
[V1, scale=1.0, run #9] abm: 0.0863,0.1048
[V1, scale=1.0, run #10] abm: 0.0839,0.0869
[V1, scale=1.0, run #11] abm: 0.1004,0.1083
[V3, scale=10.0, run #15] abm: 3.7521,3.7901
[V1, scale=1.0, run #12] abm: 0.0880,0.0991
[V1, scale=1.0, run #13] abm: 0.0932,0.1105
[V1, scale=1.0, run #14] abm: 0.0981,0.1101
[V1, scale=1.0, run #15] abm: 0.1015,0.1077
[V1, scale=1.0, run #16] abm: 0.0910,0.0991
[V1, scale=1.0, run #17] abm: 0.0988,0.1094
[V3, scale=10.0, run #16] abm: 3.6121,3.6671
[V2, scale=10.0, run #14] abm-gwn: 7.9671,9.9991
[V1, scale=1.0, run #18] abm: 0.0838,0.0936
[V1, scale=1.0, run #19] abm: 0.0852,0.1012
[V3, scale=10.0, run #17] abm: 3.7561,3.7731
[V1, scale=1.0, run #0] abm-gwn: 0.1989,0.2095
[V2, scale=10.0, run #15] abm-gwn: 8.9941,9.8571
[V3, scale=10.0, run #18] abm: 3.5351,3.6981
[V1, scale=0.1, run #11] abm-gwn: nan,nan
[V3, scale=10.0, run #19] abm: 3.5191,3.5351
[V1, scale=1.0, run #1] abm-gwn: 0.2048,0.2160
[V2, scale=10.0, run #16] abm-gwn: 8.2441,9.6191
[V3, scale=10.0, run #0] abm-gwn: 1.6771,1.8401
[V1, scale=1.0, run #2] abm-gwn: 0.2262,0.2485
[V2, scale=10.0, run #17] abm-gwn: 7.0161,9.8091
[V1, scale=1.0, run #3] abm-gwn: 0.1886,0.2172
[V3, scale=10.0, run #1] abm-gwn: 1.3371,1.5991
[V2, scale=10.0, run #18] abm-gwn: 7.6671,9.9991
[V1, scale=0.1, run #12] abm-gwn: nan,nan
[V3, scale=0.01, run #13] abm-gwn: nan,nan
[V1, scale=1.0, run #4] abm-gwn: 0.2514,0.2792
[V2, scale=10.0, run #19] abm-gwn: 6.7341,9.2151
[V3, scale=10.0, run #2] abm-gwn: 1.4891,1.6991
[V2, scale=100.0, run #0] abm: nan,nan
[V2, scale=100.0, run #1] abm: nan,nan
[V2, scale=100.0, run #2] abm: nan,nan
[V2, scale=100.0, run #3] abm: nan,nan
[V2, scale=100.0, run #4] abm: nan,nan
[V2, scale=100.0, run #5] abm: nan,nan
[V2, scale=100.0, run #6] abm: nan,nan
[V2, scale=100.0, run #7] abm: nan,nan
[V2, scale=100.0, run #8] abm: nan,nan
[V2, scale=100.0, run #9] abm: nan,nan
[V2, scale=100.0, run #10] abm: nan,nan
[V2, scale=100.0, run #11] abm: nan,nan
[V2, scale=100.0, run #12] abm: nan,nan
[V2, scale=100.0, run #13] abm: nan,nan
[V2, scale=100.0, run #14] abm: nan,nan
[V2, scale=100.0, run #15] abm: nan,nan
[V2, scale=100.0, run #16] abm: nan,nan
[V2, scale=100.0, run #17] abm: nan,nan
[V2, scale=100.0, run #18] abm: nan,nan
[V2, scale=100.0, run #19] abm: nan,nan
[V1, scale=1.0, run #5] abm-gwn: 0.1913,0.2142
[V3, scale=10.0, run #3] abm-gwn: 1.4541,1.5321
[V2, scale=100.0, run #0] abm-gwn: 68.1710,91.7810
[V1, scale=1.0, run #6] abm-gwn: 0.2059,0.2203
[V2, scale=100.0, run #1] abm-gwn: 74.9410,82.8310
[V3, scale=10.0, run #4] abm-gwn: 1.7931,2.0881
[V1, scale=1.0, run #7] abm-gwn: 0.1814,0.2104
[V1, scale=0.1, run #13] abm-gwn: nan,nan
[V2, scale=100.0, run #2] abm-gwn: 74.7410,91.0010
[V3, scale=10.0, run #5] abm-gwn: 1.5151,1.7181
[V1, scale=1.0, run #8] abm-gwn: 0.2089,0.2488
[V2, scale=100.0, run #3] abm-gwn: 79.9510,99.9910
[V1, scale=1.0, run #9] abm-gwn: 0.1725,0.2421
[V3, scale=10.0, run #6] abm-gwn: 1.5201,1.8491
[V2, scale=100.0, run #4] abm-gwn: 91.3110,99.9910
[V1, scale=1.0, run #10] abm-gwn: 0.1917,0.2248
[V3, scale=10.0, run #7] abm-gwn: 1.3181,1.5681
[V1, scale=0.1, run #14] abm-gwn: nan,nan
[V2, scale=100.0, run #5] abm-gwn: 62.2410,88.2810
[V1, scale=1.0, run #11] abm-gwn: 0.2208,0.2344
[V3, scale=0.01, run #14] abm-gwn: nan,nan
[V3, scale=10.0, run #8] abm-gwn: 1.5841,1.6861
[V2, scale=100.0, run #6] abm-gwn: 91.6310,99.9910
[V1, scale=1.0, run #12] abm-gwn: 0.2049,0.2240
[V3, scale=10.0, run #9] abm-gwn: 1.3011,1.4821
[V1, scale=1.0, run #13] abm-gwn: 0.1960,0.2407
[V2, scale=100.0, run #7] abm-gwn: 74.4810,99.9910
[V3, scale=10.0, run #10] abm-gwn: 1.4951,1.6421
[V1, scale=1.0, run #14] abm-gwn: 0.1711,0.1838
[V2, scale=100.0, run #8] abm-gwn: 67.4510,93.2510
[V1, scale=0.1, run #15] abm-gwn: nan,nan
[V3, scale=10.0, run #11] abm-gwn: 1.2671,1.4181
[V1, scale=1.0, run #15] abm-gwn: 0.2001,0.2504
[V2, scale=100.0, run #9] abm-gwn: 79.0510,100.0010
[V3, scale=10.0, run #12] abm-gwn: 1.9161,1.9591
[V1, scale=1.0, run #16] abm-gwn: 0.1887,0.2156
[V2, scale=100.0, run #10] abm-gwn: 98.0310,100.0010
[V1, scale=1.0, run #17] abm-gwn: 0.2212,0.2463
[V3, scale=10.0, run #13] abm-gwn: 1.5881,1.8121
[V2, scale=100.0, run #11] abm-gwn: 89.1310,100.0010
[V1, scale=0.1, run #16] abm-gwn: nan,nan
[V1, scale=1.0, run #18] abm-gwn: 0.1975,0.2136
[V3, scale=10.0, run #14] abm-gwn: 1.5651,1.6531
[V2, scale=100.0, run #12] abm-gwn: 75.7510,98.9010
[V1, scale=1.0, run #19] abm-gwn: 0.1726,0.2007
[V1, scale=10.0, run #0] abm: 3.6501,3.9861
[V3, scale=10.0, run #15] abm-gwn: 1.3471,1.4191
[V1, scale=10.0, run #1] abm: 3.5691,3.9061
[V2, scale=100.0, run #13] abm-gwn: 66.6510,93.3010
[V1, scale=10.0, run #2] abm: 3.5191,3.8091
[V1, scale=10.0, run #3] abm: 3.6461,3.9971
[V1, scale=10.0, run #4] abm: 3.6791,4.1911
[V3, scale=0.01, run #15] abm-gwn: nan,nan
[V3, scale=10.0, run #16] abm-gwn: 1.6531,1.8721
[V2, scale=100.0, run #14] abm-gwn: 79.6710,100.0010
[V1, scale=10.0, run #5] abm: 3.4971,3.9061
[V1, scale=10.0, run #6] abm: 3.5921,3.8401
[V1, scale=10.0, run #7] abm: 3.5251,3.8491
[V1, scale=0.1, run #17] abm-gwn: nan,nan
[V3, scale=10.0, run #17] abm-gwn: 1.3771,1.6451
[V2, scale=100.0, run #15] abm-gwn: 89.9410,98.5710
[V1, scale=10.0, run #8] abm: 3.5111,3.8621
[V1, scale=10.0, run #9] abm: 3.6611,3.9481
[V1, scale=10.0, run #10] abm: 3.4821,3.7131
[V1, scale=10.0, run #11] abm: 3.5451,3.7611
[V3, scale=10.0, run #18] abm-gwn: 1.5441,1.5821
[V2, scale=100.0, run #16] abm-gwn: 82.4410,96.1910
[V1, scale=10.0, run #12] abm: 3.5021,4.0381
[V1, scale=10.0, run #13] abm: 3.6171,3.8791
[V1, scale=10.0, run #14] abm: 3.5951,3.9251
[V3, scale=10.0, run #19] abm-gwn: 1.6651,1.7901
[V2, scale=100.0, run #17] abm-gwn: 70.1610,98.0910
[V3, scale=100.0, run #0] abm: 3.7110,3.7410
[V1, scale=10.0, run #15] abm: 3.5991,3.9511
[V3, scale=100.0, run #1] abm: 3.5410,3.6110
[V3, scale=100.0, run #2] abm: 3.7310,3.7310
[V3, scale=100.0, run #3] abm: 3.5710,3.6010
[V3, scale=100.0, run #4] abm: 3.7910,3.8210
[V3, scale=100.0, run #5] abm: 3.8210,3.8410
[V3, scale=100.0, run #6] abm: 3.7310,3.7310
[V1, scale=10.0, run #16] abm: 3.6671,3.9401
[V3, scale=100.0, run #7] abm: 3.5210,3.5810
[V3, scale=100.0, run #8] abm: 3.5510,3.5810
[V3, scale=100.0, run #9] abm: 3.7410,3.7410
[V3, scale=100.0, run #10] abm: 3.7110,3.7110
[V3, scale=100.0, run #11] abm: 3.7110,3.7210
[V3, scale=100.0, run #12] abm: 3.5510,3.5810
[V3, scale=100.0, run #13] abm: 3.6610,3.7310
[V1, scale=10.0, run #17] abm: 3.6361,3.9311
[V3, scale=100.0, run #14] abm: 3.5310,3.5510
[V3, scale=100.0, run #15] abm: 3.8110,3.8510
[V3, scale=100.0, run #16] abm: 3.6910,3.7510
[V3, scale=100.0, run #17] abm: 3.8010,3.8210
[V3, scale=100.0, run #18] abm: 3.5810,3.7410
[V1, scale=10.0, run #18] abm: 3.5831,3.6911
[V3, scale=100.0, run #19] abm: 3.6010,3.6210
[V2, scale=100.0, run #18] abm-gwn: 76.6710,99.9910
[V1, scale=10.0, run #19] abm: 3.5811,3.9311
[V1, scale=0.1, run #18] abm-gwn: nan,nan
[V2, scale=100.0, run #19] abm-gwn: 67.3410,92.1510
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/fromnumeric.py:3419: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:180: RuntimeWarning: invalid value encountered in true_divide
  ret = um.true_divide(
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:261: RuntimeWarning: Degrees of freedom <= 0 for slice
  ret = _var(a, axis=axis, dtype=dtype, out=out, ddof=ddof,
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:221: RuntimeWarning: invalid value encountered in true_divide
  arrmean = um.true_divide(arrmean, div, out=arrmean, casting='unsafe',
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:250: RuntimeWarning: invalid value encountered in true_divide
  ret = um.true_divide(
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:188: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:253: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
================================
data: V2 (extra dim = 1)
condition
{'npolys': [0, 2, 0, 1], 'cmp': ['==', '==', '==', '==']}
================================
================================
data: V2 (extra dim = 1)
condition
{'npolys': [0, 2, 0, 1], 'cmp': ['==', '==', '==', '==']}
================================
================================
data: V2 (extra dim = 1)
condition
{'npolys': [0, 2, 0, 1], 'cmp': ['==', '==', '==', '==']}
================================
new range: 0.005280100000000002, 0.010000100000000001
new range: 0.004880100000000002, 0.010000100000000001
new range: 0.004730100000000002, 0.010000100000000001
new range: 0.0056301000000000025, 0.010000100000000001
new range: 0.004980100000000002, 0.010000100000000001
new range: 0.005040100000000002, 0.010000100000000001
new range: 0.005580100000000002, 0.010000100000000001
new range: 0.005030100000000002, 0.010000100000000001
new range: 0.005220100000000002, 0.010000100000000001
new range: 0.005440100000000002, 0.010000100000000001
new range: 0.0056501000000000025, 0.010000100000000001
new range: 0.004840100000000002, 0.010000100000000001
new range: 0.005010100000000002, 0.010000100000000001
new range: 0.004900100000000002, 0.010000100000000001
new range: 0.004750100000000002, 0.010000100000000001
new range: 0.005190100000000002, 0.010000100000000001
new range: 0.004850100000000002, 0.010000100000000001
new range: 0.004830100000000002, 0.010000100000000001
new range: 0.005220100000000002, 0.010000100000000001
new range: 0.005770100000000002, 0.010000100000000001
new range: 0.005280100000000002, 0.010000100000000001
new range: 0.004880100000000002, 0.010000100000000001
new range: 0.004730100000000002, 0.010000100000000001
new range: 0.0056301000000000025, 0.010000100000000001
new range: 0.004980100000000002, 0.010000100000000001
new range: 0.005040100000000002, 0.010000100000000001
new range: 0.005580100000000002, 0.010000100000000001
new range: 0.005030100000000002, 0.010000100000000001
new range: 0.005220100000000002, 0.010000100000000001
new range: 0.005440100000000002, 0.010000100000000001
new range: 0.0056501000000000025, 0.010000100000000001
new range: 0.004840100000000002, 0.010000100000000001
new range: 0.005010100000000002, 0.010000100000000001
new range: 0.004900100000000002, 0.010000100000000001
new range: 0.004750100000000002, 0.010000100000000001
new range: 0.005190100000000002, 0.010000100000000001
new range: 0.004850100000000002, 0.010000100000000001
new range: 0.004830100000000002, 0.010000100000000001
new range: 0.005220100000000002, 0.010000100000000001
new range: 0.005770100000000002, 0.010000100000000001
new range: 0.052801, 0.100001
new range: 0.048801, 0.100001
new range: 0.047301, 0.100001
new range: 0.056301000000000004, 0.100001
new range: 0.049801, 0.100001
new range: 0.050401, 0.100001
new range: 0.055801, 0.100001
new range: 0.050301, 0.100001
new range: 0.052201, 0.100001
new range: 0.054401, 0.100001
new range: 0.056501, 0.100001
new range: 0.048401, 0.100001
new range: 0.050101, 0.100001
new range: 0.049001, 0.100001
new range: 0.047501, 0.100001
new range: 0.051901, 0.100001
new range: 0.048501, 0.100001
new range: 0.048301000000000004, 0.100001
new range: 0.052201, 0.100001
new range: 0.057701, 0.100001
new range: 0.052801, 0.100001
new range: 0.048801, 0.100001
new range: 0.047301, 0.100001
new range: 0.056301000000000004, 0.100001
new range: 0.049801, 0.100001
new range: 0.050401, 0.100001
new range: 0.055801, 0.100001
new range: 0.050301, 0.100001
new range: 0.052201, 0.100001
new range: 0.054401, 0.100001
new range: 0.056501, 0.100001
new range: 0.048401, 0.100001
new range: 0.050101, 0.100001
new range: 0.049001, 0.100001
new range: 0.047501, 0.100001
new range: 0.051901, 0.100001
new range: 0.048501, 0.100001
new range: 0.048301000000000004, 0.100001
new range: 0.052201, 0.100001
new range: 0.057701, 0.100001
new range: 0.52801, 1.0000099999999998
new range: 0.48801, 1.0000099999999998
new range: 0.47301000000000004, 1.0000099999999998
new range: 0.56301, 1.0000099999999998
new range: 0.49801, 1.0000099999999998
new range: 0.50401, 1.0000099999999998
new range: 0.55801, 1.0000099999999998
new range: 0.50301, 1.0000099999999998
new range: 0.52201, 1.0000099999999998
new range: 0.54401, 1.0000099999999998
new range: 0.56501, 1.0000099999999998
new range: 0.48401, 1.0000099999999998
new range: 0.50101, 1.0000099999999998
new range: 0.49001, 1.0000099999999998
new range: 0.47501000000000004, 1.0000099999999998
new range: 0.51901, 1.0000099999999998
new range: 0.48501, 1.0000099999999998
new range: 0.48301, 1.0000099999999998
new range: 0.52201, 1.0000099999999998
new range: 0.5770099999999999, 1.0000099999999998
new range: 0.52801, 1.0000099999999998
new range: 0.48801, 1.0000099999999998
new range: 0.47301000000000004, 1.0000099999999998
new range: 0.56301, 1.0000099999999998
new range: 0.49801, 1.0000099999999998
new range: 0.50401, 1.0000099999999998
new range: 0.55801, 1.0000099999999998
new range: 0.50301, 1.0000099999999998
new range: 0.52201, 1.0000099999999998
new range: 0.54401, 1.0000099999999998
new range: 0.56501, 1.0000099999999998
new range: 0.48401, 1.0000099999999998
new range: 0.50101, 1.0000099999999998
new range: 0.49001, 1.0000099999999998
new range: 0.47501000000000004, 1.0000099999999998
new range: 0.51901, 1.0000099999999998
new range: 0.48501, 1.0000099999999998
new range: 0.48301, 1.0000099999999998
new range: 0.52201, 1.0000099999999998
new range: 0.5770099999999999, 1.0000099999999998
new range: 5.2801, 10.0001
new range: 4.8801, 10.0001
new range: 4.7301, 10.0001
new range: 5.6301, 10.0001
new range: 4.9801, 10.0001
new range: 5.0401, 10.0001
new range: 5.5801, 10.0001
new range: 5.0301, 10.0001
new range: 5.2201, 10.0001
new range: 5.4401, 10.0001
new range: 5.6501, 10.0001
new range: 4.8401000000000005, 10.0001
new range: 5.0101, 10.0001
new range: 4.9001, 10.0001
new range: 4.7501, 10.0001
new range: 5.1901, 10.0001
new range: 4.8501, 10.0001
new range: 4.8301, 10.0001
new range: 5.2201, 10.0001
new range: 5.7701, 10.0001
new range: 5.2801, 10.0001
new range: 4.8801, 10.0001
new range: 4.7301, 10.0001
new range: 5.6301, 10.0001
new range: 4.9801, 10.0001
new range: 5.0401, 10.0001
new range: 5.5801, 10.0001
new range: 5.0301, 10.0001
new range: 5.2201, 10.0001
new range: 5.4401, 10.0001
new range: 5.6501, 10.0001
new range: 4.8401000000000005, 10.0001
new range: 5.0101, 10.0001
new range: 4.9001, 10.0001
new range: 4.7501, 10.0001
new range: 5.1901, 10.0001
new range: 4.8501, 10.0001
new range: 4.8301, 10.0001
new range: 5.2201, 10.0001
new range: 5.7701, 10.0001
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: 52.801, 100.001
new range: 48.801, 100.001
new range: 47.301, 100.001
new range: 56.301, 100.001
new range: 49.801, 100.001
new range: 50.400999999999996, 100.001
new range: 55.801, 100.001
new range: 50.301, 100.001
new range: 52.201, 100.001
new range: 54.400999999999996, 100.001
new range: 56.501, 100.001
new range: 48.400999999999996, 100.001
new range: 50.101, 100.001
new range: 49.001, 100.001
new range: 47.501, 100.001
new range: 51.900999999999996, 100.001
new range: 48.501, 100.001
new range: 48.301, 100.001
new range: 52.201, 100.001
new range: 57.701, 100.001
    scale   method  ...                           coeff dist (std)   success rate
0    0.01      abm  ...                                  nan (nan)     0/20(0.0%)
0    0.01  abm-gwn  ...  0.6785437328835741 (0.004612671435252213)  20/20(100.0%)
0    0.10      abm  ...                                  nan (nan)     0/20(0.0%)
0    0.10  abm-gwn  ...  0.6749537722076141 (0.005728071076954716)  20/20(100.0%)
0    1.00      abm  ...                                  nan (nan)     0/20(0.0%)
0    1.00  abm-gwn  ...  0.6365395197734515 (0.031045266535624953)  20/20(100.0%)
0   10.00      abm  ...                                  nan (nan)     0/20(0.0%)
0   10.00  abm-gwn  ...  0.6243617350946364 (0.033924246818254074)  20/20(100.0%)
0  100.00      abm  ...                                  nan (nan)     0/20(0.0%)
0  100.00  abm-gwn  ...  0.6666564549579687 (0.010673739645399142)  20/20(100.0%)

[10 rows x 7 columns]
[V1, scale=10.0, run #0] abm-gwn: 1.9891,2.0951
[V3, scale=100.0, run #0] abm-gwn: 16.7710,18.4010
[V1, scale=10.0, run #1] abm-gwn: 2.0481,2.1601
[V3, scale=100.0, run #1] abm-gwn: 13.3710,15.9910
[V1, scale=10.0, run #2] abm-gwn: 2.2621,2.4851
[V3, scale=100.0, run #2] abm-gwn: 14.8910,16.9910
[V1, scale=10.0, run #3] abm-gwn: 1.8861,2.1721
[V1, scale=0.1, run #19] abm-gwn: nan,nan
[V3, scale=0.01, run #16] abm-gwn: nan,nan
[V3, scale=100.0, run #3] abm-gwn: 14.5410,15.3210
[V1, scale=10.0, run #4] abm-gwn: 2.5141,2.7921
[V1, scale=1.0, run #0] abm: nan,nan
[V3, scale=100.0, run #4] abm-gwn: 17.9310,20.8810
[V1, scale=10.0, run #5] abm-gwn: 1.9131,2.1421
[V3, scale=100.0, run #5] abm-gwn: 15.1510,17.1810
[V1, scale=10.0, run #6] abm-gwn: 2.0591,2.2031
[V1, scale=1.0, run #1] abm: nan,nan
[V1, scale=10.0, run #7] abm-gwn: 1.8141,2.1041
[V3, scale=100.0, run #6] abm-gwn: 15.2010,18.4910
[V1, scale=1.0, run #2] abm: nan,nan
[V1, scale=10.0, run #8] abm-gwn: 2.0891,2.4881
[V3, scale=100.0, run #7] abm-gwn: 13.1810,15.6810
[V1, scale=10.0, run #9] abm-gwn: 1.7251,2.4211
[V1, scale=1.0, run #3] abm: nan,nan
[V3, scale=100.0, run #8] abm-gwn: 15.8410,16.8610
[V1, scale=10.0, run #10] abm-gwn: 1.9171,2.2481
[V3, scale=100.0, run #9] abm-gwn: 13.0110,14.8210
[V1, scale=1.0, run #4] abm: nan,nan
[V1, scale=10.0, run #11] abm-gwn: 2.2081,2.3441
[V3, scale=100.0, run #10] abm-gwn: 14.9510,16.4210
[V1, scale=10.0, run #12] abm-gwn: 2.0491,2.2401
[V3, scale=0.01, run #17] abm-gwn: nan,nan
[V1, scale=1.0, run #5] abm: nan,nan
[V3, scale=100.0, run #11] abm-gwn: 12.6710,14.1810
[V1, scale=10.0, run #13] abm-gwn: 1.9601,2.4071
[V1, scale=10.0, run #14] abm-gwn: 1.7111,1.8381
[V3, scale=100.0, run #12] abm-gwn: 19.1610,19.5910
[V1, scale=1.0, run #6] abm: nan,nan
[V1, scale=10.0, run #15] abm-gwn: 2.0011,2.5041
[V3, scale=100.0, run #13] abm-gwn: 15.8810,18.1210
[V1, scale=10.0, run #16] abm-gwn: 1.8871,2.1561
[V1, scale=1.0, run #7] abm: nan,nan
[V3, scale=100.0, run #14] abm-gwn: 15.6510,16.5310
[V1, scale=10.0, run #17] abm-gwn: 2.2121,2.4631
[V1, scale=1.0, run #8] abm: nan,nan
[V3, scale=100.0, run #15] abm-gwn: 13.4710,14.1910
[V1, scale=10.0, run #18] abm-gwn: 1.9751,2.1361
[V1, scale=10.0, run #19] abm-gwn: 1.7261,2.0071
[V1, scale=100.0, run #0] abm: 3.6610,3.9910
[V3, scale=100.0, run #16] abm-gwn: 16.5310,18.7210
[V1, scale=100.0, run #1] abm: 3.5810,4.0110
[V1, scale=100.0, run #2] abm: 3.5310,3.8110
[V1, scale=100.0, run #3] abm: 3.6610,4.1210
[V1, scale=100.0, run #4] abm: 3.6910,4.1910
[V1, scale=100.0, run #5] abm: 3.5110,4.0710
[V1, scale=100.0, run #6] abm: 3.6010,3.8410
[V1, scale=100.0, run #7] abm: 3.5410,3.8510
[V1, scale=1.0, run #9] abm: nan,nan
[V1, scale=100.0, run #8] abm: 3.5210,3.8610
[V1, scale=100.0, run #9] abm: 3.6710,4.1410
[V1, scale=100.0, run #10] abm: 3.4910,3.7210
[V1, scale=100.0, run #11] abm: 3.5610,3.7610
[V1, scale=100.0, run #12] abm: 3.5210,4.0410
[V1, scale=100.0, run #13] abm: 3.6310,4.0510
[V1, scale=100.0, run #14] abm: 3.6110,3.9910
[V1, scale=100.0, run #15] abm: 3.6110,3.9510
[V1, scale=100.0, run #16] abm: 3.6810,3.9410
[V1, scale=100.0, run #17] abm: 3.6510,3.9310
[V1, scale=100.0, run #18] abm: 3.5910,3.9910
[V1, scale=100.0, run #19] abm: 3.5910,3.9310
[V3, scale=100.0, run #17] abm-gwn: 13.7710,16.4510
[V3, scale=0.01, run #18] abm-gwn: nan,nan
[V1, scale=100.0, run #0] abm-gwn: 19.8910,20.9510
[V1, scale=1.0, run #10] abm: nan,nan
[V3, scale=100.0, run #18] abm-gwn: 15.4410,15.8210
[V1, scale=100.0, run #1] abm-gwn: 20.4810,21.6010
[V3, scale=100.0, run #19] abm-gwn: 16.6510,17.9010
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/fromnumeric.py:3419: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:180: RuntimeWarning: invalid value encountered in true_divide
  ret = um.true_divide(
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:261: RuntimeWarning: Degrees of freedom <= 0 for slice
  ret = _var(a, axis=axis, dtype=dtype, out=out, ddof=ddof,
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:221: RuntimeWarning: invalid value encountered in true_divide
  arrmean = um.true_divide(arrmean, div, out=arrmean, casting='unsafe',
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:250: RuntimeWarning: invalid value encountered in true_divide
  ret = um.true_divide(
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:188: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:253: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
================================
data: V3 (extra dim = 0)
condition
{'npolys': [0, 0, 0, 0, 1], 'cmp': ['==', '==', '==', '==', '==']}
================================
================================
data: V3 (extra dim = 0)
condition
{'npolys': [0, 0, 0, 0, 1], 'cmp': ['==', '==', '==', '==', '==']}
================================
================================
data: V3 (extra dim = 0)
condition
{'npolys': [0, 0, 0, 0, 1], 'cmp': ['==', '==', '==', '==', '==']}
================================
    scale   method  ...                           coeff dist (std)   success rate
0    0.01      abm  ...                                  nan (nan)     0/20(0.0%)
0    0.01  abm-gwn  ...   1.3815745626353861 (0.02157962346286472)  20/20(100.0%)
0    0.10      abm  ...    1.386409473428921 (0.01506663681452225)    2/20(10.0%)
0    0.10  abm-gwn  ...  1.3747171868248442 (0.022385997153812932)  20/20(100.0%)
0    1.00      abm  ...    1.3715219671049543 (0.0313507194612978)  20/20(100.0%)
0    1.00  abm-gwn  ...    1.37490867882431 (0.031193801287448784)  20/20(100.0%)
0   10.00      abm  ...    1.40482659983224 (0.005341663359969933)  20/20(100.0%)
0   10.00  abm-gwn  ...   1.2644348753214776 (0.07710425217101541)  20/20(100.0%)
0  100.00      abm  ...  1.414152533763216 (4.239594480987514e-05)  20/20(100.0%)
0  100.00  abm-gwn  ...  1.3984094267587268 (0.006662106165745361)  20/20(100.0%)

[10 rows x 7 columns]
[V1, scale=100.0, run #2] abm-gwn: 22.6210,24.8510
[V1, scale=1.0, run #11] abm: nan,nan
[V1, scale=100.0, run #3] abm-gwn: 18.8610,21.7210
[V1, scale=1.0, run #12] abm: nan,nan
[V1, scale=100.0, run #4] abm-gwn: 25.1410,27.9210
[V1, scale=1.0, run #13] abm: nan,nan
[V1, scale=100.0, run #5] abm-gwn: 19.1310,21.4210
[V1, scale=100.0, run #6] abm-gwn: 20.5910,22.0310
[V1, scale=1.0, run #14] abm: nan,nan
[V1, scale=100.0, run #7] abm-gwn: 18.1410,21.0410
[V3, scale=0.01, run #19] abm-gwn: nan,nan
[V1, scale=1.0, run #15] abm: nan,nan
[V1, scale=100.0, run #8] abm-gwn: 20.8910,24.8810
[V3, scale=0.1, run #0] abm: nan,nan
[V3, scale=0.1, run #1] abm: nan,nan
[V1, scale=1.0, run #16] abm: nan,nan
[V1, scale=100.0, run #9] abm-gwn: 17.2510,24.2110
[V3, scale=0.1, run #2] abm: nan,nan
[V3, scale=0.1, run #3] abm: nan,nan
[V1, scale=100.0, run #10] abm-gwn: 19.1710,22.4810
[V1, scale=1.0, run #17] abm: nan,nan
[V3, scale=0.1, run #4] abm: nan,nan
[V1, scale=100.0, run #11] abm-gwn: 22.0810,23.4410
[V3, scale=0.1, run #5] abm: nan,nan
[V1, scale=1.0, run #18] abm: nan,nan
[V1, scale=100.0, run #12] abm-gwn: 20.4910,22.4010
[V3, scale=0.1, run #6] abm: nan,nan
[V3, scale=0.1, run #7] abm: nan,nan
[V1, scale=100.0, run #13] abm-gwn: 19.6010,24.0710
[V3, scale=0.1, run #8] abm: nan,nan
[V1, scale=1.0, run #19] abm: nan,nan
[V1, scale=100.0, run #14] abm-gwn: 17.1110,18.3810
[V3, scale=0.1, run #9] abm: nan,nan
[V1, scale=100.0, run #15] abm-gwn: 20.0110,25.0410
[V3, scale=0.1, run #10] abm: nan,nan
[V3, scale=0.1, run #11] abm: nan,nan
[V1, scale=100.0, run #16] abm-gwn: 18.8710,21.5610
[V3, scale=0.1, run #12] abm: nan,nan
[V1, scale=100.0, run #17] abm-gwn: 22.1210,24.6310
[V3, scale=0.1, run #13] abm: nan,nan
[V1, scale=1.0, run #0] abm-gwn: nan,nan
[V3, scale=0.1, run #14] abm: nan,nan
[V1, scale=100.0, run #18] abm-gwn: 19.7510,21.3610
[V3, scale=0.1, run #15] abm: nan,nan
[V1, scale=100.0, run #19] abm-gwn: 17.2610,20.0710
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/fromnumeric.py:3419: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:180: RuntimeWarning: invalid value encountered in true_divide
  ret = um.true_divide(
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:261: RuntimeWarning: Degrees of freedom <= 0 for slice
  ret = _var(a, axis=axis, dtype=dtype, out=out, ddof=ddof,
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:221: RuntimeWarning: invalid value encountered in true_divide
  arrmean = um.true_divide(arrmean, div, out=arrmean, casting='unsafe',
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:250: RuntimeWarning: invalid value encountered in true_divide
  ret = um.true_divide(
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:188: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:253: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
================================
data: V1 (extra dim = 0)
condition
{'npolys': [0, 0, 0, 0, 0, 0, 1], 'cmp': ['==', '==', '==', '==', '==', '==', '==']}
================================
================================
data: V1 (extra dim = 0)
condition
{'npolys': [0, 0, 0, 0, 0, 0, 1], 'cmp': ['==', '==', '==', '==', '==', '==', '==']}
================================
================================
data: V1 (extra dim = 0)
condition
{'npolys': [0, 0, 0, 0, 0, 0, 1], 'cmp': ['==', '==', '==', '==', '==', '==', '==']}
================================
    scale   method  ...                             coeff dist (std)   success rate
0    0.01      abm  ...                                    nan (nan)     0/20(0.0%)
0    0.01  abm-gwn  ...                                    nan (nan)     0/20(0.0%)
0    0.10      abm  ...                                    nan (nan)     0/20(0.0%)
0    0.10  abm-gwn  ...     1.2464158150449913 (0.08718527903729795)  20/20(100.0%)
0    1.00      abm  ...    1.2522138046365392 (0.057354814846140995)  20/20(100.0%)
0    1.00  abm-gwn  ...     1.3157601961612369 (0.06974726446706492)  20/20(100.0%)
0   10.00      abm  ...   1.4132827094998401 (9.259669326795008e-05)  20/20(100.0%)
0   10.00  abm-gwn  ...     1.407465655756732 (0.003203634479480054)  20/20(100.0%)
0  100.00      abm  ...  1.4142124804508671 (3.7251480942955065e-07)  20/20(100.0%)
0  100.00  abm-gwn  ...  1.4140859740710099 (0.00012777846359234666)  20/20(100.0%)

[10 rows x 7 columns]
[V3, scale=0.1, run #16] abm: nan,nan
[V3, scale=0.1, run #17] abm: nan,nan
[V3, scale=0.1, run #18] abm: nan,nan
[V1, scale=1.0, run #1] abm-gwn: nan,nan
[V3, scale=0.1, run #19] abm: nan,nan
[V1, scale=1.0, run #2] abm-gwn: nan,nan
[V1, scale=1.0, run #3] abm-gwn: nan,nan
[V3, scale=0.1, run #0] abm-gwn: nan,nan
[V1, scale=1.0, run #4] abm-gwn: nan,nan
[V1, scale=1.0, run #5] abm-gwn: nan,nan
[V3, scale=0.1, run #1] abm-gwn: nan,nan
[V1, scale=1.0, run #6] abm-gwn: nan,nan
[V1, scale=1.0, run #7] abm-gwn: nan,nan
[V3, scale=0.1, run #2] abm-gwn: nan,nan
[V1, scale=1.0, run #8] abm-gwn: nan,nan
[V1, scale=1.0, run #9] abm-gwn: nan,nan
[V3, scale=0.1, run #3] abm-gwn: nan,nan
[V1, scale=1.0, run #10] abm-gwn: nan,nan
[V3, scale=0.1, run #4] abm-gwn: nan,nan
[V1, scale=1.0, run #11] abm-gwn: nan,nan
[V1, scale=1.0, run #12] abm-gwn: nan,nan
[V1, scale=1.0, run #13] abm-gwn: nan,nan
[V3, scale=0.1, run #5] abm-gwn: nan,nan
[V1, scale=1.0, run #14] abm-gwn: nan,nan
[V1, scale=1.0, run #15] abm-gwn: nan,nan
[V3, scale=0.1, run #6] abm-gwn: nan,nan
[V1, scale=1.0, run #16] abm-gwn: nan,nan
[V1, scale=1.0, run #17] abm-gwn: nan,nan
[V3, scale=0.1, run #7] abm-gwn: nan,nan
[V1, scale=1.0, run #18] abm-gwn: nan,nan
[V1, scale=1.0, run #19] abm-gwn: nan,nan
[V1, scale=10.0, run #0] abm: nan,nan
[V1, scale=10.0, run #1] abm: nan,nan
[V3, scale=0.1, run #8] abm-gwn: nan,nan
[V1, scale=10.0, run #2] abm: nan,nan
[V1, scale=10.0, run #3] abm: nan,nan
[V1, scale=10.0, run #4] abm: nan,nan
[V1, scale=10.0, run #5] abm: nan,nan
[V1, scale=10.0, run #6] abm: nan,nan
[V1, scale=10.0, run #7] abm: nan,nan
[V3, scale=0.1, run #9] abm-gwn: nan,nan
[V1, scale=10.0, run #8] abm: nan,nan
[V1, scale=10.0, run #9] abm: nan,nan
[V1, scale=10.0, run #10] abm: nan,nan
[V1, scale=10.0, run #11] abm: nan,nan
[V1, scale=10.0, run #12] abm: nan,nan
[V1, scale=10.0, run #13] abm: nan,nan
[V1, scale=10.0, run #14] abm: nan,nan
[V3, scale=0.1, run #10] abm-gwn: nan,nan
[V1, scale=10.0, run #15] abm: nan,nan
[V1, scale=10.0, run #16] abm: nan,nan
[V1, scale=10.0, run #17] abm: nan,nan
[V1, scale=10.0, run #18] abm: nan,nan
[V1, scale=10.0, run #19] abm: nan,nan
[V3, scale=0.1, run #11] abm-gwn: nan,nan
[V1, scale=10.0, run #0] abm-gwn: nan,nan
[V1, scale=10.0, run #1] abm-gwn: nan,nan
[V3, scale=0.1, run #12] abm-gwn: nan,nan
[V1, scale=10.0, run #2] abm-gwn: nan,nan
[V1, scale=10.0, run #3] abm-gwn: nan,nan
[V3, scale=0.1, run #13] abm-gwn: nan,nan
[V1, scale=10.0, run #4] abm-gwn: nan,nan
[V1, scale=10.0, run #5] abm-gwn: nan,nan
[V3, scale=0.1, run #14] abm-gwn: nan,nan
[V1, scale=10.0, run #6] abm-gwn: nan,nan
[V1, scale=10.0, run #7] abm-gwn: nan,nan
[V3, scale=0.1, run #15] abm-gwn: nan,nan
[V1, scale=10.0, run #8] abm-gwn: nan,nan
[V1, scale=10.0, run #9] abm-gwn: nan,nan
[V1, scale=10.0, run #10] abm-gwn: nan,nan
[V3, scale=0.1, run #16] abm-gwn: nan,nan
[V1, scale=10.0, run #11] abm-gwn: nan,nan
[V1, scale=10.0, run #12] abm-gwn: nan,nan
[V3, scale=0.1, run #17] abm-gwn: nan,nan
[V1, scale=10.0, run #13] abm-gwn: nan,nan
[V1, scale=10.0, run #14] abm-gwn: nan,nan
[V3, scale=0.1, run #18] abm-gwn: nan,nan
[V1, scale=10.0, run #15] abm-gwn: nan,nan
[V1, scale=10.0, run #16] abm-gwn: nan,nan
[V3, scale=0.1, run #19] abm-gwn: nan,nan
[V1, scale=10.0, run #17] abm-gwn: nan,nan
[V1, scale=10.0, run #18] abm-gwn: nan,nan
[V3, scale=1.0, run #0] abm: nan,nan
[V1, scale=10.0, run #19] abm-gwn: nan,nan
[V1, scale=100.0, run #0] abm: nan,nan
[V3, scale=1.0, run #1] abm: nan,nan
[V1, scale=100.0, run #1] abm: nan,nan
[V1, scale=100.0, run #2] abm: nan,nan
[V1, scale=100.0, run #3] abm: nan,nan
[V1, scale=100.0, run #4] abm: nan,nan
[V1, scale=100.0, run #5] abm: nan,nan
[V1, scale=100.0, run #6] abm: nan,nan
[V1, scale=100.0, run #7] abm: nan,nan
[V1, scale=100.0, run #8] abm: nan,nan
[V1, scale=100.0, run #9] abm: nan,nan
[V1, scale=100.0, run #10] abm: nan,nan
[V1, scale=100.0, run #11] abm: nan,nan
[V1, scale=100.0, run #12] abm: nan,nan
[V1, scale=100.0, run #13] abm: nan,nan
[V1, scale=100.0, run #14] abm: nan,nan
[V1, scale=100.0, run #15] abm: nan,nan
[V1, scale=100.0, run #16] abm: nan,nan
[V1, scale=100.0, run #17] abm: nan,nan
[V1, scale=100.0, run #18] abm: nan,nan
[V1, scale=100.0, run #19] abm: nan,nan
[V1, scale=100.0, run #0] abm-gwn: nan,nan
[V3, scale=1.0, run #2] abm: nan,nan
[V1, scale=100.0, run #1] abm-gwn: nan,nan
[V3, scale=1.0, run #3] abm: nan,nan
[V1, scale=100.0, run #2] abm-gwn: nan,nan
[V3, scale=1.0, run #4] abm: nan,nan
[V1, scale=100.0, run #3] abm-gwn: nan,nan
[V3, scale=1.0, run #5] abm: nan,nan
[V1, scale=100.0, run #4] abm-gwn: nan,nan
[V3, scale=1.0, run #6] abm: nan,nan
[V1, scale=100.0, run #5] abm-gwn: nan,nan
[V3, scale=1.0, run #7] abm: nan,nan
[V1, scale=100.0, run #6] abm-gwn: nan,nan
[V3, scale=1.0, run #8] abm: nan,nan
[V1, scale=100.0, run #7] abm-gwn: nan,nan
[V3, scale=1.0, run #9] abm: nan,nan
[V1, scale=100.0, run #8] abm-gwn: nan,nan
[V3, scale=1.0, run #10] abm: nan,nan
[V1, scale=100.0, run #9] abm-gwn: nan,nan
[V3, scale=1.0, run #11] abm: nan,nan
[V1, scale=100.0, run #10] abm-gwn: nan,nan
[V3, scale=1.0, run #12] abm: nan,nan
[V1, scale=100.0, run #11] abm-gwn: nan,nan
[V1, scale=100.0, run #12] abm-gwn: nan,nan
[V3, scale=1.0, run #13] abm: nan,nan
[V1, scale=100.0, run #13] abm-gwn: nan,nan
[V3, scale=1.0, run #14] abm: nan,nan
[V1, scale=100.0, run #14] abm-gwn: nan,nan
[V3, scale=1.0, run #15] abm: nan,nan
[V1, scale=100.0, run #15] abm-gwn: nan,nan
[V1, scale=100.0, run #16] abm-gwn: nan,nan
[V3, scale=1.0, run #16] abm: nan,nan
[V1, scale=100.0, run #17] abm-gwn: nan,nan
[V3, scale=1.0, run #17] abm: nan,nan
[V1, scale=100.0, run #18] abm-gwn: nan,nan
[V3, scale=1.0, run #18] abm: nan,nan
[V1, scale=100.0, run #19] abm-gwn: nan,nan
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/fromnumeric.py:3419: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:180: RuntimeWarning: invalid value encountered in true_divide
  ret = um.true_divide(
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:261: RuntimeWarning: Degrees of freedom <= 0 for slice
  ret = _var(a, axis=axis, dtype=dtype, out=out, ddof=ddof,
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:221: RuntimeWarning: invalid value encountered in true_divide
  arrmean = um.true_divide(arrmean, div, out=arrmean, casting='unsafe',
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:250: RuntimeWarning: invalid value encountered in true_divide
  ret = um.true_divide(
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:188: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:253: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
================================
data: V1 (extra dim = 1)
condition
{'npolys': [0, 1, 0, 0, 0, 0, 1], 'cmp': ['==', '==', '==', '==', '==', '==', '==']}
================================
================================
data: V1 (extra dim = 1)
condition
{'npolys': [0, 1, 0, 0, 0, 0, 1], 'cmp': ['==', '==', '==', '==', '==', '==', '==']}
================================
================================
data: V1 (extra dim = 1)
condition
{'npolys': [0, 1, 0, 0, 0, 0, 1], 'cmp': ['==', '==', '==', '==', '==', '==', '==']}
================================
new range: 0.005220100000000002, 0.010000100000000001
new range: 0.004670100000000002, 0.010000100000000001
new range: 0.005380100000000002, 0.010000100000000001
new range: 0.004470100000000002, 0.010000100000000001
new range: 0.004710100000000002, 0.010000100000000001
new range: 0.004510100000000002, 0.010000100000000001
new range: 0.004680100000000002, 0.010000100000000001
new range: 0.004720100000000002, 0.010000100000000001
new range: 0.005180100000000002, 0.010000100000000001
new range: 0.004700100000000002, 0.010000100000000001
new range: 0.004750100000000002, 0.010000100000000001
new range: 0.004350100000000002, 0.010000100000000001
new range: 0.005690100000000002, 0.010000100000000001
new range: 0.005050100000000002, 0.010000100000000001
new range: 0.005500100000000002, 0.010000100000000001
new range: 0.005030100000000002, 0.010000100000000001
new range: 0.0054601000000000025, 0.010000100000000001
new range: 0.004980100000000002, 0.010000100000000001
new range: 0.004750100000000002, 0.010000100000000001
new range: 0.004820100000000002, 0.010000100000000001
new range: 0.005220100000000002, 0.010000100000000001
new range: 0.004670100000000002, 0.010000100000000001
new range: 0.005380100000000002, 0.010000100000000001
new range: 0.004470100000000002, 0.010000100000000001
new range: 0.004710100000000002, 0.010000100000000001
new range: 0.004510100000000002, 0.010000100000000001
new range: 0.004680100000000002, 0.010000100000000001
new range: 0.004720100000000002, 0.010000100000000001
new range: 0.005180100000000002, 0.010000100000000001
new range: 0.004700100000000002, 0.010000100000000001
new range: 0.004750100000000002, 0.010000100000000001
new range: 0.004350100000000002, 0.010000100000000001
new range: 0.005690100000000002, 0.010000100000000001
new range: 0.005050100000000002, 0.010000100000000001
new range: 0.005500100000000002, 0.010000100000000001
new range: 0.005030100000000002, 0.010000100000000001
new range: 0.0054601000000000025, 0.010000100000000001
new range: 0.004980100000000002, 0.010000100000000001
new range: 0.004750100000000002, 0.010000100000000001
new range: 0.004820100000000002, 0.010000100000000001
new range: 0.052201, 0.100001
new range: 0.046701, 0.100001
new range: 0.053801, 0.100001
new range: 0.044701, 0.100001
new range: 0.047101, 0.100001
new range: 0.045101, 0.100001
new range: 0.046801, 0.100001
new range: 0.047201, 0.100001
new range: 0.051801, 0.100001
new range: 0.047001, 0.100001
new range: 0.047501, 0.100001
new range: 0.043501, 0.100001
new range: 0.056901, 0.100001
new range: 0.050501, 0.100001
new range: 0.055001, 0.100001
new range: 0.050301, 0.100001
new range: 0.054601000000000004, 0.100001
new range: 0.049801, 0.100001
new range: 0.047501, 0.100001
new range: 0.048201, 0.100001
new range: 0.052201, 0.100001
new range: 0.046701, 0.100001
new range: 0.053801, 0.100001
new range: 0.044701, 0.100001
new range: 0.047101, 0.100001
new range: 0.045101, 0.100001
new range: 0.046801, 0.100001
new range: 0.047201, 0.100001
new range: 0.051801, 0.100001
new range: 0.047001, 0.100001
new range: 0.047501, 0.100001
new range: 0.043501, 0.100001
new range: 0.056901, 0.100001
new range: 0.050501, 0.100001
new range: 0.055001, 0.100001
new range: 0.050301, 0.100001
new range: 0.054601000000000004, 0.100001
new range: 0.049801, 0.100001
new range: 0.047501, 0.100001
new range: 0.048201, 0.100001
new range: 0.52201, 1.0000099999999998
new range: 0.46701000000000004, 1.0000099999999998
new range: 0.53801, 1.0000099999999998
new range: 0.44701, 1.0000099999999998
new range: 0.47101000000000004, 1.0000099999999998
new range: 0.45101, 1.0000099999999998
new range: 0.46801000000000004, 1.0000099999999998
new range: 0.47201000000000004, 1.0000099999999998
new range: 0.51801, 1.0000099999999998
new range: 0.47001000000000004, 1.0000099999999998
new range: 0.47501000000000004, 1.0000099999999998
new range: 0.43501, 1.0000099999999998
new range: 0.56901, 1.0000099999999998
new range: 0.50501, 1.0000099999999998
new range: 0.55001, 1.0000099999999998
new range: 0.50301, 1.0000099999999998
new range: 0.54601, 1.0000099999999998
new range: 0.49801, 1.0000099999999998
new range: 0.47501000000000004, 1.0000099999999998
new range: 0.48201, 1.0000099999999998
new range: 0.52201, 1.0000099999999998
new range: 0.46701000000000004, 1.0000099999999998
new range: 0.53801, 1.0000099999999998
new range: 0.44701, 1.0000099999999998
new range: 0.47101000000000004, 1.0000099999999998
new range: 0.45101, 1.0000099999999998
new range: 0.46801000000000004, 1.0000099999999998
new range: 0.47201000000000004, 1.0000099999999998
new range: 0.51801, 1.0000099999999998
new range: 0.47001000000000004, 1.0000099999999998
new range: 0.47501000000000004, 1.0000099999999998
new range: 0.43501, 1.0000099999999998
new range: 0.56901, 1.0000099999999998
new range: 0.50501, 1.0000099999999998
new range: 0.55001, 1.0000099999999998
new range: 0.50301, 1.0000099999999998
new range: 0.54601, 1.0000099999999998
new range: 0.49801, 1.0000099999999998
new range: 0.47501000000000004, 1.0000099999999998
new range: 0.48201, 1.0000099999999998
new range: 5.2201, 10.0001
new range: 4.6701, 10.0001
new range: 5.3801, 10.0001
new range: 4.4701, 10.0001
new range: 4.7101, 10.0001
new range: 4.5101, 10.0001
new range: 4.6801, 10.0001
new range: 4.7201, 10.0001
new range: 5.1801, 10.0001
new range: 4.7001, 10.0001
new range: 4.7501, 10.0001
new range: 4.3501, 10.0001
new range: 5.6901, 10.0001
new range: 5.0501000000000005, 10.0001
new range: 5.5001, 10.0001
new range: 5.0301, 10.0001
new range: 5.4601, 10.0001
new range: 4.9801, 10.0001
new range: 4.7501, 10.0001
new range: 4.8201, 10.0001
new range: 5.2201, 10.0001
new range: 4.6701, 10.0001
new range: 5.3801, 10.0001
new range: 4.4701, 10.0001
new range: 4.7101, 10.0001
new range: 4.5101, 10.0001
new range: 4.6801, 10.0001
new range: 4.7201, 10.0001
new range: 5.1801, 10.0001
new range: 4.7001, 10.0001
new range: 4.7501, 10.0001
new range: 4.3501, 10.0001
new range: 5.6901, 10.0001
new range: 5.0501000000000005, 10.0001
new range: 5.5001, 10.0001
new range: 5.0301, 10.0001
new range: 5.4601, 10.0001
new range: 4.9801, 10.0001
new range: 4.7501, 10.0001
new range: 4.8201, 10.0001
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: 52.201, 100.001
new range: 46.701, 100.001
new range: 53.801, 100.001
new range: 44.701, 100.001
new range: 47.101, 100.001
new range: 45.101, 100.001
new range: 46.801, 100.001
new range: 47.201, 100.001
new range: 51.801, 100.001
new range: 47.001, 100.001
new range: 47.501, 100.001
new range: 43.501, 100.001
new range: 56.900999999999996, 100.001
new range: 50.501, 100.001
new range: 55.001, 100.001
new range: 50.301, 100.001
new range: 54.601, 100.001
new range: 49.801, 100.001
new range: 47.501, 100.001
new range: 48.201, 100.001
    scale   method  lb  ub         std coeff dist (std) success rate
0    0.01      abm NaN NaN  (nan, nan)        nan (nan)   0/20(0.0%)
0    0.01  abm-gwn NaN NaN  (nan, nan)        nan (nan)   0/20(0.0%)
0    0.10      abm NaN NaN  (nan, nan)        nan (nan)   0/20(0.0%)
0    0.10  abm-gwn NaN NaN  (nan, nan)        nan (nan)   0/20(0.0%)
0    1.00      abm NaN NaN  (nan, nan)        nan (nan)   0/20(0.0%)
0    1.00  abm-gwn NaN NaN  (nan, nan)        nan (nan)   0/20(0.0%)
0   10.00      abm NaN NaN  (nan, nan)        nan (nan)   0/20(0.0%)
0   10.00  abm-gwn NaN NaN  (nan, nan)        nan (nan)   0/20(0.0%)
0  100.00      abm NaN NaN  (nan, nan)        nan (nan)   0/20(0.0%)
0  100.00  abm-gwn NaN NaN  (nan, nan)        nan (nan)   0/20(0.0%)
[V3, scale=1.0, run #19] abm: nan,nan
[V1, scale=0.01, run #0] abm: nan,nan
[V2, scale=0.01, run #0] abm: nan,nan
[V1, scale=0.01, run #1] abm: nan,nan
[V3, scale=0.01, run #0] abm: nan,nan
[V2, scale=0.01, run #1] abm: nan,nan
[V1, scale=0.01, run #2] abm: nan,nan
[V1, scale=0.01, run #3] abm: nan,nan
[V2, scale=0.01, run #2] abm: nan,nan
[V3, scale=0.01, run #1] abm: nan,nan
[V1, scale=0.01, run #4] abm: nan,nan
[V2, scale=0.01, run #3] abm: nan,nan
[V1, scale=0.01, run #5] abm: nan,nan
[V3, scale=0.01, run #2] abm: nan,nan
[V2, scale=0.01, run #4] abm: nan,nan
[V1, scale=0.01, run #6] abm: nan,nan
[V1, scale=0.01, run #7] abm: nan,nan
[V2, scale=0.01, run #5] abm: nan,nan
[V3, scale=0.01, run #3] abm: nan,nan
[V1, scale=0.01, run #8] abm: nan,nan
[V2, scale=0.01, run #6] abm: nan,nan
[V1, scale=0.01, run #9] abm: nan,nan
[V3, scale=0.01, run #4] abm: nan,nan
[V1, scale=0.01, run #10] abm: nan,nan
[V2, scale=0.01, run #7] abm: nan,nan
[V3, scale=1.0, run #0] abm-gwn: nan,nan
[V1, scale=0.01, run #11] abm: nan,nan
[V2, scale=0.01, run #8] abm: nan,nan
[V3, scale=0.01, run #5] abm: nan,nan
[V1, scale=0.01, run #12] abm: nan,nan
[V2, scale=0.01, run #9] abm: nan,nan
[V1, scale=0.01, run #13] abm: nan,nan
[V1, scale=0.01, run #14] abm: nan,nan
[V3, scale=0.01, run #6] abm: nan,nan
[V2, scale=0.01, run #10] abm: nan,nan
[V1, scale=0.01, run #15] abm: nan,nan
[V2, scale=0.01, run #11] abm: nan,nan
[V1, scale=0.01, run #16] abm: nan,nan
[V3, scale=0.01, run #7] abm: nan,nan
[V2, scale=0.01, run #12] abm: nan,nan
[V1, scale=0.01, run #17] abm: nan,nan
[V1, scale=0.01, run #18] abm: nan,nan
[V3, scale=0.01, run #8] abm: nan,nan
[V2, scale=0.01, run #13] abm: nan,nan
[V1, scale=0.01, run #19] abm: nan,nan
[V2, scale=0.01, run #14] abm: nan,nan
[V3, scale=0.01, run #9] abm: nan,nan
[V2, scale=0.01, run #15] abm: nan,nan
[V2, scale=0.01, run #16] abm: nan,nan
[V3, scale=0.01, run #10] abm: nan,nan
[V2, scale=0.01, run #17] abm: nan,nan
[V3, scale=1.0, run #1] abm-gwn: nan,nan
[V3, scale=0.01, run #11] abm: nan,nan
[V2, scale=0.01, run #18] abm: nan,nan
[V2, scale=0.01, run #19] abm: nan,nan
[V3, scale=0.01, run #12] abm: nan,nan
[V2, scale=0.01, run #0] abm-gwn: 0.0027,0.0027
[V2, scale=0.01, run #1] abm-gwn: 0.0025,0.0025
[V1, scale=0.01, run #0] abm-gwn: nan,nan
[V2, scale=0.01, run #2] abm-gwn: 0.0032,0.0032
[V3, scale=0.01, run #13] abm: nan,nan
[V2, scale=0.01, run #3] abm-gwn: 0.0027,0.0030
[V2, scale=0.01, run #4] abm-gwn: 0.0028,0.0029
[V3, scale=0.01, run #14] abm: nan,nan
[V2, scale=0.01, run #5] abm-gwn: 0.0026,0.0027
[V2, scale=0.01, run #6] abm-gwn: 0.0027,0.0028
[V2, scale=0.01, run #7] abm-gwn: 0.0023,0.0024
[V3, scale=0.01, run #15] abm: nan,nan
[V2, scale=0.01, run #8] abm-gwn: 0.0026,0.0027
[V2, scale=0.01, run #9] abm-gwn: 0.0028,0.0030
[V2, scale=0.01, run #10] abm-gwn: 0.0027,0.0027
[V3, scale=0.01, run #16] abm: nan,nan
[V2, scale=0.01, run #11] abm-gwn: 0.0027,0.0029
[V2, scale=0.01, run #12] abm-gwn: 0.0027,0.0028
[V3, scale=1.0, run #2] abm-gwn: nan,nan
[V2, scale=0.01, run #13] abm-gwn: 0.0031,0.0031
[V3, scale=0.01, run #17] abm: nan,nan
[V2, scale=0.01, run #14] abm-gwn: 0.0024,0.0029
[V1, scale=0.01, run #1] abm-gwn: nan,nan
[V2, scale=0.01, run #15] abm-gwn: 0.0030,0.0031
[V3, scale=0.01, run #18] abm: nan,nan
[V2, scale=0.01, run #16] abm-gwn: 0.0028,0.0030
[V2, scale=0.01, run #17] abm-gwn: 0.0025,0.0044
[V3, scale=0.01, run #19] abm: nan,nan
[V2, scale=0.01, run #18] abm-gwn: 0.0027,0.0027
[V3, scale=0.01, run #0] abm-gwn: 0.0009,0.0011
[V3, scale=0.01, run #1] abm-gwn: 0.0008,0.0010
[V2, scale=0.01, run #19] abm-gwn: 0.0027,0.0028
[V2, scale=0.1, run #0] abm: nan,nan
[V2, scale=0.1, run #1] abm: nan,nan
[V2, scale=0.1, run #2] abm: nan,nan
[V1, scale=0.01, run #2] abm-gwn: nan,nan
[V2, scale=0.1, run #3] abm: nan,nan
[V2, scale=0.1, run #4] abm: nan,nan
[V3, scale=1.0, run #3] abm-gwn: nan,nan
[V2, scale=0.1, run #5] abm: nan,nan
[V2, scale=0.1, run #6] abm: nan,nan
[V2, scale=0.1, run #7] abm: nan,nan
[V2, scale=0.1, run #8] abm: nan,nan
[V1, scale=0.01, run #3] abm-gwn: nan,nan
[V2, scale=0.1, run #9] abm: nan,nan
[V2, scale=0.1, run #10] abm: nan,nan
[V2, scale=0.1, run #11] abm: nan,nan
[V2, scale=0.1, run #12] abm: nan,nan
[V2, scale=0.1, run #13] abm: nan,nan
[V3, scale=1.0, run #4] abm-gwn: nan,nan
[V2, scale=0.1, run #14] abm: nan,nan
[V3, scale=0.01, run #2] abm-gwn: nan,nan
[V3, scale=0.01, run #3] abm-gwn: 0.0010,0.0010
[V3, scale=0.01, run #4] abm-gwn: 0.0009,0.0012
[V3, scale=0.01, run #5] abm-gwn: 0.0010,0.0010
[V2, scale=0.1, run #15] abm: nan,nan
[V1, scale=0.01, run #4] abm-gwn: nan,nan
[V2, scale=0.1, run #16] abm: nan,nan
[V2, scale=0.1, run #17] abm: nan,nan
[V2, scale=0.1, run #18] abm: nan,nan
[V2, scale=0.1, run #19] abm: nan,nan
[V2, scale=0.1, run #0] abm-gwn: 0.0267,0.0268
[V2, scale=0.1, run #1] abm-gwn: 0.0247,0.0254
[V2, scale=0.1, run #2] abm-gwn: 0.0322,0.0323
[V2, scale=0.1, run #3] abm-gwn: 0.0266,0.0297
[V2, scale=0.1, run #4] abm-gwn: 0.0285,0.0289
[V1, scale=0.01, run #5] abm-gwn: nan,nan
[V2, scale=0.1, run #5] abm-gwn: 0.0256,0.0268
[V3, scale=1.0, run #5] abm-gwn: nan,nan
[V2, scale=0.1, run #6] abm-gwn: 0.0266,0.0279
[V2, scale=0.1, run #7] abm-gwn: 0.0231,0.0244
[V2, scale=0.1, run #8] abm-gwn: 0.0265,0.0266
[V2, scale=0.1, run #9] abm-gwn: 0.0278,0.0303
[V2, scale=0.1, run #10] abm-gwn: 0.0268,0.0270
[V2, scale=0.1, run #11] abm-gwn: 0.0265,0.0288
[V2, scale=0.1, run #12] abm-gwn: 0.0267,0.0279
[V2, scale=0.1, run #13] abm-gwn: 0.0312,0.0315
[V2, scale=0.1, run #14] abm-gwn: 0.0241,0.0286
[V2, scale=0.1, run #15] abm-gwn: 0.0305,0.0305
[V2, scale=0.1, run #16] abm-gwn: 0.0278,0.0297
[V1, scale=0.01, run #6] abm-gwn: nan,nan
[V2, scale=0.1, run #17] abm-gwn: 0.0250,0.0437
[V2, scale=0.1, run #18] abm-gwn: 0.0268,0.0274
[V2, scale=0.1, run #19] abm-gwn: 0.0266,0.0284
[V2, scale=1.0, run #0] abm: 0.1054,0.1194
[V2, scale=1.0, run #1] abm: 0.1001,0.1119
[V2, scale=1.0, run #2] abm: 0.1131,0.1186
[V2, scale=1.0, run #3] abm: 0.1081,0.1089
[V3, scale=0.01, run #6] abm-gwn: nan,nan
[V3, scale=0.01, run #7] abm-gwn: 0.0008,0.0009
[V3, scale=0.01, run #8] abm-gwn: 0.0009,0.0010
[V3, scale=0.01, run #9] abm-gwn: 0.0008,0.0010
[V3, scale=0.01, run #10] abm-gwn: 0.0010,0.0011
[V3, scale=0.01, run #11] abm-gwn: 0.0010,0.0010
[V2, scale=1.0, run #4] abm: nan,nan
[V3, scale=1.0, run #6] abm-gwn: nan,nan
[V2, scale=1.0, run #5] abm: 0.1048,0.1132
[V3, scale=0.01, run #12] abm-gwn: 0.0009,0.0010
[V2, scale=1.0, run #6] abm: 0.0979,0.1049
[V3, scale=0.01, run #13] abm-gwn: 0.0010,0.0010
[V2, scale=1.0, run #7] abm: 0.0982,0.1115
[V2, scale=1.0, run #8] abm: 0.0983,0.1128
[V3, scale=0.01, run #14] abm-gwn: 0.0010,0.0010
[V2, scale=1.0, run #9] abm: 0.1069,0.1082
[V2, scale=1.0, run #10] abm: 0.1014,0.1157
[V3, scale=0.01, run #15] abm-gwn: 0.0009,0.0010
[V2, scale=1.0, run #11] abm: nan,nan
[V2, scale=1.0, run #12] abm: 0.1004,0.1102
[V2, scale=1.0, run #13] abm: 0.0955,0.1158
[V2, scale=1.0, run #14] abm: 0.1011,0.1013
[V2, scale=1.0, run #15] abm: 0.0985,0.1189
[V1, scale=0.01, run #7] abm-gwn: nan,nan
[V2, scale=1.0, run #16] abm: nan,nan
[V2, scale=1.0, run #17] abm: nan,nan
[V2, scale=1.0, run #18] abm: 0.1021,0.1137
[V2, scale=1.0, run #19] abm: 0.0966,0.1141
[V2, scale=1.0, run #0] abm-gwn: 0.2665,0.2683
[V2, scale=1.0, run #1] abm-gwn: 0.2468,0.2544
[V2, scale=1.0, run #2] abm-gwn: 0.3216,0.3226
[V2, scale=1.0, run #3] abm-gwn: 0.2662,0.2967
[V2, scale=1.0, run #4] abm-gwn: 0.2849,0.2887
[V2, scale=1.0, run #5] abm-gwn: 0.2555,0.2676
[V2, scale=1.0, run #6] abm-gwn: 0.2663,0.2791
[V2, scale=1.0, run #7] abm-gwn: 0.2309,0.2441
[V3, scale=1.0, run #7] abm-gwn: nan,nan
[V2, scale=1.0, run #8] abm-gwn: 0.2647,0.2656
[V1, scale=0.01, run #8] abm-gwn: nan,nan
[V2, scale=1.0, run #9] abm-gwn: 0.2776,0.3033
[V2, scale=1.0, run #10] abm-gwn: 0.2677,0.2702
[V2, scale=1.0, run #11] abm-gwn: 0.2652,0.2876
[V2, scale=1.0, run #12] abm-gwn: 0.2665,0.2787
[V2, scale=1.0, run #13] abm-gwn: 0.3122,0.3148
[V2, scale=1.0, run #14] abm-gwn: 0.2410,0.2860
[V2, scale=1.0, run #15] abm-gwn: 0.3045,0.3050
[V2, scale=1.0, run #16] abm-gwn: 0.2782,0.2970
[V2, scale=1.0, run #17] abm-gwn: 0.2496,0.4371
[V2, scale=1.0, run #18] abm-gwn: 0.2679,0.2744
[V2, scale=1.0, run #19] abm-gwn: 0.2661,0.2843
[V3, scale=0.01, run #16] abm-gwn: nan,nan
[V2, scale=10.0, run #0] abm: 2.1591,2.7161
[V3, scale=0.01, run #17] abm-gwn: 0.0009,0.0009
[V1, scale=0.01, run #9] abm-gwn: nan,nan
[V2, scale=10.0, run #1] abm: 2.1171,2.2781
[V2, scale=10.0, run #2] abm: 3.1301,3.5581
[V2, scale=10.0, run #3] abm: 2.9401,3.1071
[V2, scale=10.0, run #4] abm: 2.6781,2.9631
[V2, scale=10.0, run #5] abm: 2.2341,2.3731
[V2, scale=10.0, run #6] abm: 2.8921,3.0551
[V2, scale=10.0, run #7] abm: 1.6581,1.8161
[V2, scale=10.0, run #8] abm: 2.3631,2.6891
[V2, scale=10.0, run #9] abm: 2.9231,3.0051
[V2, scale=10.0, run #10] abm: 2.4431,2.7641
[V2, scale=10.0, run #11] abm: 2.8741,2.9521
[V2, scale=10.0, run #12] abm: 2.4091,2.5461
[V2, scale=10.0, run #13] abm: 2.9791,3.3361
[V2, scale=10.0, run #14] abm: 2.8711,2.8881
[V2, scale=10.0, run #15] abm: 2.8431,3.2671
[V2, scale=10.0, run #16] abm: 3.0101,3.1801
[V2, scale=10.0, run #17] abm: 2.4311,2.5711
[V2, scale=10.0, run #18] abm: 2.5011,2.7091
[V2, scale=10.0, run #19] abm: 2.6831,2.7831
[V3, scale=1.0, run #8] abm-gwn: nan,nan
[V2, scale=10.0, run #0] abm-gwn: 2.6651,2.6831
[V2, scale=10.0, run #1] abm-gwn: 2.4681,2.5441
[V2, scale=10.0, run #2] abm-gwn: 3.2161,3.2261
[V2, scale=10.0, run #3] abm-gwn: 2.6621,2.9671
[V2, scale=10.0, run #4] abm-gwn: 2.8491,2.8871
[V1, scale=0.01, run #10] abm-gwn: nan,nan
[V2, scale=10.0, run #5] abm-gwn: 2.5551,2.6761
[V2, scale=10.0, run #6] abm-gwn: 2.6631,2.7911
[V2, scale=10.0, run #7] abm-gwn: 2.3091,2.4411
[V2, scale=10.0, run #8] abm-gwn: 2.6471,2.6561
[V2, scale=10.0, run #9] abm-gwn: 2.7761,3.0331
[V2, scale=10.0, run #10] abm-gwn: 2.6771,2.7021
[V2, scale=10.0, run #11] abm-gwn: 2.6521,2.8761
[V2, scale=10.0, run #12] abm-gwn: 2.6651,2.7871
[V2, scale=10.0, run #13] abm-gwn: 3.1221,3.1481
[V2, scale=10.0, run #14] abm-gwn: 2.4101,2.8601
[V2, scale=10.0, run #15] abm-gwn: 3.0451,3.0501
[V2, scale=10.0, run #16] abm-gwn: 2.7821,2.9701
[V1, scale=0.01, run #11] abm-gwn: nan,nan
[V3, scale=1.0, run #9] abm-gwn: nan,nan
[V2, scale=10.0, run #17] abm-gwn: 2.4961,4.3711
[V2, scale=10.0, run #18] abm-gwn: 2.6791,2.7441
[V2, scale=10.0, run #19] abm-gwn: 2.6611,2.8431
[V2, scale=100.0, run #0] abm: nan,nan
[V2, scale=100.0, run #1] abm: nan,nan
[V2, scale=100.0, run #2] abm: nan,nan
[V2, scale=100.0, run #3] abm: nan,nan
[V2, scale=100.0, run #4] abm: nan,nan
[V2, scale=100.0, run #5] abm: nan,nan
[V2, scale=100.0, run #6] abm: nan,nan
[V2, scale=100.0, run #7] abm: nan,nan
[V2, scale=100.0, run #8] abm: nan,nan
[V2, scale=100.0, run #9] abm: nan,nan
[V2, scale=100.0, run #10] abm: nan,nan
[V2, scale=100.0, run #11] abm: nan,nan
[V2, scale=100.0, run #12] abm: nan,nan
[V2, scale=100.0, run #13] abm: nan,nan
[V2, scale=100.0, run #14] abm: nan,nan
[V2, scale=100.0, run #15] abm: nan,nan
[V2, scale=100.0, run #16] abm: nan,nan
[V2, scale=100.0, run #17] abm: nan,nan
[V2, scale=100.0, run #18] abm: nan,nan
[V2, scale=100.0, run #19] abm: nan,nan
[V3, scale=0.01, run #18] abm-gwn: nan,nan
[V2, scale=100.0, run #0] abm-gwn: 26.6510,26.8310
[V3, scale=0.01, run #19] abm-gwn: 0.0010,0.0012
[V2, scale=100.0, run #1] abm-gwn: 24.6810,25.4410
[V2, scale=100.0, run #2] abm-gwn: 32.1610,32.2610
[V2, scale=100.0, run #3] abm-gwn: 26.6210,29.6710
[V3, scale=0.1, run #0] abm: nan,nan
[V2, scale=100.0, run #4] abm-gwn: 28.4910,28.8710
[V2, scale=100.0, run #5] abm-gwn: 25.5510,26.7610
[V2, scale=100.0, run #6] abm-gwn: 26.6310,27.9110
[V2, scale=100.0, run #7] abm-gwn: 23.0910,24.4110
[V1, scale=0.01, run #12] abm-gwn: nan,nan
[V3, scale=0.1, run #1] abm: nan,nan
[V2, scale=100.0, run #8] abm-gwn: 26.4710,26.5610
[V2, scale=100.0, run #9] abm-gwn: 27.7610,30.3310
[V2, scale=100.0, run #10] abm-gwn: 26.7710,27.0210
[V2, scale=100.0, run #11] abm-gwn: 26.5210,28.7610
[V3, scale=0.1, run #2] abm: nan,nan
[V2, scale=100.0, run #12] abm-gwn: 26.6510,27.8710
[V2, scale=100.0, run #13] abm-gwn: 31.2210,31.4810
[V3, scale=1.0, run #10] abm-gwn: nan,nan
[V2, scale=100.0, run #14] abm-gwn: 24.1010,28.6010
[V3, scale=0.1, run #3] abm: nan,nan
[V2, scale=100.0, run #15] abm-gwn: 30.4510,30.5010
[V2, scale=100.0, run #16] abm-gwn: 27.8210,29.7010
[V2, scale=100.0, run #17] abm-gwn: 24.9610,43.7110
[V3, scale=0.1, run #4] abm: nan,nan
[V2, scale=100.0, run #18] abm-gwn: 26.7910,27.4410
[V1, scale=0.01, run #13] abm-gwn: nan,nan
[V2, scale=100.0, run #19] abm-gwn: 26.6110,28.4310
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/fromnumeric.py:3419: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:180: RuntimeWarning: invalid value encountered in true_divide
  ret = um.true_divide(
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:261: RuntimeWarning: Degrees of freedom <= 0 for slice
  ret = _var(a, axis=axis, dtype=dtype, out=out, ddof=ddof,
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:221: RuntimeWarning: invalid value encountered in true_divide
  arrmean = um.true_divide(arrmean, div, out=arrmean, casting='unsafe',
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:250: RuntimeWarning: invalid value encountered in true_divide
  ret = um.true_divide(
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:188: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:253: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
================================
data: V2 (extra dim = 1)
condition
{'npolys': [0, 2, 0, 1], 'cmp': ['==', '==', '==', '==']}
================================
================================
data: V2 (extra dim = 1)
condition
{'npolys': [0, 2, 0, 1], 'cmp': ['==', '==', '==', '==']}
================================
================================
data: V2 (extra dim = 1)
condition
{'npolys': [0, 2, 0, 1], 'cmp': ['==', '==', '==', '==']}
================================
new range: 0.0010501000000000002, 0.010000100000000001
new range: 0.0010001000000000003, 0.010000100000000001
new range: 0.0011301000000000004, 0.010000100000000001
new range: 0.0010801000000000003, 0.010000100000000001
new range: 0.0011201000000000004, 0.010000100000000001
new range: 0.0010401000000000004, 0.010000100000000001
new range: 0.0009701000000000002, 0.010000100000000001
new range: 0.0009801000000000002, 0.010000100000000001
new range: 0.0009801000000000002, 0.010000100000000001
new range: 0.0010601000000000002, 0.010000100000000001
new range: 0.0010101000000000003, 0.010000100000000001
new range: 0.0011101000000000004, 0.010000100000000001
new range: 0.0010001000000000003, 0.010000100000000001
new range: 0.0009501000000000002, 0.010000100000000001
new range: 0.0010101000000000003, 0.010000100000000001
new range: 0.0009801000000000002, 0.010000100000000001
new range: 0.0010601000000000002, 0.010000100000000001
new range: 0.0010901000000000003, 0.010000100000000001
new range: 0.0010201000000000003, 0.010000100000000001
new range: 0.0009601000000000002, 0.010000100000000001
new range: 0.0010501000000000002, 0.010000100000000001
new range: 0.0010001000000000003, 0.010000100000000001
new range: 0.0011301000000000004, 0.010000100000000001
new range: 0.0010801000000000003, 0.010000100000000001
new range: 0.0011201000000000004, 0.010000100000000001
new range: 0.0010401000000000004, 0.010000100000000001
new range: 0.0009701000000000002, 0.010000100000000001
new range: 0.0009801000000000002, 0.010000100000000001
new range: 0.0009801000000000002, 0.010000100000000001
new range: 0.0010601000000000002, 0.010000100000000001
new range: 0.0010101000000000003, 0.010000100000000001
new range: 0.0011101000000000004, 0.010000100000000001
new range: 0.0010001000000000003, 0.010000100000000001
new range: 0.0009501000000000002, 0.010000100000000001
new range: 0.0010101000000000003, 0.010000100000000001
new range: 0.0009801000000000002, 0.010000100000000001
new range: 0.0010601000000000002, 0.010000100000000001
new range: 0.0010901000000000003, 0.010000100000000001
new range: 0.0010201000000000003, 0.010000100000000001
new range: 0.0009601000000000002, 0.010000100000000001
new range: 0.010501, 0.100001
new range: 0.010001000000000001, 0.100001
new range: 0.011301, 0.100001
new range: 0.010801, 0.100001
new range: 0.011201000000000001, 0.100001
new range: 0.010401, 0.100001
new range: 0.009701, 0.100001
new range: 0.009801, 0.100001
new range: 0.009801, 0.100001
new range: 0.010601000000000001, 0.100001
new range: 0.010101, 0.100001
new range: 0.011101, 0.100001
new range: 0.010001000000000001, 0.100001
new range: 0.009501, 0.100001
new range: 0.010101, 0.100001
new range: 0.009801, 0.100001
new range: 0.010601000000000001, 0.100001
new range: 0.010901000000000001, 0.100001
new range: 0.010201, 0.100001
new range: 0.009601, 0.100001
new range: 0.010501, 0.100001
new range: 0.010001000000000001, 0.100001
new range: 0.011301, 0.100001
new range: 0.010801, 0.100001
new range: 0.011201000000000001, 0.100001
new range: 0.010401, 0.100001
new range: 0.009701, 0.100001
new range: 0.009801, 0.100001
new range: 0.009801, 0.100001
new range: 0.010601000000000001, 0.100001
new range: 0.010101, 0.100001
new range: 0.011101, 0.100001
new range: 0.010001000000000001, 0.100001
new range: 0.009501, 0.100001
new range: 0.010101, 0.100001
new range: 0.009801, 0.100001
new range: 0.010601000000000001, 0.100001
new range: 0.010901000000000001, 0.100001
new range: 0.010201, 0.100001
new range: 0.009601, 0.100001
new range: 0.10500999999999999, 1.0000099999999998
new range: 0.10001, 1.0000099999999998
new range: 0.11301, 1.0000099999999998
new range: 0.10801, 1.0000099999999998
new range: 0.11201, 1.0000099999999998
new range: 0.10400999999999999, 1.0000099999999998
new range: 0.09701, 1.0000099999999998
new range: 0.09801, 1.0000099999999998
new range: 0.09801, 1.0000099999999998
new range: 0.10601, 1.0000099999999998
new range: 0.10101, 1.0000099999999998
new range: 0.11101, 1.0000099999999998
new range: 0.10001, 1.0000099999999998
new range: 0.09501, 1.0000099999999998
new range: 0.10101, 1.0000099999999998
new range: 0.09801, 1.0000099999999998
new range: 0.10601, 1.0000099999999998
new range: 0.10901, 1.0000099999999998
new range: 0.10201, 1.0000099999999998
new range: 0.09601, 1.0000099999999998
new range: 0.10500999999999999, 1.0000099999999998
new range: 0.10001, 1.0000099999999998
new range: 0.11301, 1.0000099999999998
new range: 0.10801, 1.0000099999999998
new range: 0.11201, 1.0000099999999998
new range: 0.10400999999999999, 1.0000099999999998
new range: 0.09701, 1.0000099999999998
new range: 0.09801, 1.0000099999999998
new range: 0.09801, 1.0000099999999998
new range: 0.10601, 1.0000099999999998
new range: 0.10101, 1.0000099999999998
new range: 0.11101, 1.0000099999999998
new range: 0.10001, 1.0000099999999998
new range: 0.09501, 1.0000099999999998
new range: 0.10101, 1.0000099999999998
new range: 0.09801, 1.0000099999999998
new range: 0.10601, 1.0000099999999998
new range: 0.10901, 1.0000099999999998
new range: 0.10201, 1.0000099999999998
new range: 0.09601, 1.0000099999999998
new range: 1.0501, 10.0001
new range: 1.0001, 10.0001
new range: 1.1301, 10.0001
new range: 1.0801, 10.0001
new range: 1.1201, 10.0001
new range: 1.0401, 10.0001
new range: 0.9701, 10.0001
new range: 0.9801, 10.0001
new range: 0.9801, 10.0001
new range: 1.0601, 10.0001
new range: 1.0101, 10.0001
new range: 1.1101, 10.0001
new range: 1.0001, 10.0001
new range: 0.9501, 10.0001
new range: 1.0101, 10.0001
new range: 0.9801, 10.0001
new range: 1.0601, 10.0001
new range: 1.0901, 10.0001
new range: 1.0201, 10.0001
new range: 0.9601, 10.0001
new range: 1.0501, 10.0001
new range: 1.0001, 10.0001
new range: 1.1301, 10.0001
new range: 1.0801, 10.0001
new range: 1.1201, 10.0001
new range: 1.0401, 10.0001
new range: 0.9701, 10.0001
new range: 0.9801, 10.0001
new range: 0.9801, 10.0001
new range: 1.0601, 10.0001
new range: 1.0101, 10.0001
new range: 1.1101, 10.0001
new range: 1.0001, 10.0001
new range: 0.9501, 10.0001
new range: 1.0101, 10.0001
new range: 0.9801, 10.0001
new range: 1.0601, 10.0001
new range: 1.0901, 10.0001
new range: 1.0201, 10.0001
new range: 0.9601, 10.0001
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: 9.701, 10.001
new range: 9.801, 10.001
new range: 9.801, 10.001
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: 9.501000000000001, 10.001
new range: nan, nan
new range: 9.801, 10.001
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: 9.601, 10.001
new range: 10.501000000000001, 100.001
new range: 10.001000000000001, 100.001
new range: 11.301, 100.001
new range: 10.801, 100.001
new range: 11.201, 100.001
new range: 10.401, 100.001
new range: 9.701, 100.001
new range: 9.801, 100.001
new range: 9.801, 100.001
new range: 10.601, 100.001
new range: 10.101, 100.001
new range: 11.101, 100.001
new range: 10.001000000000001, 100.001
new range: 9.501000000000001, 100.001
new range: 10.101, 100.001
new range: 9.801, 100.001
new range: 10.601, 100.001
new range: 10.901, 100.001
new range: 10.201, 100.001
new range: 9.601, 100.001
    scale   method  ...                             coeff dist (std)   success rate
0    0.01      abm  ...                                    nan (nan)     0/20(0.0%)
0    0.01  abm-gwn  ...     0.513160451616866 (0.008669182846938437)  20/20(100.0%)
0    0.10      abm  ...                                    nan (nan)     0/20(0.0%)
0    0.10  abm-gwn  ...    0.46189310912362797 (0.01702526861659701)  20/20(100.0%)
0    1.00      abm  ...  0.023000190021680487 (0.002337879841433917)   16/20(80.0%)
0    1.00  abm-gwn  ...     0.1948138227623422 (0.03065583423198216)  20/20(100.0%)
0   10.00      abm  ...    0.3859721941476575 (0.006849254095205702)  20/20(100.0%)
0   10.00  abm-gwn  ...   0.40559408011230147 (0.004668852030265385)  20/20(100.0%)
0  100.00      abm  ...                                    nan (nan)     0/20(0.0%)
0  100.00  abm-gwn  ...    0.5811062482893258 (0.001274252321458195)  20/20(100.0%)

[10 rows x 7 columns]
[V3, scale=0.1, run #5] abm: nan,nan
[V3, scale=0.1, run #6] abm: nan,nan
[V3, scale=0.1, run #7] abm: nan,nan
[V3, scale=1.0, run #11] abm-gwn: nan,nan
[V1, scale=0.01, run #14] abm-gwn: nan,nan
[V3, scale=0.1, run #8] abm: nan,nan
[V3, scale=0.1, run #9] abm: nan,nan
[V3, scale=0.1, run #10] abm: nan,nan
[V3, scale=0.1, run #11] abm: nan,nan
[V1, scale=0.01, run #15] abm-gwn: nan,nan
[V3, scale=0.1, run #12] abm: nan,nan
[V3, scale=1.0, run #12] abm-gwn: nan,nan
[V3, scale=0.1, run #13] abm: nan,nan
[V3, scale=0.1, run #14] abm: nan,nan
[V1, scale=0.01, run #16] abm-gwn: nan,nan
[V3, scale=0.1, run #15] abm: nan,nan
[V3, scale=0.1, run #16] abm: nan,nan
[V3, scale=0.1, run #17] abm: nan,nan
[V3, scale=1.0, run #13] abm-gwn: nan,nan
[V1, scale=0.01, run #17] abm-gwn: nan,nan
[V3, scale=0.1, run #18] abm: nan,nan
[V3, scale=0.1, run #19] abm: nan,nan
[V3, scale=0.1, run #0] abm-gwn: 0.0094,0.0111
[V3, scale=0.1, run #1] abm-gwn: 0.0084,0.0098
[V1, scale=0.01, run #18] abm-gwn: nan,nan
[V3, scale=1.0, run #14] abm-gwn: nan,nan
[V2, scale=0.01, run #0] abm: nan,nan
[V2, scale=0.01, run #1] abm: nan,nan
[V2, scale=0.01, run #2] abm: nan,nan
[V2, scale=0.01, run #3] abm: nan,nan
[V2, scale=0.01, run #4] abm: nan,nan
[V2, scale=0.01, run #5] abm: nan,nan
[V2, scale=0.01, run #6] abm: nan,nan
[V2, scale=0.01, run #7] abm: nan,nan
[V1, scale=0.01, run #0] abm: nan,nan
[V2, scale=0.01, run #8] abm: nan,nan
[V2, scale=0.01, run #9] abm: nan,nan
[V2, scale=0.01, run #10] abm: nan,nan
[V2, scale=0.01, run #11] abm: nan,nan
[V2, scale=0.01, run #12] abm: nan,nan
[V2, scale=0.01, run #13] abm: nan,nan
[V2, scale=0.01, run #14] abm: nan,nan
[V2, scale=0.01, run #15] abm: nan,nan
[V2, scale=0.01, run #16] abm: nan,nan
[V2, scale=0.01, run #17] abm: nan,nan
[V1, scale=0.01, run #1] abm: nan,nan
[V2, scale=0.01, run #18] abm: nan,nan
[V2, scale=0.01, run #19] abm: nan,nan
[V2, scale=0.01, run #0] abm-gwn: nan,nan
[V3, scale=0.01, run #0] abm: nan,nan
[V2, scale=0.01, run #1] abm-gwn: nan,nan
[V1, scale=0.01, run #2] abm: nan,nan
[V2, scale=0.01, run #2] abm-gwn: nan,nan
[V2, scale=0.01, run #3] abm-gwn: nan,nan
[V2, scale=0.01, run #4] abm-gwn: nan,nan
[V2, scale=0.01, run #5] abm-gwn: nan,nan
[V2, scale=0.01, run #6] abm-gwn: nan,nan
[V1, scale=0.01, run #3] abm: nan,nan
[V2, scale=0.01, run #7] abm-gwn: nan,nan
[V2, scale=0.01, run #8] abm-gwn: 0.0095,0.0100
[V1, scale=0.01, run #4] abm: nan,nan
[V2, scale=0.01, run #9] abm-gwn: nan,nan
[V2, scale=0.01, run #10] abm-gwn: nan,nan
[V3, scale=0.01, run #1] abm: nan,nan
[V2, scale=0.01, run #11] abm-gwn: nan,nan
[V2, scale=0.01, run #12] abm-gwn: nan,nan
[V1, scale=0.01, run #5] abm: nan,nan
[V2, scale=0.01, run #13] abm-gwn: nan,nan
[V2, scale=0.01, run #14] abm-gwn: nan,nan
[V2, scale=0.01, run #15] abm-gwn: nan,nan
[V2, scale=0.01, run #16] abm-gwn: nan,nan
[V2, scale=0.01, run #17] abm-gwn: nan,nan
[V1, scale=0.01, run #6] abm: nan,nan
[V2, scale=0.01, run #18] abm-gwn: 0.0091,0.0100
[V1, scale=0.01, run #19] abm-gwn: nan,nan
[V3, scale=0.01, run #2] abm: nan,nan
[V1, scale=0.01, run #7] abm: nan,nan
[V2, scale=0.01, run #19] abm-gwn: nan,nan
[V2, scale=0.1, run #0] abm: nan,nan
[V2, scale=0.1, run #1] abm: nan,nan
[V2, scale=0.1, run #2] abm: nan,nan
[V2, scale=0.1, run #3] abm: nan,nan
[V2, scale=0.1, run #4] abm: nan,nan
[V2, scale=0.1, run #5] abm: nan,nan
[V2, scale=0.1, run #6] abm: nan,nan
[V1, scale=0.01, run #8] abm: nan,nan
[V2, scale=0.1, run #7] abm: nan,nan
[V2, scale=0.1, run #8] abm: nan,nan
[V2, scale=0.1, run #9] abm: nan,nan
[V2, scale=0.1, run #10] abm: nan,nan
[V1, scale=0.1, run #0] abm: nan,nan
[V2, scale=0.1, run #11] abm: nan,nan
[V2, scale=0.1, run #12] abm: nan,nan
[V2, scale=0.1, run #13] abm: nan,nan
[V2, scale=0.1, run #14] abm: nan,nan
[V2, scale=0.1, run #15] abm: nan,nan
[V2, scale=0.1, run #16] abm: nan,nan
[V2, scale=0.1, run #17] abm: nan,nan
[V1, scale=0.01, run #9] abm: nan,nan
[V2, scale=0.1, run #18] abm: nan,nan
[V3, scale=0.01, run #3] abm: nan,nan
[V2, scale=0.1, run #19] abm: nan,nan
[V2, scale=0.1, run #0] abm-gwn: nan,nan
[V2, scale=0.1, run #1] abm-gwn: nan,nan
[V1, scale=0.01, run #10] abm: nan,nan
[V1, scale=0.1, run #1] abm: nan,nan
[V2, scale=0.1, run #2] abm-gwn: nan,nan
[V2, scale=0.1, run #3] abm-gwn: nan,nan
[V2, scale=0.1, run #4] abm-gwn: nan,nan
[V2, scale=0.1, run #5] abm-gwn: nan,nan
[V2, scale=0.1, run #6] abm-gwn: nan,nan
[V1, scale=0.01, run #11] abm: nan,nan
[V3, scale=0.01, run #4] abm: nan,nan
[V2, scale=0.1, run #7] abm-gwn: nan,nan
[V1, scale=0.1, run #2] abm: nan,nan
[V1, scale=0.01, run #12] abm: nan,nan
[V2, scale=0.1, run #8] abm-gwn: 0.0948,0.1000
[V2, scale=0.1, run #9] abm-gwn: nan,nan
[V2, scale=0.1, run #10] abm-gwn: nan,nan
[V2, scale=0.1, run #11] abm-gwn: nan,nan
[V1, scale=0.01, run #13] abm: nan,nan
[V2, scale=0.1, run #12] abm-gwn: nan,nan
[V2, scale=0.1, run #13] abm-gwn: nan,nan
[V2, scale=0.1, run #14] abm-gwn: nan,nan
[V2, scale=0.1, run #15] abm-gwn: nan,nan
[V1, scale=0.1, run #3] abm: nan,nan
[V2, scale=0.1, run #16] abm-gwn: nan,nan
[V1, scale=0.01, run #14] abm: nan,nan
[V2, scale=0.1, run #17] abm-gwn: nan,nan
[V3, scale=0.01, run #5] abm: nan,nan
[V2, scale=0.1, run #18] abm-gwn: 0.0910,0.1000
[V1, scale=0.01, run #15] abm: nan,nan
[V2, scale=0.1, run #19] abm-gwn: nan,nan
[V2, scale=1.0, run #0] abm: nan,nan
[V1, scale=0.1, run #4] abm: nan,nan
[V2, scale=1.0, run #1] abm: nan,nan
[V2, scale=1.0, run #2] abm: nan,nan
[V2, scale=1.0, run #3] abm: nan,nan
[V2, scale=1.0, run #4] abm: nan,nan
[V1, scale=0.01, run #16] abm: nan,nan
[V2, scale=1.0, run #5] abm: nan,nan
[V2, scale=1.0, run #6] abm: nan,nan
[V2, scale=1.0, run #7] abm: nan,nan
[V3, scale=0.01, run #6] abm: nan,nan
[V2, scale=1.0, run #8] abm: nan,nan
[V2, scale=1.0, run #9] abm: nan,nan
[V2, scale=1.0, run #10] abm: nan,nan
[V3, scale=0.1, run #2] abm-gwn: nan,nan
[V1, scale=0.01, run #17] abm: nan,nan
[V2, scale=1.0, run #11] abm: nan,nan
[V3, scale=0.1, run #3] abm-gwn: 0.0098,0.0100
[V1, scale=0.1, run #5] abm: nan,nan
[V2, scale=1.0, run #12] abm: nan,nan
[V2, scale=1.0, run #13] abm: nan,nan
[V2, scale=1.0, run #14] abm: nan,nan
[V2, scale=1.0, run #15] abm: nan,nan
[V2, scale=1.0, run #16] abm: nan,nan
[V3, scale=0.1, run #4] abm-gwn: 0.0093,0.0116
[V2, scale=1.0, run #17] abm: nan,nan
[V1, scale=0.01, run #18] abm: nan,nan
[V3, scale=1.0, run #15] abm-gwn: nan,nan
[V3, scale=0.1, run #5] abm-gwn: 0.0101,0.0101
[V2, scale=1.0, run #18] abm: nan,nan
[V2, scale=1.0, run #19] abm: nan,nan
[V2, scale=1.0, run #0] abm-gwn: nan,nan
[V2, scale=1.0, run #1] abm-gwn: nan,nan
[V1, scale=0.1, run #6] abm: nan,nan
[V1, scale=0.01, run #19] abm: nan,nan
[V3, scale=0.01, run #7] abm: nan,nan
[V2, scale=1.0, run #2] abm-gwn: nan,nan
[V2, scale=1.0, run #3] abm-gwn: nan,nan
[V2, scale=1.0, run #4] abm-gwn: nan,nan
[V2, scale=1.0, run #5] abm-gwn: nan,nan
[V2, scale=1.0, run #6] abm-gwn: nan,nan
[V1, scale=0.1, run #7] abm: nan,nan
[V2, scale=1.0, run #7] abm-gwn: nan,nan
[V2, scale=1.0, run #8] abm-gwn: 0.9475,0.9999
[V2, scale=1.0, run #9] abm-gwn: nan,nan
[V2, scale=1.0, run #10] abm-gwn: nan,nan
[V2, scale=1.0, run #11] abm-gwn: nan,nan
[V3, scale=0.01, run #8] abm: nan,nan
[V2, scale=1.0, run #12] abm-gwn: nan,nan
[V2, scale=1.0, run #13] abm-gwn: nan,nan
[V1, scale=0.1, run #8] abm: nan,nan
[V2, scale=1.0, run #14] abm-gwn: nan,nan
[V2, scale=1.0, run #15] abm-gwn: nan,nan
[V2, scale=1.0, run #16] abm-gwn: nan,nan
[V2, scale=1.0, run #17] abm-gwn: nan,nan
[V2, scale=1.0, run #18] abm-gwn: 0.9102,0.9999
[V1, scale=0.1, run #9] abm: nan,nan
[V3, scale=0.01, run #9] abm: nan,nan
[V2, scale=1.0, run #19] abm-gwn: nan,nan
[V2, scale=10.0, run #0] abm: nan,nan
[V2, scale=10.0, run #1] abm: nan,nan
[V2, scale=10.0, run #2] abm: nan,nan
[V2, scale=10.0, run #3] abm: nan,nan
[V2, scale=10.0, run #4] abm: nan,nan
[V2, scale=10.0, run #5] abm: nan,nan
[V2, scale=10.0, run #6] abm: nan,nan
[V2, scale=10.0, run #7] abm: nan,nan
[V2, scale=10.0, run #8] abm: nan,nan
[V2, scale=10.0, run #9] abm: nan,nan
[V2, scale=10.0, run #10] abm: nan,nan
[V2, scale=10.0, run #11] abm: nan,nan
[V1, scale=0.1, run #10] abm: nan,nan
[V2, scale=10.0, run #12] abm: nan,nan
[V2, scale=10.0, run #13] abm: nan,nan
[V2, scale=10.0, run #14] abm: nan,nan
[V2, scale=10.0, run #15] abm: nan,nan
[V2, scale=10.0, run #16] abm: nan,nan
[V2, scale=10.0, run #17] abm: nan,nan
[V2, scale=10.0, run #18] abm: nan,nan
[V3, scale=0.01, run #10] abm: nan,nan
[V2, scale=10.0, run #19] abm: nan,nan
[V2, scale=10.0, run #0] abm-gwn: nan,nan
[V2, scale=10.0, run #1] abm-gwn: nan,nan
[V1, scale=0.1, run #11] abm: nan,nan
[V2, scale=10.0, run #2] abm-gwn: nan,nan
[V2, scale=10.0, run #3] abm-gwn: nan,nan
[V2, scale=10.0, run #4] abm-gwn: nan,nan
[V2, scale=10.0, run #5] abm-gwn: nan,nan
[V2, scale=10.0, run #6] abm-gwn: nan,nan
[V2, scale=10.0, run #7] abm-gwn: nan,nan
[V3, scale=0.01, run #11] abm: nan,nan
[V1, scale=0.1, run #12] abm: nan,nan
[V2, scale=10.0, run #8] abm-gwn: 9.4751,9.9991
[V2, scale=10.0, run #9] abm-gwn: nan,nan
[V2, scale=10.0, run #10] abm-gwn: nan,nan
[V1, scale=0.01, run #0] abm-gwn: nan,nan
[V2, scale=10.0, run #11] abm-gwn: nan,nan
[V2, scale=10.0, run #12] abm-gwn: nan,nan
[V2, scale=10.0, run #13] abm-gwn: nan,nan
[V2, scale=10.0, run #14] abm-gwn: nan,nan
[V2, scale=10.0, run #15] abm-gwn: nan,nan
[V1, scale=0.1, run #13] abm: nan,nan
[V2, scale=10.0, run #16] abm-gwn: nan,nan
[V2, scale=10.0, run #17] abm-gwn: nan,nan
[V3, scale=0.01, run #12] abm: nan,nan
[V2, scale=10.0, run #18] abm-gwn: 9.1021,10.0001
[V2, scale=10.0, run #19] abm-gwn: nan,nan
[V2, scale=100.0, run #0] abm: nan,nan
[V2, scale=100.0, run #1] abm: nan,nan
[V2, scale=100.0, run #2] abm: nan,nan
[V1, scale=0.1, run #14] abm: nan,nan
[V2, scale=100.0, run #3] abm: nan,nan
[V2, scale=100.0, run #4] abm: nan,nan
[V2, scale=100.0, run #5] abm: nan,nan
[V2, scale=100.0, run #6] abm: nan,nan
[V2, scale=100.0, run #7] abm: nan,nan
[V2, scale=100.0, run #8] abm: nan,nan
[V2, scale=100.0, run #9] abm: nan,nan
[V2, scale=100.0, run #10] abm: nan,nan
[V2, scale=100.0, run #11] abm: nan,nan
[V2, scale=100.0, run #12] abm: nan,nan
[V2, scale=100.0, run #13] abm: nan,nan
[V2, scale=100.0, run #14] abm: nan,nan
[V2, scale=100.0, run #15] abm: nan,nan
[V2, scale=100.0, run #16] abm: nan,nan
[V2, scale=100.0, run #17] abm: nan,nan
[V2, scale=100.0, run #18] abm: nan,nan
[V2, scale=100.0, run #19] abm: nan,nan
[V2, scale=100.0, run #0] abm-gwn: nan,nan
[V2, scale=100.0, run #1] abm-gwn: nan,nan
[V3, scale=0.01, run #13] abm: nan,nan
[V1, scale=0.1, run #15] abm: nan,nan
[V2, scale=100.0, run #2] abm-gwn: nan,nan
[V2, scale=100.0, run #3] abm-gwn: nan,nan
[V2, scale=100.0, run #4] abm-gwn: nan,nan
[V2, scale=100.0, run #5] abm-gwn: nan,nan
[V2, scale=100.0, run #6] abm-gwn: nan,nan
[V2, scale=100.0, run #7] abm-gwn: nan,nan
[V1, scale=0.1, run #16] abm: nan,nan
[V2, scale=100.0, run #8] abm-gwn: 94.7510,99.9910
[V2, scale=100.0, run #9] abm-gwn: nan,nan
[V2, scale=100.0, run #10] abm-gwn: nan,nan
[V3, scale=0.01, run #14] abm: nan,nan
[V2, scale=100.0, run #11] abm-gwn: nan,nan
[V2, scale=100.0, run #12] abm-gwn: nan,nan
[V2, scale=100.0, run #13] abm-gwn: nan,nan
[V2, scale=100.0, run #14] abm-gwn: nan,nan
[V2, scale=100.0, run #15] abm-gwn: nan,nan
[V1, scale=0.1, run #17] abm: nan,nan
[V2, scale=100.0, run #16] abm-gwn: nan,nan
[V2, scale=100.0, run #17] abm-gwn: nan,nan
[V2, scale=100.0, run #18] abm-gwn: 91.0210,99.9910
[V3, scale=0.01, run #15] abm: nan,nan
[V2, scale=100.0, run #19] abm-gwn: nan,nan
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/fromnumeric.py:3419: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:180: RuntimeWarning: invalid value encountered in true_divide
  ret = um.true_divide(
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:261: RuntimeWarning: Degrees of freedom <= 0 for slice
  ret = _var(a, axis=axis, dtype=dtype, out=out, ddof=ddof,
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:221: RuntimeWarning: invalid value encountered in true_divide
  arrmean = um.true_divide(arrmean, div, out=arrmean, casting='unsafe',
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:250: RuntimeWarning: invalid value encountered in true_divide
  ret = um.true_divide(
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:188: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:253: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
================================
data: V2 (extra dim = 0)
condition
{'npolys': [0, 1, 0, 1], 'cmp': ['==', '==', '==', '==']}
================================
================================
data: V2 (extra dim = 0)
condition
{'npolys': [0, 1, 0, 1], 'cmp': ['==', '==', '==', '==']}
================================
================================
data: V2 (extra dim = 0)
condition
{'npolys': [0, 1, 0, 1], 'cmp': ['==', '==', '==', '==']}
================================
new range: nan, nan
new range: 0.009530100000000001, 0.010000100000000001
new range: 0.008850100000000001, 0.010000100000000001
new range: nan, nan
new range: 0.009220100000000002, 0.010000100000000001
new range: 0.009780100000000002, 0.010000100000000001
new range: nan, nan
new range: 0.008170100000000001, 0.010000100000000001
new range: 0.009470100000000002, 0.010000100000000001
new range: nan, nan
new range: nan, nan
new range: 0.009470100000000002, 0.010000100000000001
new range: 0.008770100000000001, 0.010000100000000001
new range: nan, nan
new range: nan, nan
new range: 0.009760100000000002, 0.010000100000000001
new range: 0.009270100000000002, 0.010000100000000001
new range: 0.009470100000000002, 0.010000100000000001
new range: 0.009100100000000002, 0.010000100000000001
new range: 0.008560100000000003, 0.010000100000000001
new range: nan, nan
new range: 0.009530100000000001, 0.010000100000000001
new range: 0.008850100000000001, 0.010000100000000001
new range: nan, nan
new range: 0.009220100000000002, 0.010000100000000001
new range: 0.009780100000000002, 0.010000100000000001
new range: nan, nan
new range: 0.008170100000000001, 0.010000100000000001
new range: 0.009470100000000002, 0.010000100000000001
new range: nan, nan
new range: nan, nan
new range: 0.009470100000000002, 0.010000100000000001
new range: 0.008770100000000001, 0.010000100000000001
new range: nan, nan
new range: nan, nan
new range: 0.009760100000000002, 0.010000100000000001
new range: 0.009270100000000002, 0.010000100000000001
new range: 0.009470100000000002, 0.010000100000000001
new range: 0.009100100000000002, 0.010000100000000001
new range: 0.008560100000000003, 0.010000100000000001
new range: nan, nan
new range: 0.095301, 0.100001
new range: 0.088501, 0.100001
new range: nan, nan
new range: 0.092201, 0.100001
new range: 0.097801, 0.100001
new range: nan, nan
new range: 0.081701, 0.100001
new range: 0.09470100000000001, 0.100001
new range: nan, nan
new range: nan, nan
new range: 0.09470100000000001, 0.100001
new range: 0.087701, 0.100001
new range: nan, nan
new range: nan, nan
new range: 0.09760100000000001, 0.100001
new range: 0.092701, 0.100001
new range: 0.09470100000000001, 0.100001
new range: 0.091001, 0.100001
new range: 0.085601, 0.100001
new range: nan, nan
new range: 0.095301, 0.100001
new range: 0.088501, 0.100001
new range: nan, nan
new range: 0.092201, 0.100001
new range: 0.097801, 0.100001
new range: nan, nan
new range: 0.081701, 0.100001
new range: 0.09470100000000001, 0.100001
new range: nan, nan
new range: nan, nan
new range: 0.09470100000000001, 0.100001
new range: 0.087701, 0.100001
new range: nan, nan
new range: nan, nan
new range: 0.09760100000000001, 0.100001
new range: 0.092701, 0.100001
new range: 0.09470100000000001, 0.100001
new range: 0.091001, 0.100001
new range: 0.085601, 0.100001
new range: nan, nan
new range: 0.95301, 1.0000099999999998
new range: 0.88501, 1.0000099999999998
new range: nan, nan
new range: 0.92201, 1.0000099999999998
new range: 0.9780099999999999, 1.0000099999999998
new range: nan, nan
new range: 0.81701, 1.0000099999999998
new range: 0.94701, 1.0000099999999998
new range: nan, nan
new range: nan, nan
new range: 0.94701, 1.0000099999999998
new range: 0.87701, 1.0000099999999998
new range: nan, nan
new range: nan, nan
new range: 0.9760099999999999, 1.0000099999999998
new range: 0.92701, 1.0000099999999998
new range: 0.94701, 1.0000099999999998
new range: 0.91001, 1.0000099999999998
new range: 0.8560099999999999, 1.0000099999999998
new range: nan, nan
new range: 0.95301, 1.0000099999999998
new range: 0.88501, 1.0000099999999998
new range: nan, nan
new range: 0.92201, 1.0000099999999998
new range: 0.9780099999999999, 1.0000099999999998
new range: nan, nan
new range: 0.81701, 1.0000099999999998
new range: 0.94701, 1.0000099999999998
new range: nan, nan
new range: nan, nan
new range: 0.94701, 1.0000099999999998
new range: 0.87701, 1.0000099999999998
new range: nan, nan
new range: nan, nan
new range: 0.9760099999999999, 1.0000099999999998
new range: 0.92701, 1.0000099999999998
new range: 0.94701, 1.0000099999999998
new range: 0.91001, 1.0000099999999998
new range: 0.8560099999999999, 1.0000099999999998
new range: nan, nan
new range: 9.530100000000001, 10.0001
new range: 8.8501, 10.0001
new range: nan, nan
new range: 9.2201, 10.0001
new range: 9.780100000000001, 10.0001
new range: nan, nan
new range: 8.1701, 10.0001
new range: 9.4701, 10.0001
new range: nan, nan
new range: nan, nan
new range: 9.4701, 10.0001
new range: 8.7701, 10.0001
new range: nan, nan
new range: nan, nan
new range: 9.7601, 10.0001
new range: 9.2701, 10.0001
new range: 9.4701, 10.0001
new range: 9.1001, 10.0001
new range: 8.5601, 10.0001
new range: nan, nan
new range: 9.530100000000001, 10.0001
new range: 8.8501, 10.0001
new range: nan, nan
new range: 9.2201, 10.0001
new range: 9.780100000000001, 10.0001
new range: nan, nan
new range: 8.1701, 10.0001
new range: 9.4701, 10.0001
new range: nan, nan
new range: nan, nan
new range: 9.4701, 10.0001
new range: 8.7701, 10.0001
new range: nan, nan
new range: nan, nan
new range: 9.7601, 10.0001
new range: 9.2701, 10.0001
new range: 9.4701, 10.0001
new range: 9.1001, 10.0001
new range: 8.5601, 10.0001
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: 95.30100000000002, 100.001
new range: 88.50100000000002, 100.001
new range: nan, nan
new range: 92.20100000000002, 100.001
new range: 97.80100000000002, 100.001
new range: nan, nan
new range: 81.70100000000002, 100.001
new range: 94.70100000000002, 100.001
new range: nan, nan
new range: nan, nan
new range: 94.70100000000002, 100.001
new range: 87.70100000000002, 100.001
new range: nan, nan
new range: nan, nan
new range: 97.60100000000001, 100.001
new range: 92.70100000000002, 100.001
new range: 94.70100000000002, 100.001
new range: 91.00100000000002, 100.001
new range: 85.60100000000001, 100.001
    scale   method  ...                            coeff dist (std)  success rate
0    0.01      abm  ...                                   nan (nan)    0/20(0.0%)
0    0.01  abm-gwn  ...   0.7054444108818555 (0.007032842163445241)   2/20(10.0%)
0    0.10      abm  ...                                   nan (nan)    0/20(0.0%)
0    0.10  abm-gwn  ...  0.7017469047770387 (0.0028264354718248175)   2/20(10.0%)
0    1.00      abm  ...                                   nan (nan)    0/20(0.0%)
0    1.00  abm-gwn  ...    0.6575205794613335 (0.04570872888950317)   2/20(10.0%)
0   10.00      abm  ...                                   nan (nan)    0/20(0.0%)
0   10.00  abm-gwn  ...    0.6575745614855852 (0.04796514420898185)   2/20(10.0%)
0  100.00      abm  ...                                   nan (nan)    0/20(0.0%)
0  100.00  abm-gwn  ...   0.6925868176826152 (0.014525718235781082)   2/20(10.0%)

[10 rows x 7 columns]
[V1, scale=0.1, run #18] abm: nan,nan
[V3, scale=1.0, run #16] abm-gwn: nan,nan
[V1, scale=0.01, run #1] abm-gwn: nan,nan
[V1, scale=0.1, run #19] abm: nan,nan
[V3, scale=0.01, run #16] abm: nan,nan
[V3, scale=0.01, run #17] abm: nan,nan
[V3, scale=0.01, run #18] abm: nan,nan
[V3, scale=0.01, run #19] abm: nan,nan
[V3, scale=0.1, run #6] abm-gwn: nan,nan
[V3, scale=0.1, run #7] abm-gwn: 0.0085,0.0094
[V3, scale=0.1, run #8] abm-gwn: 0.0093,0.0101
[V3, scale=0.1, run #9] abm-gwn: 0.0084,0.0096
[V1, scale=0.01, run #2] abm-gwn: nan,nan
[V3, scale=0.1, run #10] abm-gwn: 0.0101,0.0113
[V3, scale=0.1, run #11] abm-gwn: 0.0096,0.0097
[V3, scale=0.1, run #12] abm-gwn: 0.0091,0.0103
[V3, scale=0.1, run #13] abm-gwn: 0.0100,0.0103
[V3, scale=0.1, run #14] abm-gwn: 0.0100,0.0101
[V3, scale=0.1, run #15] abm-gwn: 0.0093,0.0101
[V3, scale=0.01, run #0] abm-gwn: 0.0014,0.0023
[V3, scale=0.01, run #1] abm-gwn: 0.0018,0.0022
[V1, scale=0.1, run #0] abm-gwn: nan,nan
[V3, scale=0.01, run #2] abm-gwn: 0.0020,0.0023
[V3, scale=1.0, run #17] abm-gwn: nan,nan
[V1, scale=0.01, run #3] abm-gwn: nan,nan
[V3, scale=0.01, run #3] abm-gwn: 0.0013,0.0017
[V3, scale=0.01, run #4] abm-gwn: 0.0015,0.0017
[V3, scale=0.01, run #5] abm-gwn: 0.0016,0.0021
[V1, scale=0.01, run #4] abm-gwn: nan,nan
[V3, scale=0.01, run #6] abm-gwn: 0.0014,0.0019
[V1, scale=0.1, run #1] abm-gwn: nan,nan
[V3, scale=0.01, run #7] abm-gwn: 0.0018,0.0020
[V3, scale=0.01, run #8] abm-gwn: 0.0017,0.0018
[V3, scale=1.0, run #18] abm-gwn: nan,nan
[V3, scale=0.01, run #9] abm-gwn: 0.0019,0.0021
[V1, scale=0.01, run #5] abm-gwn: nan,nan
[V3, scale=0.1, run #16] abm-gwn: nan,nan
[V3, scale=0.1, run #17] abm-gwn: 0.0092,0.0092
[V3, scale=0.01, run #10] abm-gwn: 0.0016,0.0019
[V3, scale=0.01, run #11] abm-gwn: 0.0018,0.0018
[V1, scale=0.1, run #2] abm-gwn: nan,nan
[V3, scale=0.01, run #12] abm-gwn: 0.0012,0.0013
[V3, scale=0.01, run #13] abm-gwn: 0.0013,0.0018
[V1, scale=0.01, run #6] abm-gwn: nan,nan
[V3, scale=0.01, run #14] abm-gwn: 0.0015,0.0015
[V3, scale=1.0, run #19] abm-gwn: nan,nan
[V3, scale=0.01, run #15] abm-gwn: 0.0017,0.0017
[V3, scale=0.01, run #16] abm-gwn: 0.0017,0.0018
[V1, scale=0.01, run #7] abm-gwn: nan,nan
[V3, scale=0.01, run #17] abm-gwn: 0.0022,0.0023
[V1, scale=0.1, run #3] abm-gwn: nan,nan
[V3, scale=10.0, run #0] abm: nan,nan
[V3, scale=0.01, run #18] abm-gwn: 0.0020,0.0020
[V3, scale=0.01, run #19] abm-gwn: 0.0015,0.0016
[V3, scale=10.0, run #1] abm: nan,nan
[V1, scale=0.01, run #8] abm-gwn: nan,nan
[V3, scale=0.1, run #0] abm: nan,nan
[V3, scale=0.1, run #18] abm-gwn: nan,nan
[V3, scale=0.1, run #19] abm-gwn: 0.0104,0.0121
[V3, scale=0.1, run #1] abm: nan,nan
[V3, scale=10.0, run #2] abm: nan,nan
[V1, scale=0.1, run #4] abm-gwn: nan,nan
[V3, scale=0.1, run #2] abm: nan,nan
[V1, scale=0.01, run #9] abm-gwn: nan,nan
[V3, scale=0.1, run #3] abm: nan,nan
[V3, scale=10.0, run #3] abm: nan,nan
[V3, scale=0.1, run #4] abm: nan,nan
[V3, scale=1.0, run #0] abm: nan,nan
[V1, scale=0.01, run #10] abm-gwn: nan,nan
[V3, scale=0.1, run #5] abm: nan,nan
[V3, scale=10.0, run #4] abm: nan,nan
[V1, scale=0.1, run #5] abm-gwn: nan,nan
[V3, scale=0.1, run #6] abm: nan,nan
[V3, scale=10.0, run #5] abm: nan,nan
[V3, scale=0.1, run #7] abm: nan,nan
[V3, scale=0.1, run #8] abm: 0.0000,0.0000
[V1, scale=0.01, run #11] abm-gwn: nan,nan
[V3, scale=0.1, run #9] abm: nan,nan
[V3, scale=1.0, run #1] abm: nan,nan
[V3, scale=10.0, run #6] abm: nan,nan
[V3, scale=0.1, run #10] abm: nan,nan
[V1, scale=0.1, run #6] abm-gwn: nan,nan
[V1, scale=0.01, run #12] abm-gwn: nan,nan
[V3, scale=0.1, run #11] abm: nan,nan
[V3, scale=10.0, run #7] abm: nan,nan
[V3, scale=0.1, run #12] abm: nan,nan
[V3, scale=0.1, run #13] abm: nan,nan
[V1, scale=0.01, run #13] abm-gwn: nan,nan
[V3, scale=1.0, run #2] abm: nan,nan
[V1, scale=0.1, run #7] abm-gwn: nan,nan
[V3, scale=10.0, run #8] abm: nan,nan
[V3, scale=0.1, run #14] abm: nan,nan
[V3, scale=0.1, run #15] abm: nan,nan
[V1, scale=0.01, run #14] abm-gwn: nan,nan
[V3, scale=10.0, run #9] abm: nan,nan
[V3, scale=0.1, run #16] abm: nan,nan
[V3, scale=0.1, run #17] abm: nan,nan
[V1, scale=0.1, run #8] abm-gwn: nan,nan
[V3, scale=10.0, run #10] abm: nan,nan
[V3, scale=1.0, run #3] abm: nan,nan
[V3, scale=0.1, run #18] abm: nan,nan
[V1, scale=0.01, run #15] abm-gwn: nan,nan
[V3, scale=0.1, run #19] abm: nan,nan
[V3, scale=10.0, run #11] abm: nan,nan
[V3, scale=0.1, run #0] abm-gwn: 0.0137,0.0233
[V1, scale=0.01, run #16] abm-gwn: nan,nan
[V3, scale=0.1, run #1] abm-gwn: 0.0180,0.0218
[V3, scale=10.0, run #12] abm: nan,nan
[V1, scale=0.1, run #9] abm-gwn: nan,nan
[V3, scale=0.1, run #2] abm-gwn: 0.0195,0.0228
[V3, scale=1.0, run #4] abm: nan,nan
[V3, scale=0.1, run #3] abm-gwn: 0.0133,0.0173
[V3, scale=10.0, run #13] abm: nan,nan
[V3, scale=0.1, run #4] abm-gwn: 0.0148,0.0170
[V1, scale=0.01, run #17] abm-gwn: nan,nan
[V3, scale=0.1, run #5] abm-gwn: 0.0155,0.0206
[V3, scale=10.0, run #14] abm: nan,nan
[V3, scale=0.1, run #6] abm-gwn: 0.0140,0.0194
[V3, scale=0.1, run #7] abm-gwn: 0.0181,0.0202
[V1, scale=0.1, run #10] abm-gwn: nan,nan
[V1, scale=0.01, run #18] abm-gwn: nan,nan
[V3, scale=0.1, run #8] abm-gwn: 0.0168,0.0182
[V3, scale=1.0, run #5] abm: nan,nan
[V3, scale=10.0, run #15] abm: nan,nan
[V3, scale=0.1, run #9] abm-gwn: 0.0190,0.0211
[V3, scale=0.1, run #10] abm-gwn: 0.0157,0.0187
[V1, scale=0.01, run #19] abm-gwn: nan,nan
[V3, scale=0.1, run #11] abm-gwn: 0.0176,0.0181
[V3, scale=10.0, run #16] abm: nan,nan
[V1, scale=0.1, run #0] abm: nan,nan
[V1, scale=0.1, run #1] abm: nan,nan
[V3, scale=0.1, run #12] abm-gwn: 0.0118,0.0133
[V1, scale=0.1, run #2] abm: nan,nan
[V1, scale=0.1, run #11] abm-gwn: nan,nan
[V3, scale=0.1, run #13] abm-gwn: 0.0134,0.0177
[V1, scale=0.1, run #3] abm: nan,nan
[V1, scale=0.1, run #4] abm: nan,nan
[V3, scale=0.1, run #14] abm-gwn: 0.0152,0.0155
[V3, scale=10.0, run #17] abm: nan,nan
[V1, scale=0.1, run #5] abm: nan,nan
[V3, scale=1.0, run #6] abm: nan,nan
[V1, scale=0.1, run #6] abm: nan,nan
[V3, scale=0.1, run #15] abm-gwn: 0.0169,0.0171
[V1, scale=0.1, run #7] abm: nan,nan
[V1, scale=0.1, run #8] abm: nan,nan
[V3, scale=0.1, run #16] abm-gwn: 0.0168,0.0181
[V1, scale=0.1, run #9] abm: nan,nan
[V1, scale=0.1, run #10] abm: nan,nan
[V3, scale=10.0, run #18] abm: nan,nan
[V3, scale=0.1, run #17] abm-gwn: 0.0216,0.0231
[V1, scale=0.1, run #11] abm: nan,nan
[V1, scale=0.1, run #12] abm: nan,nan
[V1, scale=0.1, run #12] abm-gwn: nan,nan
[V3, scale=0.1, run #18] abm-gwn: 0.0195,0.0200
[V1, scale=0.1, run #13] abm: nan,nan
[V1, scale=0.1, run #14] abm: nan,nan
[V3, scale=0.1, run #19] abm-gwn: 0.0154,0.0164
[V3, scale=10.0, run #19] abm: nan,nan
[V3, scale=1.0, run #0] abm: 0.0518,0.0853
[V1, scale=0.1, run #15] abm: nan,nan
[V3, scale=1.0, run #1] abm: 0.0725,0.0812
[V3, scale=1.0, run #2] abm: 0.0757,0.0834
[V3, scale=1.0, run #3] abm: 0.0439,0.0563
[V3, scale=1.0, run #4] abm: 0.0482,0.0540
[V3, scale=1.0, run #5] abm: 0.0501,0.0648
[V3, scale=1.0, run #6] abm: 0.0505,0.0648
[V1, scale=0.1, run #16] abm: nan,nan
[V3, scale=1.0, run #7] abm: 0.0669,0.0692
[V3, scale=1.0, run #8] abm: 0.0621,0.0654
[V3, scale=1.0, run #9] abm: 0.0702,0.0759
[V3, scale=1.0, run #10] abm: 0.0540,0.0661
[V3, scale=1.0, run #7] abm: nan,nan
[V3, scale=1.0, run #11] abm: 0.0652,0.0664
[V3, scale=1.0, run #12] abm: 0.0427,0.0469
[V3, scale=1.0, run #13] abm: 0.0518,0.0642
[V1, scale=0.1, run #17] abm: nan,nan
[V3, scale=1.0, run #14] abm: 0.0601,0.0622
[V3, scale=1.0, run #15] abm: 0.0600,0.0607
[V3, scale=1.0, run #16] abm: 0.0561,0.0602
[V3, scale=1.0, run #17] abm: 0.0681,0.0724
[V3, scale=1.0, run #18] abm: 0.0693,0.0711
[V3, scale=1.0, run #19] abm: 0.0499,0.0546
[V1, scale=0.1, run #18] abm: nan,nan
[V1, scale=0.1, run #19] abm: nan,nan
[V3, scale=1.0, run #0] abm-gwn: 0.1368,0.2332
[V1, scale=0.1, run #0] abm-gwn: 0.0251,0.0267
[V1, scale=0.1, run #1] abm-gwn: 0.0213,0.0237
[V3, scale=1.0, run #1] abm-gwn: 0.1798,0.2179
[V1, scale=0.1, run #13] abm-gwn: nan,nan
[V1, scale=0.1, run #2] abm-gwn: 0.0237,0.0276
[V3, scale=1.0, run #2] abm-gwn: 0.1953,0.2279
[V1, scale=0.1, run #3] abm-gwn: 0.0229,0.0246
[V3, scale=1.0, run #3] abm-gwn: 0.1325,0.1729
[V3, scale=10.0, run #0] abm-gwn: nan,nan
[V1, scale=0.1, run #4] abm-gwn: 0.0286,0.0303
[V3, scale=1.0, run #8] abm: nan,nan
[V3, scale=1.0, run #4] abm-gwn: 0.1480,0.1704
[V1, scale=0.1, run #5] abm-gwn: 0.0213,0.0229
[V1, scale=0.1, run #6] abm-gwn: 0.0243,0.0269
[V3, scale=1.0, run #5] abm-gwn: 0.1552,0.2058
[V1, scale=0.1, run #7] abm-gwn: 0.0243,0.0258
[V3, scale=1.0, run #6] abm-gwn: 0.1397,0.1935
[V1, scale=0.1, run #14] abm-gwn: nan,nan
[V1, scale=0.1, run #8] abm-gwn: 0.0217,0.0271
[V3, scale=1.0, run #7] abm-gwn: 0.1813,0.2019
[V1, scale=0.1, run #9] abm-gwn: 0.0247,0.0260
[V3, scale=1.0, run #8] abm-gwn: 0.1679,0.1823
[V1, scale=0.1, run #10] abm-gwn: 0.0229,0.0238
[V3, scale=10.0, run #1] abm-gwn: nan,nan
[V3, scale=1.0, run #9] abm: nan,nan
[V1, scale=0.1, run #11] abm-gwn: 0.0270,0.0281
[V3, scale=1.0, run #9] abm-gwn: 0.1895,0.2111
[V1, scale=0.1, run #12] abm-gwn: 0.0268,0.0288
[V3, scale=1.0, run #10] abm-gwn: 0.1573,0.1865
[V1, scale=0.1, run #13] abm-gwn: 0.0222,0.0236
[V3, scale=1.0, run #11] abm-gwn: 0.1762,0.1805
[V1, scale=0.1, run #15] abm-gwn: nan,nan
[V1, scale=0.1, run #14] abm-gwn: 0.0263,0.0277
[V3, scale=1.0, run #12] abm-gwn: 0.1178,0.1329
[V1, scale=0.1, run #15] abm-gwn: 0.0234,0.0280
[V3, scale=1.0, run #13] abm-gwn: 0.1342,0.1770
[V1, scale=0.1, run #16] abm-gwn: 0.0244,0.0247
[V3, scale=1.0, run #14] abm-gwn: 0.1518,0.1549
[V1, scale=0.1, run #17] abm-gwn: 0.0232,0.0243
[V3, scale=1.0, run #15] abm-gwn: 0.1694,0.1707
[V3, scale=10.0, run #2] abm-gwn: nan,nan
[V3, scale=1.0, run #10] abm: nan,nan
[V1, scale=0.1, run #18] abm-gwn: 0.0262,0.0294
[V3, scale=1.0, run #16] abm-gwn: 0.1677,0.1812
[V1, scale=0.1, run #19] abm-gwn: 0.0243,0.0258
[V1, scale=1.0, run #0] abm: 0.0974,0.1155
[V1, scale=1.0, run #1] abm: 0.0881,0.0937
[V1, scale=1.0, run #2] abm: 0.0870,0.1156
[V1, scale=1.0, run #3] abm: 0.0994,0.1057
[V1, scale=0.1, run #16] abm-gwn: nan,nan
[V1, scale=1.0, run #4] abm: 0.1093,0.1265
[V1, scale=1.0, run #5] abm: 0.1066,0.1445
[V1, scale=1.0, run #6] abm: 0.1066,0.1080
[V3, scale=1.0, run #17] abm-gwn: 0.2164,0.2305
[V1, scale=1.0, run #7] abm: 0.0962,0.1446
[V1, scale=1.0, run #8] abm: 0.0800,0.1113
[V1, scale=1.0, run #9] abm: 0.1139,0.1286
[V1, scale=1.0, run #10] abm: 0.1014,0.1093
[V1, scale=1.0, run #11] abm: 0.1018,0.1138
[V1, scale=1.0, run #12] abm: 0.1108,0.1204
[V1, scale=1.0, run #13] abm: 0.0826,0.0873
[V1, scale=1.0, run #14] abm: 0.1124,0.1224
[V1, scale=1.0, run #15] abm: 0.1043,0.1268
[V1, scale=1.0, run #16] abm: 0.1024,0.1040
[V1, scale=1.0, run #17] abm: 0.0949,0.1189
[V1, scale=1.0, run #18] abm: 0.1105,0.1266
[V1, scale=1.0, run #19] abm: 0.1272,0.1320
[V3, scale=1.0, run #18] abm-gwn: 0.1952,0.2003
[V1, scale=1.0, run #0] abm-gwn: 0.2513,0.2670
[V3, scale=1.0, run #19] abm-gwn: 0.1541,0.1643
[V3, scale=10.0, run #0] abm: 3.0511,3.1081
[V3, scale=10.0, run #1] abm: 2.9151,2.9381
[V1, scale=1.0, run #1] abm-gwn: 0.2130,0.2365
[V3, scale=10.0, run #2] abm: 2.7181,2.7251
[V3, scale=10.0, run #3] abm: 2.5901,2.5941
[V3, scale=10.0, run #4] abm: 2.6981,2.7611
[V3, scale=1.0, run #11] abm: nan,nan
[V1, scale=1.0, run #2] abm-gwn: 0.2365,0.2758
[V3, scale=10.0, run #5] abm: 2.7231,2.7411
[V3, scale=10.0, run #3] abm-gwn: nan,nan
[V3, scale=10.0, run #6] abm: 3.0531,3.0691
[V1, scale=1.0, run #3] abm-gwn: 0.2294,0.2464
[V3, scale=10.0, run #7] abm: 2.8041,2.8521
[V1, scale=0.1, run #17] abm-gwn: nan,nan
[V3, scale=10.0, run #8] abm: 3.0201,3.0511
[V3, scale=10.0, run #9] abm: 2.7181,2.7181
[V1, scale=1.0, run #4] abm-gwn: 0.2863,0.3033
[V3, scale=10.0, run #10] abm: 2.9481,2.9811
[V3, scale=10.0, run #11] abm: 2.9381,2.9441
[V1, scale=1.0, run #5] abm-gwn: 0.2130,0.2292
[V3, scale=10.0, run #12] abm: 3.1611,3.2061
[V3, scale=10.0, run #13] abm: 2.5151,2.5351
[V3, scale=10.0, run #14] abm: 2.7581,2.7931
[V1, scale=1.0, run #6] abm-gwn: 0.2426,0.2693
[V3, scale=10.0, run #15] abm: 3.1051,3.1571
[V3, scale=10.0, run #16] abm: 2.7221,2.7521
[V1, scale=1.0, run #7] abm-gwn: 0.2428,0.2584
[V3, scale=10.0, run #17] abm: 3.0061,3.0381
[V3, scale=10.0, run #18] abm: 2.6141,2.6501
[V3, scale=10.0, run #19] abm: 2.6861,2.7071
[V1, scale=1.0, run #8] abm-gwn: 0.2172,0.2705
[V3, scale=1.0, run #12] abm: nan,nan
[V1, scale=1.0, run #9] abm-gwn: 0.2465,0.2600
[V3, scale=10.0, run #0] abm-gwn: 1.3681,2.3321
[V3, scale=10.0, run #4] abm-gwn: nan,nan
[V1, scale=0.1, run #18] abm-gwn: nan,nan
[V1, scale=1.0, run #10] abm-gwn: 0.2290,0.2376
[V3, scale=10.0, run #1] abm-gwn: 1.7981,2.1791
[V1, scale=1.0, run #11] abm-gwn: 0.2704,0.2812
[V3, scale=10.0, run #2] abm-gwn: 1.9531,2.2791
[V1, scale=1.0, run #12] abm-gwn: 0.2676,0.2879
[V1, scale=1.0, run #13] abm-gwn: 0.2215,0.2360
[V3, scale=10.0, run #3] abm-gwn: 1.3251,1.7291
[V1, scale=1.0, run #14] abm-gwn: 0.2631,0.2768
[V3, scale=10.0, run #4] abm-gwn: 1.4801,1.7041
[V3, scale=1.0, run #13] abm: nan,nan
[V1, scale=1.0, run #15] abm-gwn: 0.2344,0.2802
[V3, scale=10.0, run #5] abm-gwn: 1.5521,2.0581
[V1, scale=0.1, run #19] abm-gwn: nan,nan
[V3, scale=10.0, run #5] abm-gwn: nan,nan
[V1, scale=1.0, run #16] abm-gwn: 0.2437,0.2467
[V3, scale=10.0, run #6] abm-gwn: 1.3971,1.9351
[V1, scale=1.0, run #17] abm-gwn: 0.2320,0.2432
[V3, scale=10.0, run #7] abm-gwn: 1.8131,2.0191
[V1, scale=1.0, run #18] abm-gwn: 0.2615,0.2937
[V1, scale=1.0, run #0] abm: nan,nan
[V3, scale=10.0, run #8] abm-gwn: 1.6791,1.8231
[V1, scale=1.0, run #19] abm-gwn: 0.2429,0.2575
[V1, scale=10.0, run #0] abm: 3.2551,3.4851
[V1, scale=10.0, run #1] abm: 2.8701,3.0731
[V1, scale=10.0, run #2] abm: 2.9591,3.2131
[V1, scale=10.0, run #3] abm: 3.5381,3.7711
[V3, scale=10.0, run #9] abm-gwn: 1.8951,2.1111
[V1, scale=10.0, run #4] abm: 3.1831,3.4211
[V1, scale=10.0, run #5] abm: 2.9581,3.1161
[V1, scale=1.0, run #1] abm: nan,nan
[V1, scale=10.0, run #6] abm: 3.2411,3.3621
[V1, scale=10.0, run #7] abm: 3.2661,3.6011
[V3, scale=10.0, run #10] abm-gwn: 1.5731,1.8651
[V1, scale=10.0, run #8] abm: 3.0801,3.5911
[V3, scale=1.0, run #14] abm: nan,nan
[V1, scale=10.0, run #9] abm: 3.4451,3.6481
[V1, scale=10.0, run #10] abm: 3.0961,3.3541
[V1, scale=10.0, run #11] abm: 3.2101,3.4471
[V3, scale=10.0, run #11] abm-gwn: 1.7621,1.8051
[V1, scale=10.0, run #12] abm: 3.3761,3.5181
[V1, scale=10.0, run #13] abm: 3.2931,3.4251
[V3, scale=10.0, run #6] abm-gwn: nan,nan
[V1, scale=10.0, run #14] abm: 2.9651,3.1791
[V1, scale=10.0, run #15] abm: 3.2861,3.4881
[V3, scale=10.0, run #12] abm-gwn: 1.1781,1.3291
[V1, scale=1.0, run #2] abm: nan,nan
[V1, scale=10.0, run #16] abm: 3.2871,3.4541
[V1, scale=10.0, run #17] abm: 3.2201,3.4221
[V1, scale=10.0, run #18] abm: 3.3211,3.5741
[V1, scale=10.0, run #19] abm: 3.5461,3.6851
[V3, scale=10.0, run #13] abm-gwn: 1.3421,1.7701
[V3, scale=10.0, run #14] abm-gwn: 1.5181,1.5491
[V1, scale=10.0, run #0] abm-gwn: 2.5131,2.6701
[V1, scale=1.0, run #3] abm: nan,nan
[V1, scale=10.0, run #1] abm-gwn: 2.1301,2.3651
[V3, scale=10.0, run #15] abm-gwn: 1.6941,1.7071
[V1, scale=10.0, run #2] abm-gwn: 2.3651,2.7581
[V3, scale=10.0, run #16] abm-gwn: 1.6771,1.8121
[V3, scale=1.0, run #15] abm: nan,nan
[V1, scale=10.0, run #3] abm-gwn: 2.2941,2.4641
[V1, scale=1.0, run #4] abm: nan,nan
[V3, scale=10.0, run #17] abm-gwn: 2.1641,2.3051
[V1, scale=10.0, run #4] abm-gwn: 2.8631,3.0331
[V3, scale=10.0, run #7] abm-gwn: nan,nan
[V3, scale=10.0, run #18] abm-gwn: 1.9521,2.0031
[V1, scale=10.0, run #5] abm-gwn: 2.1301,2.2921
[V3, scale=10.0, run #19] abm-gwn: 1.5411,1.6431
[V3, scale=100.0, run #0] abm: 3.1210,3.1610
[V3, scale=100.0, run #1] abm: 2.9710,2.9810
[V1, scale=1.0, run #5] abm: nan,nan
[V3, scale=100.0, run #2] abm: 2.8310,2.8410
[V3, scale=100.0, run #3] abm: 2.6610,2.7010
[V3, scale=100.0, run #4] abm: 2.7610,2.8110
[V1, scale=10.0, run #6] abm-gwn: 2.4261,2.6931
[V3, scale=100.0, run #5] abm: 2.8110,2.8110
[V3, scale=100.0, run #6] abm: 3.1010,3.1110
[V3, scale=100.0, run #7] abm: 2.8610,2.8910
[V3, scale=100.0, run #8] abm: 3.0710,3.0910
[V3, scale=100.0, run #9] abm: 2.8110,2.8110
[V3, scale=100.0, run #10] abm: 3.0510,3.0710
[V3, scale=100.0, run #11] abm: 3.0110,3.0110
[V3, scale=100.0, run #12] abm: 3.2510,3.2810
[V3, scale=100.0, run #13] abm: 2.5710,2.6110
[V3, scale=100.0, run #14] abm: 2.8110,2.8510
[V3, scale=100.0, run #15] abm: 3.1910,3.2310
[V3, scale=100.0, run #16] abm: 2.8010,2.8210
[V3, scale=100.0, run #17] abm: 3.0810,3.1010
[V3, scale=100.0, run #18] abm: 2.6910,2.7110
[V3, scale=100.0, run #19] abm: 2.7810,2.8810
[V1, scale=10.0, run #7] abm-gwn: 2.4281,2.5841
[V1, scale=10.0, run #8] abm-gwn: 2.1721,2.7051
[V3, scale=100.0, run #0] abm-gwn: 13.6810,23.3210
[V1, scale=1.0, run #6] abm: nan,nan
[V1, scale=10.0, run #9] abm-gwn: 2.4651,2.6001
[V3, scale=1.0, run #16] abm: nan,nan
[V3, scale=100.0, run #1] abm-gwn: 17.9810,21.7910
[V1, scale=10.0, run #10] abm-gwn: 2.2901,2.3761
[V3, scale=100.0, run #2] abm-gwn: 19.5310,22.7910
[V1, scale=10.0, run #11] abm-gwn: 2.7041,2.8121
[V1, scale=1.0, run #7] abm: nan,nan
[V3, scale=100.0, run #3] abm-gwn: 13.2510,17.2910
[V1, scale=10.0, run #12] abm-gwn: 2.6761,2.8791
[V3, scale=10.0, run #8] abm-gwn: nan,nan
[V3, scale=100.0, run #4] abm-gwn: 14.8010,17.0410
[V1, scale=10.0, run #13] abm-gwn: 2.2151,2.3601
[V1, scale=1.0, run #8] abm: nan,nan
[V1, scale=10.0, run #14] abm-gwn: 2.6311,2.7681
[V3, scale=100.0, run #5] abm-gwn: 15.5210,20.5810
[V1, scale=10.0, run #15] abm-gwn: 2.3441,2.8021
[V3, scale=100.0, run #6] abm-gwn: 13.9710,19.3510
[V3, scale=1.0, run #17] abm: nan,nan
[V1, scale=10.0, run #16] abm-gwn: 2.4371,2.4671
[V1, scale=1.0, run #9] abm: nan,nan
[V3, scale=100.0, run #7] abm-gwn: 18.1310,20.1910
[V1, scale=10.0, run #17] abm-gwn: 2.3201,2.4321
[V3, scale=100.0, run #8] abm-gwn: 16.7910,18.2310
[V1, scale=10.0, run #18] abm-gwn: 2.6151,2.9371
[V1, scale=1.0, run #10] abm: nan,nan
[V3, scale=100.0, run #9] abm-gwn: 18.9510,21.1110
[V1, scale=10.0, run #19] abm-gwn: 2.4291,2.5751
[V1, scale=100.0, run #0] abm: 3.2710,3.4910
[V1, scale=100.0, run #1] abm: 2.8910,3.0910
[V1, scale=100.0, run #2] abm: 2.9710,3.2210
[V1, scale=100.0, run #3] abm: 3.5510,3.7810
[V1, scale=100.0, run #4] abm: 3.2010,3.4310
[V1, scale=100.0, run #5] abm: 2.9810,3.1310
[V1, scale=100.0, run #6] abm: 3.2610,3.3910
[V1, scale=100.0, run #7] abm: 3.2810,3.6110
[V1, scale=100.0, run #8] abm: 3.0910,3.6010
[V1, scale=100.0, run #9] abm: 3.4610,3.6610
[V1, scale=100.0, run #10] abm: 3.1110,3.3710
[V1, scale=100.0, run #11] abm: 3.2210,3.4510
[V1, scale=100.0, run #12] abm: 3.3910,3.6210
[V1, scale=100.0, run #13] abm: 3.3010,3.5410
[V1, scale=100.0, run #14] abm: 2.9810,3.1810
[V1, scale=100.0, run #15] abm: 3.3010,3.5010
[V1, scale=100.0, run #16] abm: 3.3010,3.5110
[V1, scale=100.0, run #17] abm: 3.2310,3.5110
[V1, scale=100.0, run #18] abm: 3.3310,3.5810
[V1, scale=100.0, run #19] abm: 3.5610,3.6910
[V3, scale=10.0, run #9] abm-gwn: nan,nan
[V3, scale=100.0, run #10] abm-gwn: 15.7310,18.6510
[V1, scale=100.0, run #0] abm-gwn: 25.1310,26.7010
[V3, scale=100.0, run #11] abm-gwn: 17.6210,18.0510
[V1, scale=1.0, run #11] abm: nan,nan
[V1, scale=100.0, run #1] abm-gwn: 21.3010,23.6510
[V3, scale=100.0, run #12] abm-gwn: 11.7810,13.2910
[V3, scale=1.0, run #18] abm: nan,nan
[V1, scale=100.0, run #2] abm-gwn: 23.6510,27.5810
[V3, scale=100.0, run #13] abm-gwn: 13.4210,17.7010
[V1, scale=100.0, run #3] abm-gwn: 22.9410,24.6410
[V1, scale=1.0, run #12] abm: nan,nan
[V3, scale=100.0, run #14] abm-gwn: 15.1810,15.4910
[V1, scale=100.0, run #4] abm-gwn: 28.6310,30.3310
[V3, scale=100.0, run #15] abm-gwn: 16.9410,17.0710
[V1, scale=100.0, run #5] abm-gwn: 21.3010,22.9210
[V3, scale=100.0, run #16] abm-gwn: 16.7710,18.1210
[V1, scale=1.0, run #13] abm: nan,nan
[V1, scale=100.0, run #6] abm-gwn: 24.2610,26.9310
[V3, scale=10.0, run #10] abm-gwn: nan,nan
[V1, scale=100.0, run #7] abm-gwn: 24.2810,25.8410
[V3, scale=100.0, run #17] abm-gwn: 21.6410,23.0510
[V1, scale=100.0, run #8] abm-gwn: 21.7210,27.0510
[V3, scale=1.0, run #19] abm: nan,nan
[V3, scale=100.0, run #18] abm-gwn: 19.5210,20.0310
[V3, scale=1.0, run #0] abm-gwn: 0.0941,0.1113
[V1, scale=1.0, run #14] abm: nan,nan
[V3, scale=1.0, run #1] abm-gwn: 0.0844,0.0982
[V1, scale=100.0, run #9] abm-gwn: 24.6510,26.0010
[V3, scale=100.0, run #19] abm-gwn: 15.4110,16.4310
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/fromnumeric.py:3419: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:180: RuntimeWarning: invalid value encountered in true_divide
  ret = um.true_divide(
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:261: RuntimeWarning: Degrees of freedom <= 0 for slice
  ret = _var(a, axis=axis, dtype=dtype, out=out, ddof=ddof,
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:221: RuntimeWarning: invalid value encountered in true_divide
  arrmean = um.true_divide(arrmean, div, out=arrmean, casting='unsafe',
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:250: RuntimeWarning: invalid value encountered in true_divide
  ret = um.true_divide(
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:188: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:253: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
================================
data: V3 (extra dim = 0)
condition
{'npolys': [0, 0, 0, 0, 1], 'cmp': ['==', '==', '==', '==', '==']}
================================
================================
data: V3 (extra dim = 0)
condition
{'npolys': [0, 0, 0, 0, 1], 'cmp': ['==', '==', '==', '==', '==']}
================================
================================
data: V3 (extra dim = 0)
condition
{'npolys': [0, 0, 0, 0, 1], 'cmp': ['==', '==', '==', '==', '==']}
================================
    scale   method  ...                            coeff dist (std)   success rate
0    0.01      abm  ...                                   nan (nan)     0/20(0.0%)
0    0.01  abm-gwn  ...   1.4012855921606502 (0.009882255297820287)  20/20(100.0%)
0    0.10      abm  ...                    1.4116852825095731 (0.0)     1/20(5.0%)
0    0.10  abm-gwn  ...    1.399947050727075 (0.011512071454542685)  20/20(100.0%)
0    1.00      abm  ...     1.332498067528543 (0.04690283866021206)  20/20(100.0%)
0    1.00  abm-gwn  ...   1.3382511892754023 (0.044528938256539946)  20/20(100.0%)
0   10.00      abm  ...     1.40464195896786 (0.009351934370284802)  20/20(100.0%)
0   10.00  abm-gwn  ...    1.1064227578968655 (0.12652814099248602)  20/20(100.0%)
0  100.00      abm  ...  1.4139848337718974 (0.0001364318673682498)  20/20(100.0%)
0  100.00  abm-gwn  ...    1.379747103136279 (0.016821555461210686)  20/20(100.0%)

[10 rows x 7 columns]
[V1, scale=100.0, run #10] abm-gwn: 22.9010,23.7610
[V1, scale=100.0, run #11] abm-gwn: 27.0410,28.1210
[V1, scale=1.0, run #15] abm: nan,nan
[V1, scale=100.0, run #12] abm-gwn: 26.7610,28.7910
[V3, scale=10.0, run #11] abm-gwn: nan,nan
[V1, scale=100.0, run #13] abm-gwn: 22.1510,23.6010
[V1, scale=1.0, run #16] abm: nan,nan
[V1, scale=100.0, run #14] abm-gwn: 26.3110,27.6810
[V1, scale=100.0, run #15] abm-gwn: 23.4410,28.0210
[V1, scale=100.0, run #16] abm-gwn: 24.3710,24.6710
[V1, scale=1.0, run #17] abm: nan,nan
[V1, scale=100.0, run #17] abm-gwn: 23.2010,24.3210
[V1, scale=100.0, run #18] abm-gwn: 26.1510,29.3710
[V1, scale=1.0, run #18] abm: nan,nan
[V1, scale=100.0, run #19] abm-gwn: 24.2910,25.7510
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/fromnumeric.py:3419: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:180: RuntimeWarning: invalid value encountered in true_divide
  ret = um.true_divide(
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:261: RuntimeWarning: Degrees of freedom <= 0 for slice
  ret = _var(a, axis=axis, dtype=dtype, out=out, ddof=ddof,
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:221: RuntimeWarning: invalid value encountered in true_divide
  arrmean = um.true_divide(arrmean, div, out=arrmean, casting='unsafe',
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:250: RuntimeWarning: invalid value encountered in true_divide
  ret = um.true_divide(
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:188: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:253: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
================================
data: V1 (extra dim = 0)
condition
{'npolys': [0, 0, 0, 0, 0, 0, 1], 'cmp': ['==', '==', '==', '==', '==', '==', '==']}
================================
================================
data: V1 (extra dim = 0)
condition
{'npolys': [0, 0, 0, 0, 0, 0, 1], 'cmp': ['==', '==', '==', '==', '==', '==', '==']}
================================
================================
data: V1 (extra dim = 0)
condition
{'npolys': [0, 0, 0, 0, 0, 0, 1], 'cmp': ['==', '==', '==', '==', '==', '==', '==']}
================================
    scale   method  ...                             coeff dist (std)   success rate
0    0.01      abm  ...                                    nan (nan)     0/20(0.0%)
0    0.01  abm-gwn  ...                                    nan (nan)     0/20(0.0%)
0    0.10      abm  ...                                    nan (nan)     0/20(0.0%)
0    0.10  abm-gwn  ...     1.1254990583208313 (0.11302948734361054)  20/20(100.0%)
0    1.00      abm  ...     1.2612869724506521 (0.01765756177197313)  20/20(100.0%)
0    1.00  abm-gwn  ...     1.3160202504002672 (0.04797490406916515)  20/20(100.0%)
0   10.00      abm  ...  1.4133063208018974 (0.00012589580286924014)  20/20(100.0%)
0   10.00  abm-gwn  ...    1.4057874943707336 (0.004874202433969743)  20/20(100.0%)
0  100.00      abm  ...   1.4141951148254412 (2.135548187413934e-06)  20/20(100.0%)
0  100.00  abm-gwn  ...  1.4140394426533327 (0.00015339970734039256)  20/20(100.0%)

[10 rows x 7 columns]
[V3, scale=10.0, run #12] abm-gwn: nan,nan
[V3, scale=1.0, run #2] abm-gwn: nan,nan
[V3, scale=1.0, run #3] abm-gwn: 0.0984,0.0995
[V3, scale=1.0, run #4] abm-gwn: 0.0927,0.1163
[V3, scale=1.0, run #5] abm-gwn: 0.1007,0.1010
[V1, scale=1.0, run #19] abm: nan,nan
[V3, scale=10.0, run #13] abm-gwn: nan,nan
[V1, scale=1.0, run #0] abm-gwn: nan,nan
[V3, scale=1.0, run #6] abm-gwn: nan,nan
[V3, scale=1.0, run #7] abm-gwn: 0.0847,0.0944
[V3, scale=1.0, run #8] abm-gwn: 0.0934,0.1010
[V3, scale=1.0, run #9] abm-gwn: 0.0835,0.0957
[V3, scale=1.0, run #10] abm-gwn: 0.1008,0.1126
[V3, scale=1.0, run #11] abm-gwn: 0.0961,0.0965
[V1, scale=1.0, run #1] abm-gwn: nan,nan
[V3, scale=1.0, run #12] abm-gwn: 0.0914,0.1034
[V3, scale=1.0, run #13] abm-gwn: 0.1001,0.1025
[V3, scale=1.0, run #14] abm-gwn: 0.1000,0.1009
[V3, scale=10.0, run #14] abm-gwn: nan,nan
[V3, scale=1.0, run #15] abm-gwn: 0.0925,0.1005
[V1, scale=1.0, run #2] abm-gwn: nan,nan
[V3, scale=10.0, run #15] abm-gwn: nan,nan
[V3, scale=1.0, run #16] abm-gwn: nan,nan
[V1, scale=1.0, run #3] abm-gwn: nan,nan
[V3, scale=1.0, run #17] abm-gwn: 0.0917,0.0918
[V3, scale=10.0, run #16] abm-gwn: nan,nan
[V1, scale=1.0, run #4] abm-gwn: nan,nan
[V3, scale=1.0, run #18] abm-gwn: nan,nan
[V3, scale=1.0, run #19] abm-gwn: 0.1042,0.1210
[V1, scale=1.0, run #5] abm-gwn: nan,nan
[V3, scale=10.0, run #17] abm-gwn: nan,nan
[V3, scale=10.0, run #0] abm: 2.1521,2.2511
[V3, scale=10.0, run #1] abm: 2.2491,2.3281
[V3, scale=10.0, run #2] abm: 2.1171,2.2511
[V3, scale=10.0, run #3] abm: 2.1661,2.2021
[V3, scale=10.0, run #4] abm: 2.1671,2.2481
[V3, scale=10.0, run #5] abm: 2.0321,2.2171
[V3, scale=10.0, run #6] abm: 2.1191,2.2401
[V3, scale=10.0, run #7] abm: 2.1771,2.2851
[V3, scale=10.0, run #8] abm: 2.2291,2.3221
[V3, scale=10.0, run #9] abm: 2.2611,2.3441
[V3, scale=10.0, run #10] abm: 2.2651,2.3381
[V3, scale=10.0, run #11] abm: 2.1891,2.2951
[V3, scale=10.0, run #12] abm: 2.0941,2.1971
[V3, scale=10.0, run #13] abm: 1.9991,2.1441
[V3, scale=10.0, run #14] abm: 2.0561,2.2561
[V3, scale=10.0, run #15] abm: 2.2271,2.2511
[V3, scale=10.0, run #16] abm: 2.1411,2.2141
[V3, scale=10.0, run #17] abm: 2.0181,2.1081
[V3, scale=10.0, run #18] abm: 2.0881,2.2371
[V3, scale=10.0, run #19] abm: 2.1491,2.3191
[V3, scale=10.0, run #0] abm-gwn: 0.9411,1.1131
[V3, scale=10.0, run #1] abm-gwn: 0.8441,0.9821
[V1, scale=1.0, run #6] abm-gwn: nan,nan
[V3, scale=10.0, run #18] abm-gwn: nan,nan
[V1, scale=1.0, run #7] abm-gwn: nan,nan
[V3, scale=10.0, run #19] abm-gwn: nan,nan
[V3, scale=100.0, run #0] abm: nan,nan
[V3, scale=100.0, run #1] abm: nan,nan
[V3, scale=100.0, run #2] abm: nan,nan
[V3, scale=100.0, run #3] abm: nan,nan
[V3, scale=100.0, run #4] abm: nan,nan
[V3, scale=100.0, run #5] abm: nan,nan
[V3, scale=100.0, run #6] abm: nan,nan
[V3, scale=100.0, run #7] abm: nan,nan
[V3, scale=100.0, run #8] abm: nan,nan
[V3, scale=100.0, run #9] abm: nan,nan
[V3, scale=100.0, run #10] abm: nan,nan
[V3, scale=100.0, run #11] abm: nan,nan
[V3, scale=100.0, run #12] abm: nan,nan
[V3, scale=100.0, run #13] abm: nan,nan
[V3, scale=100.0, run #14] abm: nan,nan
[V3, scale=100.0, run #15] abm: nan,nan
[V3, scale=100.0, run #16] abm: nan,nan
[V3, scale=100.0, run #17] abm: nan,nan
[V3, scale=100.0, run #18] abm: nan,nan
[V3, scale=100.0, run #19] abm: nan,nan
[V1, scale=1.0, run #8] abm-gwn: nan,nan
[V3, scale=10.0, run #2] abm-gwn: nan,nan
[V3, scale=10.0, run #3] abm-gwn: 0.9841,0.9951
[V3, scale=10.0, run #4] abm-gwn: 0.9271,1.1631
[V3, scale=10.0, run #5] abm-gwn: 1.0071,1.0101
[V3, scale=100.0, run #0] abm-gwn: nan,nan
[V1, scale=1.0, run #9] abm-gwn: nan,nan
[V3, scale=100.0, run #1] abm-gwn: nan,nan
[V1, scale=1.0, run #10] abm-gwn: nan,nan
[V3, scale=10.0, run #6] abm-gwn: nan,nan
[V3, scale=10.0, run #7] abm-gwn: 0.8471,0.9441
[V3, scale=10.0, run #8] abm-gwn: 0.9341,1.0101
[V3, scale=10.0, run #9] abm-gwn: 0.8351,0.9571
[V3, scale=10.0, run #10] abm-gwn: 1.0081,1.1261
[V3, scale=10.0, run #11] abm-gwn: 0.9611,0.9651
[V3, scale=10.0, run #12] abm-gwn: 0.9141,1.0341
[V3, scale=10.0, run #13] abm-gwn: 1.0011,1.0251
[V3, scale=10.0, run #14] abm-gwn: 1.0001,1.0091
[V3, scale=10.0, run #15] abm-gwn: 0.9251,1.0051
[V3, scale=100.0, run #2] abm-gwn: nan,nan
[V1, scale=1.0, run #11] abm-gwn: nan,nan
[V1, scale=1.0, run #12] abm-gwn: nan,nan
[V3, scale=100.0, run #3] abm-gwn: nan,nan
[V3, scale=10.0, run #16] abm-gwn: nan,nan
[V3, scale=10.0, run #17] abm-gwn: 0.9171,0.9181
[V1, scale=1.0, run #13] abm-gwn: nan,nan
[V3, scale=100.0, run #4] abm-gwn: nan,nan
[V1, scale=1.0, run #14] abm-gwn: nan,nan
[V3, scale=10.0, run #18] abm-gwn: nan,nan
[V3, scale=10.0, run #19] abm-gwn: 1.0421,1.2101
[V3, scale=100.0, run #0] abm: nan,nan
[V3, scale=100.0, run #1] abm: nan,nan
[V3, scale=100.0, run #2] abm: nan,nan
[V3, scale=100.0, run #3] abm: nan,nan
[V3, scale=100.0, run #4] abm: nan,nan
[V3, scale=100.0, run #5] abm: nan,nan
[V3, scale=100.0, run #6] abm: nan,nan
[V3, scale=100.0, run #7] abm: nan,nan
[V3, scale=100.0, run #8] abm: nan,nan
[V3, scale=100.0, run #9] abm: nan,nan
[V3, scale=100.0, run #10] abm: nan,nan
[V3, scale=100.0, run #11] abm: nan,nan
[V3, scale=100.0, run #12] abm: nan,nan
[V3, scale=100.0, run #13] abm: nan,nan
[V3, scale=100.0, run #14] abm: nan,nan
[V3, scale=100.0, run #15] abm: nan,nan
[V3, scale=100.0, run #16] abm: nan,nan
[V3, scale=100.0, run #17] abm: nan,nan
[V3, scale=100.0, run #18] abm: nan,nan
[V3, scale=100.0, run #19] abm: nan,nan
[V3, scale=100.0, run #0] abm-gwn: 9.4110,11.1310
[V3, scale=100.0, run #1] abm-gwn: 8.4410,9.8210
[V3, scale=100.0, run #5] abm-gwn: nan,nan
[V1, scale=1.0, run #15] abm-gwn: nan,nan
[V3, scale=100.0, run #6] abm-gwn: nan,nan
[V1, scale=1.0, run #16] abm-gwn: nan,nan
[V3, scale=100.0, run #2] abm-gwn: nan,nan
[V3, scale=100.0, run #3] abm-gwn: 9.8410,9.9510
[V3, scale=100.0, run #4] abm-gwn: 9.2710,11.6310
[V3, scale=100.0, run #5] abm-gwn: 10.0710,10.1010
[V3, scale=100.0, run #7] abm-gwn: nan,nan
[V1, scale=1.0, run #17] abm-gwn: nan,nan
[V1, scale=1.0, run #18] abm-gwn: nan,nan
[V3, scale=100.0, run #8] abm-gwn: nan,nan
[V3, scale=100.0, run #6] abm-gwn: nan,nan
[V3, scale=100.0, run #7] abm-gwn: 8.4710,9.4410
[V3, scale=100.0, run #8] abm-gwn: 9.3410,10.1010
[V3, scale=100.0, run #9] abm-gwn: 8.3510,9.5710
[V3, scale=100.0, run #10] abm-gwn: 10.0810,11.2610
[V3, scale=100.0, run #11] abm-gwn: 9.6110,9.6510
[V3, scale=100.0, run #12] abm-gwn: 9.1410,10.3410
[V3, scale=100.0, run #13] abm-gwn: 10.0110,10.2510
[V3, scale=100.0, run #14] abm-gwn: 10.0010,10.0910
[V3, scale=100.0, run #15] abm-gwn: 9.2510,10.0510
[V1, scale=1.0, run #19] abm-gwn: nan,nan
[V1, scale=10.0, run #0] abm: 2.5011,2.6321
[V1, scale=10.0, run #1] abm: 2.5231,2.6971
[V1, scale=10.0, run #2] abm: 2.4951,2.5841
[V1, scale=10.0, run #3] abm: 2.4891,2.6511
[V3, scale=100.0, run #9] abm-gwn: nan,nan
[V1, scale=10.0, run #4] abm: 2.6111,2.7391
[V1, scale=10.0, run #5] abm: 2.5321,2.6891
[V1, scale=10.0, run #6] abm: 2.4631,2.6251
[V1, scale=10.0, run #7] abm: 2.4121,2.5951
[V1, scale=10.0, run #8] abm: 2.4361,2.6051
[V1, scale=10.0, run #9] abm: 2.3921,2.5541
[V1, scale=10.0, run #10] abm: 2.4731,2.5931
[V1, scale=10.0, run #11] abm: 2.5371,2.6751
[V1, scale=10.0, run #12] abm: 2.5041,2.6501
[V1, scale=10.0, run #13] abm: 2.4461,2.5851
[V1, scale=10.0, run #14] abm: 2.4291,2.5821
[V1, scale=10.0, run #15] abm: 2.4581,2.6491
[V1, scale=10.0, run #16] abm: 2.4871,2.7171
[V1, scale=10.0, run #17] abm: 2.4021,2.6561
[V1, scale=10.0, run #18] abm: 2.4451,2.5411
[V1, scale=10.0, run #19] abm: 2.4591,2.6221
[V3, scale=100.0, run #10] abm-gwn: nan,nan
[V3, scale=100.0, run #16] abm-gwn: nan,nan
[V3, scale=100.0, run #17] abm-gwn: 9.1710,9.1810
[V1, scale=10.0, run #0] abm-gwn: nan,nan
[V3, scale=100.0, run #11] abm-gwn: nan,nan
[V1, scale=10.0, run #1] abm-gwn: nan,nan
[V3, scale=100.0, run #18] abm-gwn: nan,nan
[V3, scale=100.0, run #19] abm-gwn: 10.4210,12.1010
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/fromnumeric.py:3419: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:180: RuntimeWarning: invalid value encountered in true_divide
  ret = um.true_divide(
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:261: RuntimeWarning: Degrees of freedom <= 0 for slice
  ret = _var(a, axis=axis, dtype=dtype, out=out, ddof=ddof,
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:221: RuntimeWarning: invalid value encountered in true_divide
  arrmean = um.true_divide(arrmean, div, out=arrmean, casting='unsafe',
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:250: RuntimeWarning: invalid value encountered in true_divide
  ret = um.true_divide(
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:188: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:253: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
================================
data: V3 (extra dim = 1)
condition
{'npolys': [0, 1, 0, 0, 1], 'cmp': ['==', '==', '==', '==', '==']}
================================
================================
data: V3 (extra dim = 1)
condition
{'npolys': [0, 1, 0, 0, 1], 'cmp': ['==', '==', '==', '==', '==']}
================================
================================
data: V3 (extra dim = 1)
condition
{'npolys': [0, 1, 0, 0, 1], 'cmp': ['==', '==', '==', '==', '==']}
================================
new range: 0.0009401000000000001, 0.010000100000000001
new range: 0.0008401000000000001, 0.010000100000000001
new range: 0.0009801000000000002, 0.010000100000000001
new range: 0.0009801000000000002, 0.010000100000000001
new range: 0.0009201000000000002, 0.010000100000000001
new range: 0.0010001000000000003, 0.010000100000000001
new range: 0.0009901000000000003, 0.010000100000000001
new range: 0.0008401000000000001, 0.010000100000000001
new range: 0.0009301000000000001, 0.010000100000000001
new range: 0.0008301000000000002, 0.010000100000000001
new range: 0.0010001000000000003, 0.010000100000000001
new range: 0.0009601000000000002, 0.010000100000000001
new range: 0.0009101000000000002, 0.010000100000000001
new range: 0.0010001000000000003, 0.010000100000000001
new range: 0.0009901000000000003, 0.010000100000000001
new range: 0.0009201000000000002, 0.010000100000000001
new range: 0.0010501000000000002, 0.010000100000000001
new range: 0.0009101000000000002, 0.010000100000000001
new range: 0.0009901000000000003, 0.010000100000000001
new range: 0.0010401000000000004, 0.010000100000000001
new range: 0.0009401000000000001, 0.010000100000000001
new range: 0.0008401000000000001, 0.010000100000000001
new range: 0.0009801000000000002, 0.010000100000000001
new range: 0.0009801000000000002, 0.010000100000000001
new range: 0.0009201000000000002, 0.010000100000000001
new range: 0.0010001000000000003, 0.010000100000000001
new range: 0.0009901000000000003, 0.010000100000000001
new range: 0.0008401000000000001, 0.010000100000000001
new range: 0.0009301000000000001, 0.010000100000000001
new range: 0.0008301000000000002, 0.010000100000000001
new range: 0.0010001000000000003, 0.010000100000000001
new range: 0.0009601000000000002, 0.010000100000000001
new range: 0.0009101000000000002, 0.010000100000000001
new range: 0.0010001000000000003, 0.010000100000000001
new range: 0.0009901000000000003, 0.010000100000000001
new range: 0.0009201000000000002, 0.010000100000000001
new range: 0.0010501000000000002, 0.010000100000000001
new range: 0.0009101000000000002, 0.010000100000000001
new range: 0.0009901000000000003, 0.010000100000000001
new range: 0.0010401000000000004, 0.010000100000000001
new range: 0.009401, 0.100001
new range: 0.008401, 0.100001
new range: 0.009801, 0.100001
new range: 0.009801, 0.100001
new range: 0.009201, 0.100001
new range: 0.010001000000000001, 0.100001
new range: 0.009901, 0.100001
new range: 0.008401, 0.100001
new range: 0.009301, 0.100001
new range: 0.008301000000000001, 0.100001
new range: 0.010001000000000001, 0.100001
new range: 0.009601, 0.100001
new range: 0.009101, 0.100001
new range: 0.010001000000000001, 0.100001
new range: 0.009901, 0.100001
new range: 0.009201, 0.100001
new range: 0.010501, 0.100001
new range: 0.009101, 0.100001
new range: 0.009901, 0.100001
new range: 0.010401, 0.100001
new range: 0.009401, 0.100001
new range: 0.008401, 0.100001
new range: 0.009801, 0.100001
new range: 0.009801, 0.100001
new range: 0.009201, 0.100001
new range: 0.010001000000000001, 0.100001
new range: 0.009901, 0.100001
new range: 0.008401, 0.100001
new range: 0.009301, 0.100001
new range: 0.008301000000000001, 0.100001
new range: 0.010001000000000001, 0.100001
new range: 0.009601, 0.100001
new range: 0.009101, 0.100001
new range: 0.010001000000000001, 0.100001
new range: 0.009901, 0.100001
new range: 0.009201, 0.100001
new range: 0.010501, 0.100001
new range: 0.009101, 0.100001
new range: 0.009901, 0.100001
new range: 0.010401, 0.100001
new range: 0.09401, 1.0000099999999998
new range: 0.08401, 1.0000099999999998
new range: 0.09801, 1.0000099999999998
new range: 0.09801, 1.0000099999999998
new range: 0.09201, 1.0000099999999998
new range: 0.10001, 1.0000099999999998
new range: 0.09901, 1.0000099999999998
new range: 0.08401, 1.0000099999999998
new range: 0.09301, 1.0000099999999998
new range: 0.08301, 1.0000099999999998
new range: 0.10001, 1.0000099999999998
new range: 0.09601, 1.0000099999999998
new range: 0.09101, 1.0000099999999998
new range: 0.10001, 1.0000099999999998
new range: 0.09901, 1.0000099999999998
new range: 0.09201, 1.0000099999999998
new range: 0.10500999999999999, 1.0000099999999998
new range: 0.09101, 1.0000099999999998
new range: 0.09901, 1.0000099999999998
new range: 0.10400999999999999, 1.0000099999999998
new range: 0.09401, 1.0000099999999998
new range: 0.08401, 1.0000099999999998
new range: 0.09801, 1.0000099999999998
new range: 0.09801, 1.0000099999999998
new range: 0.09201, 1.0000099999999998
new range: 0.10001, 1.0000099999999998
new range: 0.09901, 1.0000099999999998
new range: 0.08401, 1.0000099999999998
new range: 0.09301, 1.0000099999999998
new range: 0.08301, 1.0000099999999998
new range: 0.10001, 1.0000099999999998
new range: 0.09601, 1.0000099999999998
new range: 0.09101, 1.0000099999999998
new range: 0.10001, 1.0000099999999998
new range: 0.09901, 1.0000099999999998
new range: 0.09201, 1.0000099999999998
new range: 0.10500999999999999, 1.0000099999999998
new range: 0.09101, 1.0000099999999998
new range: 0.09901, 1.0000099999999998
new range: 0.10400999999999999, 1.0000099999999998
new range: 0.9401, 10.0001
new range: 0.8401, 10.0001
new range: 0.9801, 10.0001
new range: 0.9801, 10.0001
new range: 0.9201, 10.0001
new range: 1.0001, 10.0001
new range: 0.9901, 10.0001
new range: 0.8401, 10.0001
new range: 0.9301, 10.0001
new range: 0.8301, 10.0001
new range: 1.0001, 10.0001
new range: 0.9601, 10.0001
new range: 0.9101, 10.0001
new range: 1.0001, 10.0001
new range: 0.9901, 10.0001
new range: 0.9201, 10.0001
new range: 1.0501, 10.0001
new range: 0.9101, 10.0001
new range: 0.9901, 10.0001
new range: 1.0401, 10.0001
new range: 0.9401, 10.0001
new range: 0.8401, 10.0001
new range: 0.9801, 10.0001
new range: 0.9801, 10.0001
new range: 0.9201, 10.0001
new range: 1.0001, 10.0001
new range: 0.9901, 10.0001
new range: 0.8401, 10.0001
new range: 0.9301, 10.0001
new range: 0.8301, 10.0001
new range: 1.0001, 10.0001
new range: 0.9601, 10.0001
new range: 0.9101, 10.0001
new range: 1.0001, 10.0001
new range: 0.9901, 10.0001
new range: 0.9201, 10.0001
new range: 1.0501, 10.0001
new range: 0.9101, 10.0001
new range: 0.9901, 10.0001
new range: 1.0401, 10.0001
new range: 9.401, 10.001
new range: 8.401, 10.001
new range: 9.801, 10.001
new range: 9.801, 10.001
new range: 9.201, 10.001
new range: nan, nan
new range: nan, nan
new range: 8.401, 10.001
new range: 9.301, 10.001
new range: 8.301, 10.001
new range: nan, nan
new range: 9.601, 10.001
new range: 9.101, 10.001
new range: nan, nan
new range: nan, nan
new range: 9.201, 10.001
new range: nan, nan
new range: 9.101, 10.001
new range: nan, nan
new range: nan, nan
new range: 9.401, 100.001
new range: 8.401, 100.001
new range: 9.801, 100.001
new range: 9.801, 100.001
new range: 9.201, 100.001
new range: 10.001000000000001, 100.001
new range: 9.901, 100.001
new range: 8.401, 100.001
new range: 9.301, 100.001
new range: 8.301, 100.001
new range: 10.001000000000001, 100.001
new range: 9.601, 100.001
new range: 9.101, 100.001
new range: 10.001000000000001, 100.001
new range: 9.901, 100.001
new range: 9.201, 100.001
new range: 10.501000000000001, 100.001
new range: 9.101, 100.001
new range: 9.901, 100.001
new range: 10.401, 100.001
    scale   method  ...                           coeff dist (std)   success rate
0    0.01      abm  ...                                  nan (nan)     0/20(0.0%)
0    0.01  abm-gwn  ...  1.2356325232242846 (0.011308729776045807)   16/20(80.0%)
0    0.10      abm  ...                                  nan (nan)     0/20(0.0%)
0    0.10  abm-gwn  ...   1.227559416731681 (0.013463739729379509)   16/20(80.0%)
0    1.00      abm  ...                                  nan (nan)     0/20(0.0%)
0    1.00  abm-gwn  ...   1.1887339909901837 (0.06053636180187488)   16/20(80.0%)
0   10.00      abm  ...  0.8272178458873297 (0.013403339897786023)  20/20(100.0%)
0   10.00  abm-gwn  ...    1.2229274165023583 (0.0504042760407514)   16/20(80.0%)
0  100.00      abm  ...                                  nan (nan)     0/20(0.0%)
0  100.00  abm-gwn  ...   1.2882991849789875 (0.00915489674068375)   16/20(80.0%)

[10 rows x 7 columns]
[V3, scale=100.0, run #12] abm-gwn: nan,nan
[V1, scale=10.0, run #2] abm-gwn: nan,nan
[V1, scale=10.0, run #3] abm-gwn: nan,nan
[V3, scale=100.0, run #13] abm-gwn: nan,nan
[V1, scale=10.0, run #4] abm-gwn: nan,nan
[V3, scale=100.0, run #14] abm-gwn: nan,nan
[V1, scale=10.0, run #5] abm-gwn: nan,nan
[V3, scale=100.0, run #15] abm-gwn: nan,nan
[V1, scale=10.0, run #6] abm-gwn: nan,nan
[V3, scale=100.0, run #16] abm-gwn: nan,nan
[V1, scale=10.0, run #7] abm-gwn: nan,nan
[V1, scale=10.0, run #8] abm-gwn: nan,nan
[V3, scale=100.0, run #17] abm-gwn: nan,nan
[V1, scale=10.0, run #9] abm-gwn: nan,nan
[V3, scale=100.0, run #18] abm-gwn: nan,nan
[V1, scale=10.0, run #10] abm-gwn: nan,nan
[V3, scale=100.0, run #19] abm-gwn: nan,nan
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/fromnumeric.py:3419: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:180: RuntimeWarning: invalid value encountered in true_divide
  ret = um.true_divide(
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:261: RuntimeWarning: Degrees of freedom <= 0 for slice
  ret = _var(a, axis=axis, dtype=dtype, out=out, ddof=ddof,
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:221: RuntimeWarning: invalid value encountered in true_divide
  arrmean = um.true_divide(arrmean, div, out=arrmean, casting='unsafe',
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:250: RuntimeWarning: invalid value encountered in true_divide
  ret = um.true_divide(
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:188: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:253: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
================================
data: V3 (extra dim = 1)
condition
{'npolys': [0, 1, 0, 0, 1], 'cmp': ['==', '==', '==', '==', '==']}
================================
================================
data: V3 (extra dim = 1)
condition
{'npolys': [0, 1, 0, 0, 1], 'cmp': ['==', '==', '==', '==', '==']}
================================
================================
data: V3 (extra dim = 1)
condition
{'npolys': [0, 1, 0, 0, 1], 'cmp': ['==', '==', '==', '==', '==']}
================================
new range: 0.004600100000000002, 0.010000100000000001
new range: 0.005180100000000002, 0.010000100000000001
new range: 0.005220100000000002, 0.010000100000000001
new range: 0.004880100000000002, 0.010000100000000001
new range: 0.005220100000000002, 0.010000100000000001
new range: 0.005050100000000002, 0.010000100000000001
new range: 0.0049301000000000015, 0.010000100000000001
new range: 0.004980100000000002, 0.010000100000000001
new range: 0.004370100000000002, 0.010000100000000001
new range: 0.004730100000000002, 0.010000100000000001
new range: 0.004840100000000002, 0.010000100000000001
new range: 0.005280100000000002, 0.010000100000000001
new range: 0.004730100000000002, 0.010000100000000001
new range: 0.0047601000000000015, 0.010000100000000001
new range: 0.005100100000000002, 0.010000100000000001
new range: 0.004380100000000001, 0.010000100000000001
new range: 0.004220100000000002, 0.010000100000000001
new range: 0.0044601000000000016, 0.010000100000000001
new range: 0.004910100000000002, 0.010000100000000001
new range: 0.005200100000000002, 0.010000100000000001
new range: 0.004600100000000002, 0.010000100000000001
new range: 0.005180100000000002, 0.010000100000000001
new range: 0.005220100000000002, 0.010000100000000001
new range: 0.004880100000000002, 0.010000100000000001
new range: 0.005220100000000002, 0.010000100000000001
new range: 0.005050100000000002, 0.010000100000000001
new range: 0.0049301000000000015, 0.010000100000000001
new range: 0.004980100000000002, 0.010000100000000001
new range: 0.004370100000000002, 0.010000100000000001
new range: 0.004730100000000002, 0.010000100000000001
new range: 0.004840100000000002, 0.010000100000000001
new range: 0.005280100000000002, 0.010000100000000001
new range: 0.004730100000000002, 0.010000100000000001
new range: 0.0047601000000000015, 0.010000100000000001
new range: 0.005100100000000002, 0.010000100000000001
new range: 0.004380100000000001, 0.010000100000000001
new range: 0.004220100000000002, 0.010000100000000001
new range: 0.0044601000000000016, 0.010000100000000001
new range: 0.004910100000000002, 0.010000100000000001
new range: 0.005200100000000002, 0.010000100000000001
new range: 0.046001, 0.100001
new range: 0.051801, 0.100001
new range: 0.052201, 0.100001
new range: 0.048801, 0.100001
new range: 0.052201, 0.100001
new range: 0.050501, 0.100001
new range: 0.049301, 0.100001
new range: 0.049801, 0.100001
new range: 0.043701, 0.100001
new range: 0.047301, 0.100001
new range: 0.048401, 0.100001
new range: 0.052801, 0.100001
new range: 0.047301, 0.100001
new range: 0.047601, 0.100001
new range: 0.051001, 0.100001
new range: 0.043801, 0.100001
new range: 0.042201, 0.100001
new range: 0.044601, 0.100001
new range: 0.049101, 0.100001
new range: 0.052001, 0.100001
new range: 0.046001, 0.100001
new range: 0.051801, 0.100001
new range: 0.052201, 0.100001
new range: 0.048801, 0.100001
new range: 0.052201, 0.100001
new range: 0.050501, 0.100001
new range: 0.049301, 0.100001
new range: 0.049801, 0.100001
new range: 0.043701, 0.100001
new range: 0.047301, 0.100001
new range: 0.048401, 0.100001
new range: 0.052801, 0.100001
new range: 0.047301, 0.100001
new range: 0.047601, 0.100001
new range: 0.051001, 0.100001
new range: 0.043801, 0.100001
new range: 0.042201, 0.100001
new range: 0.044601, 0.100001
new range: 0.049101, 0.100001
new range: 0.052001, 0.100001
new range: 0.46001000000000003, 1.0000099999999998
new range: 0.51801, 1.0000099999999998
new range: 0.52201, 1.0000099999999998
new range: 0.48801, 1.0000099999999998
new range: 0.52201, 1.0000099999999998
new range: 0.50501, 1.0000099999999998
new range: 0.49301, 1.0000099999999998
new range: 0.49801, 1.0000099999999998
new range: 0.43701, 1.0000099999999998
new range: 0.47301000000000004, 1.0000099999999998
new range: 0.48401, 1.0000099999999998
new range: 0.52801, 1.0000099999999998
new range: 0.47301000000000004, 1.0000099999999998
new range: 0.47601000000000004, 1.0000099999999998
new range: 0.51001, 1.0000099999999998
new range: 0.43801, 1.0000099999999998
new range: 0.42201, 1.0000099999999998
new range: 0.44601, 1.0000099999999998
new range: 0.49101, 1.0000099999999998
new range: 0.52001, 1.0000099999999998
new range: 0.46001000000000003, 1.0000099999999998
new range: 0.51801, 1.0000099999999998
new range: 0.52201, 1.0000099999999998
new range: 0.48801, 1.0000099999999998
new range: 0.52201, 1.0000099999999998
new range: 0.50501, 1.0000099999999998
new range: 0.49301, 1.0000099999999998
new range: 0.49801, 1.0000099999999998
new range: 0.43701, 1.0000099999999998
new range: 0.47301000000000004, 1.0000099999999998
new range: 0.48401, 1.0000099999999998
new range: 0.52801, 1.0000099999999998
new range: 0.47301000000000004, 1.0000099999999998
new range: 0.47601000000000004, 1.0000099999999998
new range: 0.51001, 1.0000099999999998
new range: 0.43801, 1.0000099999999998
new range: 0.42201, 1.0000099999999998
new range: 0.44601, 1.0000099999999998
new range: 0.49101, 1.0000099999999998
new range: 0.52001, 1.0000099999999998
new range: 4.6001, 10.0001
new range: 5.1801, 10.0001
new range: 5.2201, 10.0001
new range: 4.8801, 10.0001
new range: 5.2201, 10.0001
new range: 5.0501000000000005, 10.0001
new range: 4.9301, 10.0001
new range: 4.9801, 10.0001
new range: 4.3701, 10.0001
new range: 4.7301, 10.0001
new range: 4.8401000000000005, 10.0001
new range: 5.2801, 10.0001
new range: 4.7301, 10.0001
new range: 4.7601, 10.0001
new range: 5.1001, 10.0001
new range: 4.3801, 10.0001
new range: 4.2201, 10.0001
new range: 4.4601, 10.0001
new range: 4.9101, 10.0001
new range: 5.2001, 10.0001
new range: 4.6001, 10.0001
new range: 5.1801, 10.0001
new range: 5.2201, 10.0001
new range: 4.8801, 10.0001
new range: 5.2201, 10.0001
new range: 5.0501000000000005, 10.0001
new range: 4.9301, 10.0001
new range: 4.9801, 10.0001
new range: 4.3701, 10.0001
new range: 4.7301, 10.0001
new range: 4.8401000000000005, 10.0001
new range: 5.2801, 10.0001
new range: 4.7301, 10.0001
new range: 4.7601, 10.0001
new range: 5.1001, 10.0001
new range: 4.3801, 10.0001
new range: 4.2201, 10.0001
new range: 4.4601, 10.0001
new range: 4.9101, 10.0001
new range: 5.2001, 10.0001
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: 46.001, 100.001
new range: 51.801, 100.001
new range: 52.201, 100.001
new range: 48.801, 100.001
new range: 52.201, 100.001
new range: 50.501, 100.001
new range: 49.301, 100.001
new range: 49.801, 100.001
new range: 43.701, 100.001
new range: 47.301, 100.001
new range: 48.400999999999996, 100.001
new range: 52.801, 100.001
new range: 47.301, 100.001
new range: 47.601, 100.001
new range: 51.001, 100.001
new range: 43.801, 100.001
new range: 42.201, 100.001
new range: 44.601, 100.001
new range: 49.101, 100.001
new range: 52.001, 100.001
    scale   method  lb  ub         std coeff dist (std) success rate
0    0.01      abm NaN NaN  (nan, nan)        nan (nan)   0/20(0.0%)
0    0.01  abm-gwn NaN NaN  (nan, nan)        nan (nan)   0/20(0.0%)
0    0.10      abm NaN NaN  (nan, nan)        nan (nan)   0/20(0.0%)
0    0.10  abm-gwn NaN NaN  (nan, nan)        nan (nan)   0/20(0.0%)
0    1.00      abm NaN NaN  (nan, nan)        nan (nan)   0/20(0.0%)
0    1.00  abm-gwn NaN NaN  (nan, nan)        nan (nan)   0/20(0.0%)
0   10.00      abm NaN NaN  (nan, nan)        nan (nan)   0/20(0.0%)
0   10.00  abm-gwn NaN NaN  (nan, nan)        nan (nan)   0/20(0.0%)
0  100.00      abm NaN NaN  (nan, nan)        nan (nan)   0/20(0.0%)
0  100.00  abm-gwn NaN NaN  (nan, nan)        nan (nan)   0/20(0.0%)
[V1, scale=10.0, run #11] abm-gwn: nan,nan
[V1, scale=10.0, run #12] abm-gwn: nan,nan
[V1, scale=10.0, run #13] abm-gwn: nan,nan
[V1, scale=10.0, run #14] abm-gwn: nan,nan
[V1, scale=10.0, run #15] abm-gwn: nan,nan
[V1, scale=10.0, run #16] abm-gwn: nan,nan
[V1, scale=10.0, run #17] abm-gwn: nan,nan
[V1, scale=10.0, run #18] abm-gwn: nan,nan
[V1, scale=10.0, run #19] abm-gwn: nan,nan
[V1, scale=100.0, run #0] abm: nan,nan
[V1, scale=100.0, run #1] abm: nan,nan
[V1, scale=100.0, run #2] abm: nan,nan
[V1, scale=100.0, run #3] abm: nan,nan
[V1, scale=100.0, run #4] abm: nan,nan
[V1, scale=100.0, run #5] abm: nan,nan
[V1, scale=100.0, run #6] abm: nan,nan
[V1, scale=100.0, run #7] abm: nan,nan
[V1, scale=100.0, run #8] abm: nan,nan
[V1, scale=100.0, run #9] abm: nan,nan
[V1, scale=100.0, run #10] abm: nan,nan
[V1, scale=100.0, run #11] abm: nan,nan
[V1, scale=100.0, run #12] abm: nan,nan
[V1, scale=100.0, run #13] abm: nan,nan
[V1, scale=100.0, run #14] abm: nan,nan
[V1, scale=100.0, run #15] abm: nan,nan
[V1, scale=100.0, run #16] abm: nan,nan
[V1, scale=100.0, run #17] abm: nan,nan
[V1, scale=100.0, run #18] abm: nan,nan
[V1, scale=100.0, run #19] abm: nan,nan
[V1, scale=100.0, run #0] abm-gwn: nan,nan
[V1, scale=100.0, run #1] abm-gwn: nan,nan
[V1, scale=100.0, run #2] abm-gwn: nan,nan
[V1, scale=100.0, run #3] abm-gwn: nan,nan
[V1, scale=100.0, run #4] abm-gwn: nan,nan
[V1, scale=100.0, run #5] abm-gwn: nan,nan
[V1, scale=100.0, run #6] abm-gwn: nan,nan
[V1, scale=100.0, run #7] abm-gwn: nan,nan
[V1, scale=100.0, run #8] abm-gwn: nan,nan
[V1, scale=100.0, run #9] abm-gwn: nan,nan
[V1, scale=100.0, run #10] abm-gwn: nan,nan
[V1, scale=100.0, run #11] abm-gwn: nan,nan
[V1, scale=100.0, run #12] abm-gwn: nan,nan
[V1, scale=100.0, run #13] abm-gwn: nan,nan
[V1, scale=100.0, run #14] abm-gwn: nan,nan
[V1, scale=100.0, run #15] abm-gwn: nan,nan
[V1, scale=100.0, run #16] abm-gwn: nan,nan
[V1, scale=100.0, run #17] abm-gwn: nan,nan
[V1, scale=100.0, run #18] abm-gwn: nan,nan
[V1, scale=100.0, run #19] abm-gwn: nan,nan
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/fromnumeric.py:3419: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:180: RuntimeWarning: invalid value encountered in true_divide
  ret = um.true_divide(
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:261: RuntimeWarning: Degrees of freedom <= 0 for slice
  ret = _var(a, axis=axis, dtype=dtype, out=out, ddof=ddof,
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:221: RuntimeWarning: invalid value encountered in true_divide
  arrmean = um.true_divide(arrmean, div, out=arrmean, casting='unsafe',
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:250: RuntimeWarning: invalid value encountered in true_divide
  ret = um.true_divide(
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:188: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/kera/opt/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:253: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
================================
data: V1 (extra dim = 1)
condition
{'npolys': [0, 1, 0, 0, 0, 0, 1], 'cmp': ['==', '==', '==', '==', '==', '==', '==']}
================================
================================
data: V1 (extra dim = 1)
condition
{'npolys': [0, 1, 0, 0, 0, 0, 1], 'cmp': ['==', '==', '==', '==', '==', '==', '==']}
================================
================================
data: V1 (extra dim = 1)
condition
{'npolys': [0, 1, 0, 0, 0, 0, 1], 'cmp': ['==', '==', '==', '==', '==', '==', '==']}
================================
new range: 0.0009801000000000002, 0.010000100000000001
new range: 0.0010001000000000003, 0.010000100000000001
new range: 0.0009401000000000001, 0.010000100000000001
new range: 0.0010401000000000004, 0.010000100000000001
new range: 0.0008801000000000002, 0.010000100000000001
new range: 0.0009101000000000002, 0.010000100000000001
new range: 0.0009001000000000001, 0.010000100000000001
new range: 0.0011801000000000003, 0.010000100000000001
new range: 0.0009801000000000002, 0.010000100000000001
new range: 0.0008401000000000001, 0.010000100000000001
new range: 0.0009601000000000002, 0.010000100000000001
new range: 0.0009501000000000002, 0.010000100000000001
new range: 0.0010301000000000004, 0.010000100000000001
new range: 0.0010001000000000003, 0.010000100000000001
new range: 0.0009001000000000001, 0.010000100000000001
new range: 0.0010201000000000003, 0.010000100000000001
new range: 0.0011301000000000004, 0.010000100000000001
new range: 0.0010101000000000003, 0.010000100000000001
new range: 0.0009901000000000003, 0.010000100000000001
new range: 0.0009001000000000001, 0.010000100000000001
new range: 0.0009801000000000002, 0.010000100000000001
new range: 0.0010001000000000003, 0.010000100000000001
new range: 0.0009401000000000001, 0.010000100000000001
new range: 0.0010401000000000004, 0.010000100000000001
new range: 0.0008801000000000002, 0.010000100000000001
new range: 0.0009101000000000002, 0.010000100000000001
new range: 0.0009001000000000001, 0.010000100000000001
new range: 0.0011801000000000003, 0.010000100000000001
new range: 0.0009801000000000002, 0.010000100000000001
new range: 0.0008401000000000001, 0.010000100000000001
new range: 0.0009601000000000002, 0.010000100000000001
new range: 0.0009501000000000002, 0.010000100000000001
new range: 0.0010301000000000004, 0.010000100000000001
new range: 0.0010001000000000003, 0.010000100000000001
new range: 0.0009001000000000001, 0.010000100000000001
new range: 0.0010201000000000003, 0.010000100000000001
new range: 0.0011301000000000004, 0.010000100000000001
new range: 0.0010101000000000003, 0.010000100000000001
new range: 0.0009901000000000003, 0.010000100000000001
new range: 0.0009001000000000001, 0.010000100000000001
new range: 0.009801, 0.100001
new range: 0.010001000000000001, 0.100001
new range: 0.009401, 0.100001
new range: 0.010401, 0.100001
new range: 0.008801, 0.100001
new range: 0.009101, 0.100001
new range: 0.009001, 0.100001
new range: 0.011801, 0.100001
new range: 0.009801, 0.100001
new range: 0.008401, 0.100001
new range: 0.009601, 0.100001
new range: 0.009501, 0.100001
new range: 0.010301000000000001, 0.100001
new range: 0.010001000000000001, 0.100001
new range: 0.009001, 0.100001
new range: 0.010201, 0.100001
new range: 0.011301, 0.100001
new range: 0.010101, 0.100001
new range: 0.009901, 0.100001
new range: 0.009001, 0.100001
new range: 0.009801, 0.100001
new range: 0.010001000000000001, 0.100001
new range: 0.009401, 0.100001
new range: 0.010401, 0.100001
new range: 0.008801, 0.100001
new range: 0.009101, 0.100001
new range: 0.009001, 0.100001
new range: 0.011801, 0.100001
new range: 0.009801, 0.100001
new range: 0.008401, 0.100001
new range: 0.009601, 0.100001
new range: 0.009501, 0.100001
new range: 0.010301000000000001, 0.100001
new range: 0.010001000000000001, 0.100001
new range: 0.009001, 0.100001
new range: 0.010201, 0.100001
new range: 0.011301, 0.100001
new range: 0.010101, 0.100001
new range: 0.009901, 0.100001
new range: 0.009001, 0.100001
new range: 0.09801, 1.0000099999999998
new range: 0.10001, 1.0000099999999998
new range: 0.09401, 1.0000099999999998
new range: 0.10400999999999999, 1.0000099999999998
new range: 0.08800999999999999, 1.0000099999999998
new range: 0.09101, 1.0000099999999998
new range: 0.09000999999999999, 1.0000099999999998
new range: 0.11801, 1.0000099999999998
new range: 0.09801, 1.0000099999999998
new range: 0.08401, 1.0000099999999998
new range: 0.09601, 1.0000099999999998
new range: 0.09501, 1.0000099999999998
new range: 0.10301, 1.0000099999999998
new range: 0.10001, 1.0000099999999998
new range: 0.09000999999999999, 1.0000099999999998
new range: 0.10201, 1.0000099999999998
new range: 0.11301, 1.0000099999999998
new range: 0.10101, 1.0000099999999998
new range: 0.09901, 1.0000099999999998
new range: 0.09000999999999999, 1.0000099999999998
new range: 0.09801, 1.0000099999999998
new range: 0.10001, 1.0000099999999998
new range: 0.09401, 1.0000099999999998
new range: 0.10400999999999999, 1.0000099999999998
new range: 0.08800999999999999, 1.0000099999999998
new range: 0.09101, 1.0000099999999998
new range: 0.09000999999999999, 1.0000099999999998
new range: 0.11801, 1.0000099999999998
new range: 0.09801, 1.0000099999999998
new range: 0.08401, 1.0000099999999998
new range: 0.09601, 1.0000099999999998
new range: 0.09501, 1.0000099999999998
new range: 0.10301, 1.0000099999999998
new range: 0.10001, 1.0000099999999998
new range: 0.09000999999999999, 1.0000099999999998
new range: 0.10201, 1.0000099999999998
new range: 0.11301, 1.0000099999999998
new range: 0.10101, 1.0000099999999998
new range: 0.09901, 1.0000099999999998
new range: 0.09000999999999999, 1.0000099999999998
new range: 0.9801, 10.0001
new range: 1.0001, 10.0001
new range: 0.9401, 10.0001
new range: 1.0401, 10.0001
new range: 0.8801, 10.0001
new range: 0.9101, 10.0001
new range: 0.9001, 10.0001
new range: 1.1801, 10.0001
new range: 0.9801, 10.0001
new range: 0.8401, 10.0001
new range: 0.9601, 10.0001
new range: 0.9501, 10.0001
new range: 1.0301, 10.0001
new range: 1.0001, 10.0001
new range: 0.9001, 10.0001
new range: 1.0201, 10.0001
new range: 1.1301, 10.0001
new range: 1.0101, 10.0001
new range: 0.9901, 10.0001
new range: 0.9001, 10.0001
new range: 0.9801, 10.0001
new range: 1.0001, 10.0001
new range: 0.9401, 10.0001
new range: 1.0401, 10.0001
new range: 0.8801, 10.0001
new range: 0.9101, 10.0001
new range: 0.9001, 10.0001
new range: 1.1801, 10.0001
new range: 0.9801, 10.0001
new range: 0.8401, 10.0001
new range: 0.9601, 10.0001
new range: 0.9501, 10.0001
new range: 1.0301, 10.0001
new range: 1.0001, 10.0001
new range: 0.9001, 10.0001
new range: 1.0201, 10.0001
new range: 1.1301, 10.0001
new range: 1.0101, 10.0001
new range: 0.9901, 10.0001
new range: 0.9001, 10.0001
new range: 9.801, 10.001
new range: nan, nan
new range: 9.401, 10.001
new range: nan, nan
new range: 8.801, 10.001
new range: 9.101, 10.001
new range: 9.001, 10.001
new range: nan, nan
new range: 9.801, 10.001
new range: 8.401, 10.001
new range: 9.601, 10.001
new range: 9.501000000000001, 10.001
new range: nan, nan
new range: nan, nan
new range: 9.001, 10.001
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: nan, nan
new range: 9.001, 10.001
new range: 9.801, 100.001
new range: 10.001000000000001, 100.001
new range: 9.401, 100.001
new range: 10.401, 100.001
new range: 8.801, 100.001
new range: 9.101, 100.001
new range: 9.001, 100.001
new range: 11.801, 100.001
new range: 9.801, 100.001
new range: 8.401, 100.001
new range: 9.601, 100.001
new range: 9.501000000000001, 100.001
new range: 10.301, 100.001
new range: 10.001000000000001, 100.001
new range: 9.001, 100.001
new range: 10.201, 100.001
new range: 11.301, 100.001
new range: 10.101, 100.001
new range: 9.901, 100.001
new range: 9.001, 100.001
    scale   method  ...                            coeff dist (std)   success rate
0    0.01      abm  ...                                   nan (nan)     0/20(0.0%)
0    0.01  abm-gwn  ...                                   nan (nan)     0/20(0.0%)
0    0.10      abm  ...                                   nan (nan)     0/20(0.0%)
0    0.10  abm-gwn  ...                                   nan (nan)     0/20(0.0%)
0    1.00      abm  ...                                   nan (nan)     0/20(0.0%)
0    1.00  abm-gwn  ...                                   nan (nan)     0/20(0.0%)
0   10.00      abm  ...  1.0977868341125308 (0.0007678995831774515)  20/20(100.0%)
0   10.00  abm-gwn  ...                                   nan (nan)     0/20(0.0%)
0  100.00      abm  ...                                   nan (nan)     0/20(0.0%)
0  100.00  abm-gwn  ...                                   nan (nan)     0/20(0.0%)

[10 rows x 7 columns]
